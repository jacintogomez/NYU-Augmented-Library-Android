{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"calendarStyle\", \"horizontal\", \"calendarWidth\", \"testID\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { extractComponentProps } from \"../componentUpdater\";\nimport { xdateToData, parseDate } from \"../interface\";\nimport { page, sameDate, sameMonth } from \"../dateutils\";\nimport { STATIC_HEADER } from \"../testIDs\";\nimport styleConstructor from \"./style\";\nimport Calendar from \"../calendar\";\nimport CalendarListItem from \"./item\";\nimport CalendarHeader from \"../calendar/header/index\";\nimport constants from \"../commons/constants\";\nvar CALENDAR_WIDTH = constants.screenWidth;\nvar CALENDAR_HEIGHT = 360;\nvar PAST_SCROLL_RANGE = 50;\nvar FUTURE_SCROLL_RANGE = 50;\nvar CalendarList = function (_Component) {\n  _inherits(CalendarList, _Component);\n  var _super = _createSuper(CalendarList);\n  function CalendarList(props) {\n    var _this;\n    _classCallCheck(this, CalendarList);\n    _this = _super.call(this, props);\n    _this.list = React.createRef();\n    _this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n    _this.scrollToMonth = function (m) {\n      var _this$list, _this$list$current;\n      var _this$props = _this.props,\n        horizontal = _this$props.horizontal,\n        _this$props$calendarH = _this$props.calendarHeight,\n        calendarHeight = _this$props$calendarH === void 0 ? CALENDAR_HEIGHT : _this$props$calendarH,\n        _this$props$calendarW = _this$props.calendarWidth,\n        calendarWidth = _this$props$calendarW === void 0 ? CALENDAR_WIDTH : _this$props$calendarW,\n        _this$props$pastScrol = _this$props.pastScrollRange,\n        pastScrollRange = _this$props$pastScrol === void 0 ? PAST_SCROLL_RANGE : _this$props$pastScrol,\n        _this$props$animateSc = _this$props.animateScroll,\n        animateScroll = _this$props$animateSc === void 0 ? false : _this$props$animateSc;\n      var month = parseDate(m);\n      var scrollTo = month || _this.state.openDate;\n      var diffMonths = Math.round(_this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));\n      var size = horizontal ? calendarWidth : calendarHeight;\n      var scrollAmount = size * pastScrollRange + diffMonths * size;\n      (_this$list = _this.list) == null ? void 0 : (_this$list$current = _this$list.current) == null ? void 0 : _this$list$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animateScroll\n      });\n    };\n    _this.getItemLayout = function (_, index) {\n      var _this$props2 = _this.props,\n        horizontal = _this$props2.horizontal,\n        _this$props2$calendar = _this$props2.calendarHeight,\n        calendarHeight = _this$props2$calendar === void 0 ? CALENDAR_HEIGHT : _this$props2$calendar,\n        _this$props2$calendar2 = _this$props2.calendarWidth,\n        calendarWidth = _this$props2$calendar2 === void 0 ? CALENDAR_WIDTH : _this$props2$calendar2;\n      var size = horizontal ? calendarWidth : calendarHeight;\n      return {\n        length: size,\n        offset: size * index,\n        index: index\n      };\n    };\n    _this.addMonth = function (count) {\n      _this.updateMonth(_this.state.currentMonth.clone().addMonths(count, true));\n    };\n    _this.onViewableItemsChanged = function (_ref) {\n      var viewableItems = _ref.viewableItems;\n      function rowIsCloseToViewable(index, distance) {\n        for (var i = 0; i < viewableItems.length; i++) {\n          if (Math.abs(index - parseInt(viewableItems[i].index)) <= distance) {\n            return true;\n          }\n        }\n        return false;\n      }\n      var rowclone = _this.state.rows;\n      var newrows = [];\n      var visibleMonths = [];\n      for (var i = 0; i < rowclone.length; i++) {\n        var val = rowclone[i];\n        var rowShouldBeRendered = rowIsCloseToViewable(i, 1);\n        var _this$props$pastScrol2 = _this.props.pastScrollRange,\n          pastScrollRange = _this$props$pastScrol2 === void 0 ? PAST_SCROLL_RANGE : _this$props$pastScrol2;\n        if (rowShouldBeRendered && !rowclone[i].getTime) {\n          val = _this.state.openDate.clone().addMonths(i - pastScrollRange, true);\n        } else if (!rowShouldBeRendered) {\n          val = _this.state.texts[i];\n        }\n        newrows.push(val);\n        if (rowIsCloseToViewable(i, 0)) {\n          var v = val instanceof XDate ? val : new XDate(val);\n          visibleMonths.push(xdateToData(v));\n        }\n      }\n      _this.props.onVisibleMonthsChange == null ? void 0 : _this.props.onVisibleMonthsChange(visibleMonths);\n      _this.setState({\n        rows: newrows,\n        currentMonth: parseDate(visibleMonths[0])\n      });\n    };\n    _this.renderItem = function (_ref2) {\n      var item = _ref2.item;\n      var _this$props3 = _this.props,\n        calendarStyle = _this$props3.calendarStyle,\n        horizontal = _this$props3.horizontal,\n        calendarWidth = _this$props3.calendarWidth,\n        testID = _this$props3.testID,\n        others = _objectWithoutProperties(_this$props3, _excluded);\n      return React.createElement(CalendarListItem, _extends({}, others, {\n        item: item,\n        testID: testID + \"_\" + item,\n        style: calendarStyle,\n        horizontal: horizontal,\n        calendarWidth: horizontal ? calendarWidth : undefined,\n        scrollToMonth: _this.scrollToMonth\n      }));\n    };\n    _this.style = styleConstructor(props.theme);\n    var rows = [];\n    var texts = [];\n    var date = parseDate(props.current) || new XDate();\n    var _props$pastScrollRang = props.pastScrollRange,\n      _pastScrollRange = _props$pastScrollRang === void 0 ? PAST_SCROLL_RANGE : _props$pastScrollRang,\n      _props$futureScrollRa = props.futureScrollRange,\n      futureScrollRange = _props$futureScrollRa === void 0 ? FUTURE_SCROLL_RANGE : _props$futureScrollRa;\n    for (var i = 0; i <= _pastScrollRange + futureScrollRange; i++) {\n      var rangeDate = date.clone().addMonths(i - _pastScrollRange, true);\n      var rangeDateStr = rangeDate.toString('MMM yyyy');\n      texts.push(rangeDateStr);\n      if (_pastScrollRange - 1 <= i && i <= _pastScrollRange + 1 || !_pastScrollRange && i <= _pastScrollRange + 2) {\n        rows.push(rangeDate);\n      } else {\n        rows.push(rangeDateStr);\n      }\n    }\n    _this.state = {\n      rows: rows,\n      texts: texts,\n      openDate: date,\n      currentMonth: parseDate(props.current)\n    };\n    return _this;\n  }\n  _createClass(CalendarList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevCurrent = parseDate(prevProps.current);\n      var current = parseDate(this.props.current);\n      if (current && prevCurrent && current.getTime() !== prevCurrent.getTime()) {\n        this.scrollToMonth(current);\n      }\n    }\n  }, {\n    key: \"scrollToDay\",\n    value: function scrollToDay(d, offset, animated) {\n      var _this$list2, _this$list2$current;\n      var _this$props4 = this.props,\n        horizontal = _this$props4.horizontal,\n        _this$props4$calendar = _this$props4.calendarHeight,\n        calendarHeight = _this$props4$calendar === void 0 ? CALENDAR_HEIGHT : _this$props4$calendar,\n        _this$props4$calendar2 = _this$props4.calendarWidth,\n        calendarWidth = _this$props4$calendar2 === void 0 ? CALENDAR_WIDTH : _this$props4$calendar2,\n        _this$props4$pastScro = _this$props4.pastScrollRange,\n        pastScrollRange = _this$props4$pastScro === void 0 ? PAST_SCROLL_RANGE : _this$props4$pastScro,\n        firstDay = _this$props4.firstDay;\n      var day = parseDate(d);\n      var diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));\n      var size = horizontal ? calendarWidth : calendarHeight;\n      var scrollAmount = size * pastScrollRange + diffMonths * size + (offset || 0);\n      if (!horizontal) {\n        var week = 0;\n        var days = page(day, firstDay);\n        for (var i = 0; i < days.length; i++) {\n          week = Math.floor(i / 7);\n          if (sameDate(days[i], day)) {\n            scrollAmount += 46 * week;\n            break;\n          }\n        }\n      }\n      (_this$list2 = this.list) == null ? void 0 : (_this$list2$current = _this$list2.current) == null ? void 0 : _this$list2$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"getMonthIndex\",\n    value: function getMonthIndex(month) {\n      var _this$props$pastScrol3 = this.props.pastScrollRange,\n        pastScrollRange = _this$props$pastScrol3 === void 0 ? PAST_SCROLL_RANGE : _this$props$pastScrol3;\n      var diffMonths = this.state.openDate.diffMonths(month) + pastScrollRange;\n      return diffMonths;\n    }\n  }, {\n    key: \"updateMonth\",\n    value: function updateMonth(day) {\n      var _this2 = this;\n      if (sameMonth(day, this.state.currentMonth)) {\n        return;\n      }\n      this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        _this2.scrollToMonth(_this2.state.currentMonth);\n        var currMont = _this2.state.currentMonth.clone();\n        _this2.props.onMonthChange == null ? void 0 : _this2.props.onMonthChange(xdateToData(currMont));\n        _this2.props.onVisibleMonthsChange == null ? void 0 : _this2.props.onVisibleMonthsChange([xdateToData(currMont)]);\n      });\n    }\n  }, {\n    key: \"renderStaticHeader\",\n    value: function renderStaticHeader() {\n      var _this$props5 = this.props,\n        staticHeader = _this$props5.staticHeader,\n        horizontal = _this$props5.horizontal,\n        headerStyle = _this$props5.headerStyle;\n      var useStaticHeader = staticHeader && horizontal;\n      var headerProps = extractComponentProps(CalendarHeader, this.props);\n      if (useStaticHeader) {\n        return React.createElement(CalendarHeader, _extends({}, headerProps, {\n          testID: STATIC_HEADER,\n          style: [this.style.staticHeader, headerStyle],\n          month: this.state.currentMonth,\n          addMonth: this.addMonth,\n          accessibilityElementsHidden: true,\n          importantForAccessibility: 'no-hide-descendants'\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n        style = _this$props6.style,\n        pastScrollRange = _this$props6.pastScrollRange,\n        futureScrollRange = _this$props6.futureScrollRange,\n        horizontal = _this$props6.horizontal,\n        showScrollIndicator = _this$props6.showScrollIndicator;\n      return React.createElement(View, {\n        style: this.style.flatListContainer\n      }, React.createElement(FlatList, {\n        ref: this.list,\n        style: [this.style.container, style]\n        ,\n        initialListSize: pastScrollRange + futureScrollRange + 1,\n        data: this.state.rows,\n        renderItem: this.renderItem,\n        getItemLayout: this.getItemLayout,\n        onViewableItemsChanged: this.onViewableItemsChanged,\n        viewabilityConfig: this.viewabilityConfig,\n        initialScrollIndex: this.state.openDate ? this.getMonthIndex(this.state.openDate) : undefined,\n        showsVerticalScrollIndicator: showScrollIndicator,\n        showsHorizontalScrollIndicator: horizontal && showScrollIndicator,\n        testID: this.props.testID,\n        onLayout: this.props.onLayout,\n        removeClippedSubviews: this.props.removeClippedSubviews,\n        pagingEnabled: this.props.pagingEnabled,\n        scrollEnabled: this.props.scrollEnabled,\n        scrollsToTop: this.props.scrollsToTop,\n        horizontal: this.props.horizontal,\n        keyboardShouldPersistTaps: this.props.keyboardShouldPersistTaps,\n        keyExtractor: this.props.keyExtractor,\n        onEndReachedThreshold: this.props.onEndReachedThreshold,\n        onEndReached: this.props.onEndReached\n      }), this.renderStaticHeader());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_, prevState) {\n      var rowClone = prevState.rows;\n      var newRows = [];\n      for (var i = 0; i < rowClone.length; i++) {\n        var val = prevState.texts[i];\n        if (rowClone[i].getTime) {\n          val = rowClone[i].clone();\n          val.propBump = rowClone[i].propBump ? rowClone[i].propBump + 1 : 1;\n        }\n        newRows.push(val);\n      }\n      return {\n        rows: newRows\n      };\n    }\n  }]);\n  return CalendarList;\n}(Component);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = _objectSpread(_objectSpread({}, Calendar.propTypes), {}, {\n  pastScrollRange: PropTypes.number,\n  futureScrollRange: PropTypes.number,\n  calendarWidth: PropTypes.number,\n  calendarHeight: PropTypes.number,\n  calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticHeader: PropTypes.bool,\n  showScrollIndicator: PropTypes.bool,\n  animateScroll: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  scrollsToTop: PropTypes.bool,\n  pagingEnabled: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  keyExtractor: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onEndReached: PropTypes.func\n});\nCalendarList.defaultProps = {\n  calendarWidth: CALENDAR_WIDTH,\n  calendarHeight: CALENDAR_HEIGHT,\n  pastScrollRange: PAST_SCROLL_RANGE,\n  futureScrollRange: FUTURE_SCROLL_RANGE,\n  showScrollIndicator: false,\n  horizontal: false,\n  scrollsToTop: false,\n  scrollEnabled: true,\n  removeClippedSubviews: constants.isAndroid,\n  keyExtractor: function keyExtractor(_, index) {\n    return String(index);\n  }\n};\nexport default CalendarList;","map":{"version":3,"names":["PropTypes","XDate","React","Component","extractComponentProps","xdateToData","parseDate","page","sameDate","sameMonth","STATIC_HEADER","styleConstructor","Calendar","CalendarListItem","CalendarHeader","constants","CALENDAR_WIDTH","screenWidth","CALENDAR_HEIGHT","PAST_SCROLL_RANGE","FUTURE_SCROLL_RANGE","CalendarList","props","list","createRef","viewabilityConfig","itemVisiblePercentThreshold","scrollToMonth","m","horizontal","calendarHeight","calendarWidth","pastScrollRange","animateScroll","month","scrollTo","state","openDate","diffMonths","Math","round","clone","setDate","size","scrollAmount","current","scrollToOffset","offset","animated","getItemLayout","_","index","length","addMonth","count","updateMonth","currentMonth","addMonths","onViewableItemsChanged","viewableItems","rowIsCloseToViewable","distance","i","abs","parseInt","rowclone","rows","newrows","visibleMonths","val","rowShouldBeRendered","getTime","texts","push","v","onVisibleMonthsChange","setState","renderItem","item","calendarStyle","testID","others","undefined","style","theme","date","futureScrollRange","rangeDate","rangeDateStr","toString","prevProps","prevCurrent","d","firstDay","day","week","days","floor","currMont","onMonthChange","staticHeader","headerStyle","useStaticHeader","headerProps","showScrollIndicator","flatListContainer","container","getMonthIndex","onLayout","removeClippedSubviews","pagingEnabled","scrollEnabled","scrollsToTop","keyboardShouldPersistTaps","keyExtractor","onEndReachedThreshold","onEndReached","renderStaticHeader","prevState","rowClone","newRows","propBump","displayName","propTypes","number","oneOfType","object","array","bool","oneOf","func","defaultProps","isAndroid","String"],"sources":["C:/Users/letha/WebstormProjects/NYU-Library-Frontend/node_modules/react-native-calendars/src/calendar-list/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { FlatList, View } from 'react-native';\nimport { extractComponentProps } from '../componentUpdater';\nimport { xdateToData, parseDate } from '../interface';\nimport { page, sameDate, sameMonth } from '../dateutils';\n// @ts-expect-error\nimport { STATIC_HEADER } from '../testIDs';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nimport constants from '../commons/constants';\nconst CALENDAR_WIDTH = constants.screenWidth;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar-list.gif\n */\nclass CalendarList extends Component {\n    static displayName = 'CalendarList';\n    static propTypes = {\n        ...Calendar.propTypes,\n        pastScrollRange: PropTypes.number,\n        futureScrollRange: PropTypes.number,\n        calendarWidth: PropTypes.number,\n        calendarHeight: PropTypes.number,\n        calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n        staticHeader: PropTypes.bool,\n        showScrollIndicator: PropTypes.bool,\n        animateScroll: PropTypes.bool,\n        scrollEnabled: PropTypes.bool,\n        scrollsToTop: PropTypes.bool,\n        pagingEnabled: PropTypes.bool,\n        horizontal: PropTypes.bool,\n        keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n        keyExtractor: PropTypes.func,\n        onEndReachedThreshold: PropTypes.number,\n        onEndReached: PropTypes.func\n    };\n    static defaultProps = {\n        calendarWidth: CALENDAR_WIDTH,\n        calendarHeight: CALENDAR_HEIGHT,\n        pastScrollRange: PAST_SCROLL_RANGE,\n        futureScrollRange: FUTURE_SCROLL_RANGE,\n        showScrollIndicator: false,\n        horizontal: false,\n        scrollsToTop: false,\n        scrollEnabled: true,\n        removeClippedSubviews: constants.isAndroid,\n        keyExtractor: (_, index) => String(index)\n    };\n    style;\n    list = React.createRef();\n    viewabilityConfig = {\n        itemVisiblePercentThreshold: 20\n    };\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n        const rows = [];\n        const texts = [];\n        const date = parseDate(props.current) || new XDate();\n        const { pastScrollRange = PAST_SCROLL_RANGE, futureScrollRange = FUTURE_SCROLL_RANGE } = props;\n        for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n            const rangeDate = date.clone().addMonths(i - pastScrollRange, true);\n            const rangeDateStr = rangeDate.toString('MMM yyyy');\n            texts.push(rangeDateStr);\n            /*\n             * This selects range around current shown month [-0, +2] or [-1, +1] month for detail calendar rendering.\n             * If `this.pastScrollRange` is `undefined` it's equal to `false` or 0 in next condition.\n             */\n            if ((pastScrollRange - 1 <= i && i <= pastScrollRange + 1) ||\n                (!pastScrollRange && i <= pastScrollRange + 2)) {\n                rows.push(rangeDate);\n            }\n            else {\n                rows.push(rangeDateStr);\n            }\n        }\n        this.state = {\n            rows,\n            texts,\n            openDate: date,\n            currentMonth: parseDate(props.current)\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const prevCurrent = parseDate(prevProps.current);\n        const current = parseDate(this.props.current);\n        if (current && prevCurrent && current.getTime() !== prevCurrent.getTime()) {\n            this.scrollToMonth(current);\n        }\n    }\n    static getDerivedStateFromProps(_, prevState) {\n        const rowClone = prevState.rows;\n        const newRows = [];\n        for (let i = 0; i < rowClone.length; i++) {\n            let val = prevState.texts[i];\n            // @ts-expect-error\n            if (rowClone[i].getTime) {\n                val = rowClone[i].clone();\n                // @ts-expect-error\n                val.propBump = rowClone[i].propBump ? rowClone[i].propBump + 1 : 1;\n            }\n            newRows.push(val);\n        }\n        return { rows: newRows };\n    }\n    scrollToDay(d, offset, animated) {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, pastScrollRange = PAST_SCROLL_RANGE, firstDay } = this.props;\n        const day = parseDate(d);\n        const diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));\n        const size = horizontal ? calendarWidth : calendarHeight;\n        let scrollAmount = size * pastScrollRange + diffMonths * size + (offset || 0);\n        if (!horizontal) {\n            let week = 0;\n            const days = page(day, firstDay);\n            for (let i = 0; i < days.length; i++) {\n                week = Math.floor(i / 7);\n                if (sameDate(days[i], day)) {\n                    scrollAmount += 46 * week;\n                    break;\n                }\n            }\n        }\n        this.list?.current?.scrollToOffset({ offset: scrollAmount, animated });\n    }\n    scrollToMonth = (m) => {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, pastScrollRange = PAST_SCROLL_RANGE, animateScroll = false } = this.props;\n        const month = parseDate(m);\n        const scrollTo = month || this.state.openDate;\n        const diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));\n        const size = horizontal ? calendarWidth : calendarHeight;\n        const scrollAmount = size * pastScrollRange + diffMonths * size;\n        this.list?.current?.scrollToOffset({ offset: scrollAmount, animated: animateScroll });\n    };\n    getItemLayout = (_, index) => {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH } = this.props;\n        const size = horizontal ? calendarWidth : calendarHeight;\n        return {\n            length: size,\n            offset: size * index,\n            index\n        };\n    };\n    getMonthIndex(month) {\n        const { pastScrollRange = PAST_SCROLL_RANGE } = this.props;\n        const diffMonths = this.state.openDate.diffMonths(month) + pastScrollRange;\n        return diffMonths;\n    }\n    addMonth = (count) => {\n        this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n    };\n    updateMonth(day) {\n        if (sameMonth(day, this.state.currentMonth)) {\n            return;\n        }\n        this.setState({ currentMonth: day.clone() }, () => {\n            this.scrollToMonth(this.state.currentMonth);\n            const currMont = this.state.currentMonth.clone();\n            this.props.onMonthChange?.(xdateToData(currMont));\n            this.props.onVisibleMonthsChange?.([xdateToData(currMont)]);\n        });\n    }\n    onViewableItemsChanged = ({ viewableItems }) => {\n        function rowIsCloseToViewable(index, distance) {\n            for (let i = 0; i < viewableItems.length; i++) {\n                if (Math.abs(index - parseInt(viewableItems[i].index)) <= distance) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        const rowclone = this.state.rows;\n        const newrows = [];\n        const visibleMonths = [];\n        for (let i = 0; i < rowclone.length; i++) {\n            let val = rowclone[i];\n            const rowShouldBeRendered = rowIsCloseToViewable(i, 1);\n            const { pastScrollRange = PAST_SCROLL_RANGE } = this.props;\n            if (rowShouldBeRendered && !rowclone[i].getTime) {\n                val = this.state.openDate.clone().addMonths(i - pastScrollRange, true);\n            }\n            else if (!rowShouldBeRendered) {\n                val = this.state.texts[i];\n            }\n            newrows.push(val);\n            if (rowIsCloseToViewable(i, 0)) {\n                const v = (val instanceof XDate) ? val : new XDate(val);\n                visibleMonths.push(xdateToData(v));\n            }\n        }\n        this.props.onVisibleMonthsChange?.(visibleMonths);\n        this.setState({\n            // @ts-expect-error\n            rows: newrows,\n            currentMonth: parseDate(visibleMonths[0])\n        });\n    };\n    renderItem = ({ item }) => {\n        const { calendarStyle, horizontal, calendarWidth, testID, ...others } = this.props;\n        return (<CalendarListItem {...others} item={item} testID={`${testID}_${item}`} style={calendarStyle} horizontal={horizontal} calendarWidth={horizontal ? calendarWidth : undefined} scrollToMonth={this.scrollToMonth}/>);\n    };\n    renderStaticHeader() {\n        const { staticHeader, horizontal, headerStyle } = this.props;\n        const useStaticHeader = staticHeader && horizontal;\n        const headerProps = extractComponentProps(CalendarHeader, this.props);\n        if (useStaticHeader) {\n            return (<CalendarHeader {...headerProps} testID={STATIC_HEADER} style={[this.style.staticHeader, headerStyle]} month={this.state.currentMonth} addMonth={this.addMonth} accessibilityElementsHidden={true} // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n            />);\n        }\n    }\n    render() {\n        const { style, pastScrollRange, futureScrollRange, horizontal, showScrollIndicator } = this.props;\n        return (<View style={this.style.flatListContainer}>\n        <FlatList ref={this.list} style={[this.style.container, style]} \n        // @ts-expect-error\n        initialListSize={pastScrollRange + futureScrollRange + 1} // ListView deprecated\n         data={this.state.rows} renderItem={this.renderItem} getItemLayout={this.getItemLayout} onViewableItemsChanged={this.onViewableItemsChanged} viewabilityConfig={this.viewabilityConfig} initialScrollIndex={this.state.openDate ? this.getMonthIndex(this.state.openDate) : undefined} showsVerticalScrollIndicator={showScrollIndicator} showsHorizontalScrollIndicator={horizontal && showScrollIndicator} testID={this.props.testID} onLayout={this.props.onLayout} removeClippedSubviews={this.props.removeClippedSubviews} pagingEnabled={this.props.pagingEnabled} scrollEnabled={this.props.scrollEnabled} scrollsToTop={this.props.scrollsToTop} horizontal={this.props.horizontal} keyboardShouldPersistTaps={this.props.keyboardShouldPersistTaps} keyExtractor={this.props.keyExtractor} onEndReachedThreshold={this.props.onEndReachedThreshold} onEndReached={this.props.onEndReached}/>\n        {this.renderStaticHeader()}\n      </View>);\n    }\n}\nexport default CalendarList;\n"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAEzC,SAASC,qBAAqB;AAC9B,SAASC,WAAW,EAAEC,SAAS;AAC/B,SAASC,IAAI,EAAEC,QAAQ,EAAEC,SAAS;AAElC,SAASC,aAAa;AACtB,OAAOC,gBAAgB;AACvB,OAAOC,QAAQ;AACf,OAAOC,gBAAgB;AACvB,OAAOC,cAAc;AACrB,OAAOC,SAAS;AAChB,IAAMC,cAAc,GAAGD,SAAS,CAACE,WAAW;AAC5C,IAAMC,eAAe,GAAG,GAAG;AAC3B,IAAMC,iBAAiB,GAAG,EAAE;AAC5B,IAAMC,mBAAmB,GAAG,EAAE;AAAC,IAQzBC,YAAY;EAAA;EAAA;EAsCd,sBAAYC,KAAK,EAAE;IAAA;IAAA;IACf,0BAAMA,KAAK;IAAE,MALjBC,IAAI,GAAGrB,KAAK,CAACsB,SAAS,EAAE;IAAA,MACxBC,iBAAiB,GAAG;MAChBC,2BAA2B,EAAE;IACjC,CAAC;IAAA,MAwEDC,aAAa,GAAG,UAACC,CAAC,EAAK;MAAA;MACnB,kBAAqJ,MAAKN,KAAK;QAAvJO,UAAU,eAAVA,UAAU;QAAA,oCAAEC,cAAc;QAAdA,cAAc,sCAAGZ,eAAe;QAAA,oCAAEa,aAAa;QAAbA,aAAa,sCAAGf,cAAc;QAAA,oCAAEgB,eAAe;QAAfA,eAAe,sCAAGb,iBAAiB;QAAA,oCAAEc,aAAa;QAAbA,aAAa,sCAAG,KAAK;MAChJ,IAAMC,KAAK,GAAG5B,SAAS,CAACsB,CAAC,CAAC;MAC1B,IAAMO,QAAQ,GAAGD,KAAK,IAAI,MAAKE,KAAK,CAACC,QAAQ;MAC7C,IAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC,MAAKJ,KAAK,CAACC,QAAQ,CAACI,KAAK,EAAE,CAACC,OAAO,CAAC,CAAC,CAAC,CAACJ,UAAU,CAACH,QAAQ,CAACM,KAAK,EAAE,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7G,IAAMC,IAAI,GAAGd,UAAU,GAAGE,aAAa,GAAGD,cAAc;MACxD,IAAMc,YAAY,GAAGD,IAAI,GAAGX,eAAe,GAAGM,UAAU,GAAGK,IAAI;MAC/D,oBAAKpB,IAAI,2CAAT,WAAWsB,OAAO,qBAAlB,mBAAoBC,cAAc,CAAC;QAAEC,MAAM,EAAEH,YAAY;QAAEI,QAAQ,EAAEf;MAAc,CAAC,CAAC;IACzF,CAAC;IAAA,MACDgB,aAAa,GAAG,UAACC,CAAC,EAAEC,KAAK,EAAK;MAC1B,mBAAyF,MAAK7B,KAAK;QAA3FO,UAAU,gBAAVA,UAAU;QAAA,qCAAEC,cAAc;QAAdA,cAAc,sCAAGZ,eAAe;QAAA,sCAAEa,aAAa;QAAbA,aAAa,uCAAGf,cAAc;MACpF,IAAM2B,IAAI,GAAGd,UAAU,GAAGE,aAAa,GAAGD,cAAc;MACxD,OAAO;QACHsB,MAAM,EAAET,IAAI;QACZI,MAAM,EAAEJ,IAAI,GAAGQ,KAAK;QACpBA,KAAK,EAALA;MACJ,CAAC;IACL,CAAC;IAAA,MAMDE,QAAQ,GAAG,UAACC,KAAK,EAAK;MAClB,MAAKC,WAAW,CAAC,MAAKnB,KAAK,CAACoB,YAAY,CAACf,KAAK,EAAE,CAACgB,SAAS,CAACH,KAAK,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IAAA,MAYDI,sBAAsB,GAAG,gBAAuB;MAAA,IAApBC,aAAa,QAAbA,aAAa;MACrC,SAASC,oBAAoB,CAACT,KAAK,EAAEU,QAAQ,EAAE;QAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,aAAa,CAACP,MAAM,EAAEU,CAAC,EAAE,EAAE;UAC3C,IAAIvB,IAAI,CAACwB,GAAG,CAACZ,KAAK,GAAGa,QAAQ,CAACL,aAAa,CAACG,CAAC,CAAC,CAACX,KAAK,CAAC,CAAC,IAAIU,QAAQ,EAAE;YAChE,OAAO,IAAI;UACf;QACJ;QACA,OAAO,KAAK;MAChB;MACA,IAAMI,QAAQ,GAAG,MAAK7B,KAAK,CAAC8B,IAAI;MAChC,IAAMC,OAAO,GAAG,EAAE;MAClB,IAAMC,aAAa,GAAG,EAAE;MACxB,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,QAAQ,CAACb,MAAM,EAAEU,CAAC,EAAE,EAAE;QACtC,IAAIO,GAAG,GAAGJ,QAAQ,CAACH,CAAC,CAAC;QACrB,IAAMQ,mBAAmB,GAAGV,oBAAoB,CAACE,CAAC,EAAE,CAAC,CAAC;QACtD,6BAAgD,MAAKxC,KAAK,CAAlDU,eAAe;UAAfA,eAAe,uCAAGb,iBAAiB;QAC3C,IAAImD,mBAAmB,IAAI,CAACL,QAAQ,CAACH,CAAC,CAAC,CAACS,OAAO,EAAE;UAC7CF,GAAG,GAAG,MAAKjC,KAAK,CAACC,QAAQ,CAACI,KAAK,EAAE,CAACgB,SAAS,CAACK,CAAC,GAAG9B,eAAe,EAAE,IAAI,CAAC;QAC1E,CAAC,MACI,IAAI,CAACsC,mBAAmB,EAAE;UAC3BD,GAAG,GAAG,MAAKjC,KAAK,CAACoC,KAAK,CAACV,CAAC,CAAC;QAC7B;QACAK,OAAO,CAACM,IAAI,CAACJ,GAAG,CAAC;QACjB,IAAIT,oBAAoB,CAACE,CAAC,EAAE,CAAC,CAAC,EAAE;UAC5B,IAAMY,CAAC,GAAIL,GAAG,YAAYpE,KAAK,GAAIoE,GAAG,GAAG,IAAIpE,KAAK,CAACoE,GAAG,CAAC;UACvDD,aAAa,CAACK,IAAI,CAACpE,WAAW,CAACqE,CAAC,CAAC,CAAC;QACtC;MACJ;MACA,MAAKpD,KAAK,CAACqD,qBAAqB,oBAAhC,MAAKrD,KAAK,CAACqD,qBAAqB,CAAGP,aAAa,CAAC;MACjD,MAAKQ,QAAQ,CAAC;QAEVV,IAAI,EAAEC,OAAO;QACbX,YAAY,EAAElD,SAAS,CAAC8D,aAAa,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC;IACN,CAAC;IAAA,MACDS,UAAU,GAAG,iBAAc;MAAA,IAAXC,IAAI,SAAJA,IAAI;MAChB,mBAAwE,MAAKxD,KAAK;QAA1EyD,aAAa,gBAAbA,aAAa;QAAElD,UAAU,gBAAVA,UAAU;QAAEE,aAAa,gBAAbA,aAAa;QAAEiD,MAAM,gBAANA,MAAM;QAAKC,MAAM;MACnE,OAAQ,oBAAC,gBAAgB,eAAKA,MAAM;QAAE,IAAI,EAAEH,IAAK;QAAC,MAAM,EAAKE,MAAM,SAAIF,IAAO;QAAC,KAAK,EAAEC,aAAc;QAAC,UAAU,EAAElD,UAAW;QAAC,aAAa,EAAEA,UAAU,GAAGE,aAAa,GAAGmD,SAAU;QAAC,aAAa,EAAE,MAAKvD;MAAc,GAAE;IAC5N,CAAC;IAhJG,MAAKwD,KAAK,GAAGxE,gBAAgB,CAACW,KAAK,CAAC8D,KAAK,CAAC;IAC1C,IAAMlB,IAAI,GAAG,EAAE;IACf,IAAMM,KAAK,GAAG,EAAE;IAChB,IAAMa,IAAI,GAAG/E,SAAS,CAACgB,KAAK,CAACuB,OAAO,CAAC,IAAI,IAAI5C,KAAK,EAAE;IACpD,4BAAyFqB,KAAK,CAAtFU,eAAe;MAAfA,gBAAe,sCAAGb,iBAAiB;MAAA,wBAA8CG,KAAK,CAAjDgE,iBAAiB;MAAjBA,iBAAiB,sCAAGlE,mBAAmB;IACpF,KAAK,IAAI0C,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI9B,gBAAe,GAAGsD,iBAAiB,EAAExB,CAAC,EAAE,EAAE;MAC3D,IAAMyB,SAAS,GAAGF,IAAI,CAAC5C,KAAK,EAAE,CAACgB,SAAS,CAACK,CAAC,GAAG9B,gBAAe,EAAE,IAAI,CAAC;MACnE,IAAMwD,YAAY,GAAGD,SAAS,CAACE,QAAQ,CAAC,UAAU,CAAC;MACnDjB,KAAK,CAACC,IAAI,CAACe,YAAY,CAAC;MAKxB,IAAKxD,gBAAe,GAAG,CAAC,IAAI8B,CAAC,IAAIA,CAAC,IAAI9B,gBAAe,GAAG,CAAC,IACpD,CAACA,gBAAe,IAAI8B,CAAC,IAAI9B,gBAAe,GAAG,CAAE,EAAE;QAChDkC,IAAI,CAACO,IAAI,CAACc,SAAS,CAAC;MACxB,CAAC,MACI;QACDrB,IAAI,CAACO,IAAI,CAACe,YAAY,CAAC;MAC3B;IACJ;IACA,MAAKpD,KAAK,GAAG;MACT8B,IAAI,EAAJA,IAAI;MACJM,KAAK,EAALA,KAAK;MACLnC,QAAQ,EAAEgD,IAAI;MACd7B,YAAY,EAAElD,SAAS,CAACgB,KAAK,CAACuB,OAAO;IACzC,CAAC;IAAC;EACN;EAAC;IAAA;IAAA,OACD,4BAAmB6C,SAAS,EAAE;MAC1B,IAAMC,WAAW,GAAGrF,SAAS,CAACoF,SAAS,CAAC7C,OAAO,CAAC;MAChD,IAAMA,OAAO,GAAGvC,SAAS,CAAC,IAAI,CAACgB,KAAK,CAACuB,OAAO,CAAC;MAC7C,IAAIA,OAAO,IAAI8C,WAAW,IAAI9C,OAAO,CAAC0B,OAAO,EAAE,KAAKoB,WAAW,CAACpB,OAAO,EAAE,EAAE;QACvE,IAAI,CAAC5C,aAAa,CAACkB,OAAO,CAAC;MAC/B;IACJ;EAAC;IAAA;IAAA,OAgBD,qBAAY+C,CAAC,EAAE7C,MAAM,EAAEC,QAAQ,EAAE;MAAA;MAC7B,mBAAwI,IAAI,CAAC1B,KAAK;QAA1IO,UAAU,gBAAVA,UAAU;QAAA,qCAAEC,cAAc;QAAdA,cAAc,sCAAGZ,eAAe;QAAA,sCAAEa,aAAa;QAAbA,aAAa,uCAAGf,cAAc;QAAA,qCAAEgB,eAAe;QAAfA,eAAe,sCAAGb,iBAAiB;QAAE0E,QAAQ,gBAARA,QAAQ;MACnI,IAAMC,GAAG,GAAGxF,SAAS,CAACsF,CAAC,CAAC;MACxB,IAAMtD,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACJ,KAAK,CAACC,QAAQ,CAACI,KAAK,EAAE,CAACC,OAAO,CAAC,CAAC,CAAC,CAACJ,UAAU,CAACwD,GAAG,CAACrD,KAAK,EAAE,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MACxG,IAAMC,IAAI,GAAGd,UAAU,GAAGE,aAAa,GAAGD,cAAc;MACxD,IAAIc,YAAY,GAAGD,IAAI,GAAGX,eAAe,GAAGM,UAAU,GAAGK,IAAI,IAAII,MAAM,IAAI,CAAC,CAAC;MAC7E,IAAI,CAAClB,UAAU,EAAE;QACb,IAAIkE,IAAI,GAAG,CAAC;QACZ,IAAMC,IAAI,GAAGzF,IAAI,CAACuF,GAAG,EAAED,QAAQ,CAAC;QAChC,KAAK,IAAI/B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkC,IAAI,CAAC5C,MAAM,EAAEU,CAAC,EAAE,EAAE;UAClCiC,IAAI,GAAGxD,IAAI,CAAC0D,KAAK,CAACnC,CAAC,GAAG,CAAC,CAAC;UACxB,IAAItD,QAAQ,CAACwF,IAAI,CAAClC,CAAC,CAAC,EAAEgC,GAAG,CAAC,EAAE;YACxBlD,YAAY,IAAI,EAAE,GAAGmD,IAAI;YACzB;UACJ;QACJ;MACJ;MACA,mBAAI,CAACxE,IAAI,4CAAT,YAAWsB,OAAO,qBAAlB,oBAAoBC,cAAc,CAAC;QAAEC,MAAM,EAAEH,YAAY;QAAEI,QAAQ,EAARA;MAAS,CAAC,CAAC;IAC1E;EAAC;IAAA;IAAA,OAmBD,uBAAcd,KAAK,EAAE;MACjB,6BAAgD,IAAI,CAACZ,KAAK,CAAlDU,eAAe;QAAfA,eAAe,uCAAGb,iBAAiB;MAC3C,IAAMmB,UAAU,GAAG,IAAI,CAACF,KAAK,CAACC,QAAQ,CAACC,UAAU,CAACJ,KAAK,CAAC,GAAGF,eAAe;MAC1E,OAAOM,UAAU;IACrB;EAAC;IAAA;IAAA,OAID,qBAAYwD,GAAG,EAAE;MAAA;MACb,IAAIrF,SAAS,CAACqF,GAAG,EAAE,IAAI,CAAC1D,KAAK,CAACoB,YAAY,CAAC,EAAE;QACzC;MACJ;MACA,IAAI,CAACoB,QAAQ,CAAC;QAAEpB,YAAY,EAAEsC,GAAG,CAACrD,KAAK;MAAG,CAAC,EAAE,YAAM;QAC/C,MAAI,CAACd,aAAa,CAAC,MAAI,CAACS,KAAK,CAACoB,YAAY,CAAC;QAC3C,IAAM0C,QAAQ,GAAG,MAAI,CAAC9D,KAAK,CAACoB,YAAY,CAACf,KAAK,EAAE;QAChD,MAAI,CAACnB,KAAK,CAAC6E,aAAa,oBAAxB,MAAI,CAAC7E,KAAK,CAAC6E,aAAa,CAAG9F,WAAW,CAAC6F,QAAQ,CAAC,CAAC;QACjD,MAAI,CAAC5E,KAAK,CAACqD,qBAAqB,oBAAhC,MAAI,CAACrD,KAAK,CAACqD,qBAAqB,CAAG,CAACtE,WAAW,CAAC6F,QAAQ,CAAC,CAAC,CAAC;MAC/D,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OAwCD,8BAAqB;MACjB,mBAAkD,IAAI,CAAC5E,KAAK;QAApD8E,YAAY,gBAAZA,YAAY;QAAEvE,UAAU,gBAAVA,UAAU;QAAEwE,WAAW,gBAAXA,WAAW;MAC7C,IAAMC,eAAe,GAAGF,YAAY,IAAIvE,UAAU;MAClD,IAAM0E,WAAW,GAAGnG,qBAAqB,CAACU,cAAc,EAAE,IAAI,CAACQ,KAAK,CAAC;MACrE,IAAIgF,eAAe,EAAE;QACjB,OAAQ,oBAAC,cAAc,eAAKC,WAAW;UAAE,MAAM,EAAE7F,aAAc;UAAC,KAAK,EAAE,CAAC,IAAI,CAACyE,KAAK,CAACiB,YAAY,EAAEC,WAAW,CAAE;UAAC,KAAK,EAAE,IAAI,CAACjE,KAAK,CAACoB,YAAa;UAAC,QAAQ,EAAE,IAAI,CAACH,QAAS;UAAC,2BAA2B,EAAE,IAAK;UACzM,yBAAyB,EAAE;QAAsB,GAChD;MACN;IACJ;EAAC;IAAA;IAAA,OACD,kBAAS;MACL,mBAAuF,IAAI,CAAC/B,KAAK;QAAzF6D,KAAK,gBAALA,KAAK;QAAEnD,eAAe,gBAAfA,eAAe;QAAEsD,iBAAiB,gBAAjBA,iBAAiB;QAAEzD,UAAU,gBAAVA,UAAU;QAAE2E,mBAAmB,gBAAnBA,mBAAmB;MAClF,OAAQ,oBAAC,IAAI;QAAC,KAAK,EAAE,IAAI,CAACrB,KAAK,CAACsB;MAAkB,GAClD,oBAAC,QAAQ;QAAC,GAAG,EAAE,IAAI,CAAClF,IAAK;QAAC,KAAK,EAAE,CAAC,IAAI,CAAC4D,KAAK,CAACuB,SAAS,EAAEvB,KAAK;QAAE;QAE/D,eAAe,EAAEnD,eAAe,GAAGsD,iBAAiB,GAAG,CAAE;QACxD,IAAI,EAAE,IAAI,CAAClD,KAAK,CAAC8B,IAAK;QAAC,UAAU,EAAE,IAAI,CAACW,UAAW;QAAC,aAAa,EAAE,IAAI,CAAC5B,aAAc;QAAC,sBAAsB,EAAE,IAAI,CAACS,sBAAuB;QAAC,iBAAiB,EAAE,IAAI,CAACjC,iBAAkB;QAAC,kBAAkB,EAAE,IAAI,CAACW,KAAK,CAACC,QAAQ,GAAG,IAAI,CAACsE,aAAa,CAAC,IAAI,CAACvE,KAAK,CAACC,QAAQ,CAAC,GAAG6C,SAAU;QAAC,4BAA4B,EAAEsB,mBAAoB;QAAC,8BAA8B,EAAE3E,UAAU,IAAI2E,mBAAoB;QAAC,MAAM,EAAE,IAAI,CAAClF,KAAK,CAAC0D,MAAO;QAAC,QAAQ,EAAE,IAAI,CAAC1D,KAAK,CAACsF,QAAS;QAAC,qBAAqB,EAAE,IAAI,CAACtF,KAAK,CAACuF,qBAAsB;QAAC,aAAa,EAAE,IAAI,CAACvF,KAAK,CAACwF,aAAc;QAAC,aAAa,EAAE,IAAI,CAACxF,KAAK,CAACyF,aAAc;QAAC,YAAY,EAAE,IAAI,CAACzF,KAAK,CAAC0F,YAAa;QAAC,UAAU,EAAE,IAAI,CAAC1F,KAAK,CAACO,UAAW;QAAC,yBAAyB,EAAE,IAAI,CAACP,KAAK,CAAC2F,yBAA0B;QAAC,YAAY,EAAE,IAAI,CAAC3F,KAAK,CAAC4F,YAAa;QAAC,qBAAqB,EAAE,IAAI,CAAC5F,KAAK,CAAC6F,qBAAsB;QAAC,YAAY,EAAE,IAAI,CAAC7F,KAAK,CAAC8F;MAAa,EAAE,EACp2B,IAAI,CAACC,kBAAkB,EAAE,CACrB;IACT;EAAC;IAAA;IAAA,OAjID,kCAAgCnE,CAAC,EAAEoE,SAAS,EAAE;MAC1C,IAAMC,QAAQ,GAAGD,SAAS,CAACpD,IAAI;MAC/B,IAAMsD,OAAO,GAAG,EAAE;MAClB,KAAK,IAAI1D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyD,QAAQ,CAACnE,MAAM,EAAEU,CAAC,EAAE,EAAE;QACtC,IAAIO,GAAG,GAAGiD,SAAS,CAAC9C,KAAK,CAACV,CAAC,CAAC;QAE5B,IAAIyD,QAAQ,CAACzD,CAAC,CAAC,CAACS,OAAO,EAAE;UACrBF,GAAG,GAAGkD,QAAQ,CAACzD,CAAC,CAAC,CAACrB,KAAK,EAAE;UAEzB4B,GAAG,CAACoD,QAAQ,GAAGF,QAAQ,CAACzD,CAAC,CAAC,CAAC2D,QAAQ,GAAGF,QAAQ,CAACzD,CAAC,CAAC,CAAC2D,QAAQ,GAAG,CAAC,GAAG,CAAC;QACtE;QACAD,OAAO,CAAC/C,IAAI,CAACJ,GAAG,CAAC;MACrB;MACA,OAAO;QAAEH,IAAI,EAAEsD;MAAQ,CAAC;IAC5B;EAAC;EAAA;AAAA,EAzFsBrH,SAAS;AAA9BkB,YAAY,CACPqG,WAAW,GAAG,cAAc;AADjCrG,YAAY,CAEPsG,SAAS,mCACT/G,QAAQ,CAAC+G,SAAS;EACrB3F,eAAe,EAAEhC,SAAS,CAAC4H,MAAM;EACjCtC,iBAAiB,EAAEtF,SAAS,CAAC4H,MAAM;EACnC7F,aAAa,EAAE/B,SAAS,CAAC4H,MAAM;EAC/B9F,cAAc,EAAE9B,SAAS,CAAC4H,MAAM;EAChC7C,aAAa,EAAE/E,SAAS,CAAC6H,SAAS,CAAC,CAAC7H,SAAS,CAAC8H,MAAM,EAAE9H,SAAS,CAAC4H,MAAM,EAAE5H,SAAS,CAAC+H,KAAK,CAAC,CAAC;EACzF3B,YAAY,EAAEpG,SAAS,CAACgI,IAAI;EAC5BxB,mBAAmB,EAAExG,SAAS,CAACgI,IAAI;EACnC/F,aAAa,EAAEjC,SAAS,CAACgI,IAAI;EAC7BjB,aAAa,EAAE/G,SAAS,CAACgI,IAAI;EAC7BhB,YAAY,EAAEhH,SAAS,CAACgI,IAAI;EAC5BlB,aAAa,EAAE9G,SAAS,CAACgI,IAAI;EAC7BnG,UAAU,EAAE7B,SAAS,CAACgI,IAAI;EAC1Bf,yBAAyB,EAAEjH,SAAS,CAACiI,KAAK,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;EAC1Ef,YAAY,EAAElH,SAAS,CAACkI,IAAI;EAC5Bf,qBAAqB,EAAEnH,SAAS,CAAC4H,MAAM;EACvCR,YAAY,EAAEpH,SAAS,CAACkI;AAAI;AAnB9B7G,YAAY,CAqBP8G,YAAY,GAAG;EAClBpG,aAAa,EAAEf,cAAc;EAC7Bc,cAAc,EAAEZ,eAAe;EAC/Bc,eAAe,EAAEb,iBAAiB;EAClCmE,iBAAiB,EAAElE,mBAAmB;EACtCoF,mBAAmB,EAAE,KAAK;EAC1B3E,UAAU,EAAE,KAAK;EACjBmF,YAAY,EAAE,KAAK;EACnBD,aAAa,EAAE,IAAI;EACnBF,qBAAqB,EAAE9F,SAAS,CAACqH,SAAS;EAC1ClB,YAAY,EAAE,sBAAChE,CAAC,EAAEC,KAAK;IAAA,OAAKkF,MAAM,CAAClF,KAAK,CAAC;EAAA;AAC7C,CAAC;AA8KL,eAAe9B,YAAY"},"metadata":{},"sourceType":"module"}