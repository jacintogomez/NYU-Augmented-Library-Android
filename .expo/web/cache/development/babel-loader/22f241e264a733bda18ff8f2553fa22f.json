{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { extractComponentProps } from \"../componentUpdater\";\nimport { parseDate, xdateToData, toMarkingFormat } from \"../interface\";\nimport { sameDate, sameMonth } from \"../dateutils\";\nimport { AGENDA_CALENDAR_KNOB } from \"../testIDs\";\nimport { VelocityTracker } from \"../velocityTracker\";\nimport { getCalendarDateString } from \"../services\";\nimport styleConstructor from \"./style\";\nimport WeekDaysNames from \"../commons/WeekDaysNames\";\nimport CalendarList from \"../calendar-list\";\nimport ReservationList from \"./reservation-list\";\nvar HEADER_HEIGHT = 104;\nvar KNOB_HEIGHT = 24;\nvar Agenda = function (_Component) {\n  _inherits(Agenda, _Component);\n  var _super = _createSuper(Agenda);\n  function Agenda(props) {\n    var _this;\n    _classCallCheck(this, Agenda);\n    _this = _super.call(this, props);\n    _this.scrollPad = React.createRef();\n    _this.calendar = React.createRef();\n    _this.knob = React.createRef();\n    _this.list = React.createRef();\n    _this.initialScrollPadPosition = function () {\n      return Math.max(0, _this.viewHeight - HEADER_HEIGHT);\n    };\n    _this.setScrollPadPosition = function (y, animated) {\n      var _this$scrollPad, _this$scrollPad$curre;\n      if ((_this$scrollPad = _this.scrollPad) != null && (_this$scrollPad$curre = _this$scrollPad.current) != null && _this$scrollPad$curre.scrollTo) {\n        _this.scrollPad.current.scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      } else {\n        var _this$scrollPad2, _this$scrollPad2$curr;\n        (_this$scrollPad2 = _this.scrollPad) == null ? void 0 : (_this$scrollPad2$curr = _this$scrollPad2.current) == null ? void 0 : _this$scrollPad2$curr.getNode().scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      }\n    };\n    _this.toggleCalendarPosition = function (open) {\n      var maxY = _this.initialScrollPadPosition();\n      _this.setScrollPadPosition(open ? 0 : maxY, true);\n      _this.enableCalendarScrolling(open);\n    };\n    _this.onDayPress = function (d) {\n      _this.chooseDay(d, !_this.state.calendarScrollable);\n    };\n    _this.generateMarkings = memoize(function (selectedDay, markedDates, items) {\n      if (!markedDates) {\n        markedDates = {};\n        if (items) {\n          Object.keys(items).forEach(function (key) {\n            if (items[key] && items[key].length) {\n              markedDates[key] = {\n                marked: true\n              };\n            }\n          });\n        }\n      }\n      var key = toMarkingFormat(selectedDay);\n      return _objectSpread(_objectSpread({}, markedDates), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, markedDates[key] || {}), {\n        selected: true\n      })));\n    });\n    _this.onScrollPadLayout = function () {\n      _this.setScrollPadPosition(_this.initialScrollPadPosition(), false);\n      setTimeout(function () {\n        return _this.setState({\n          calendarIsReady: true\n        });\n      }, 0);\n    };\n    _this.onCalendarListLayout = function () {\n      var _this$calendar, _this$calendar$curren;\n      (_this$calendar = _this.calendar) == null ? void 0 : (_this$calendar$curren = _this$calendar.current) == null ? void 0 : _this$calendar$curren.scrollToDay(_this.state.selectedDay.clone(), _this.calendarOffset(), false);\n    };\n    _this.onLayout = function (event) {\n      _this.viewHeight = event.nativeEvent.layout.height;\n      _this.viewWidth = event.nativeEvent.layout.width;\n      _this.forceUpdate();\n    };\n    _this.onTouchStart = function () {\n      var _this$knob, _this$knob$current;\n      _this.headerState = 'touched';\n      (_this$knob = _this.knob) == null ? void 0 : (_this$knob$current = _this$knob.current) == null ? void 0 : _this$knob$current.setNativeProps({\n        style: {\n          opacity: 0.5\n        }\n      });\n    };\n    _this.onTouchEnd = function () {\n      var _this$knob2, _this$knob2$current;\n      (_this$knob2 = _this.knob) == null ? void 0 : (_this$knob2$current = _this$knob2.current) == null ? void 0 : _this$knob2$current.setNativeProps({\n        style: {\n          opacity: 1\n        }\n      });\n      if (_this.headerState === 'touched') {\n        var isOpen = _this.state.calendarScrollable;\n        _this.toggleCalendarPosition(!isOpen);\n      }\n      _this.headerState = 'idle';\n    };\n    _this.onStartDrag = function () {\n      _this.headerState = 'dragged';\n      _this.knobTracker.reset();\n    };\n    _this.onSnapAfterDrag = function (e) {\n      _this.onTouchEnd();\n      var currentY = e.nativeEvent.contentOffset.y;\n      _this.knobTracker.add(currentY);\n      var projectedY = currentY + _this.knobTracker.estimateSpeed() * 250;\n      var maxY = _this.initialScrollPadPosition();\n      var snapY = projectedY > maxY / 2 ? maxY : 0;\n      _this.setScrollPadPosition(snapY, true);\n      _this.enableCalendarScrolling(snapY === 0);\n    };\n    _this.onVisibleMonthsChange = function (months) {\n      _this.props.onVisibleMonthsChange == null ? void 0 : _this.props.onVisibleMonthsChange(months);\n      if (_this.props.items && !_this.state.firstReservationLoad) {\n        if (_this.scrollTimeout) {\n          clearTimeout(_this.scrollTimeout);\n        }\n        _this.scrollTimeout = setTimeout(function () {\n          if (_this._isMounted) {\n            _this.props.loadItemsForMonth == null ? void 0 : _this.props.loadItemsForMonth(months[0]);\n          }\n        }, 200);\n      }\n    };\n    _this.onDayChange = function (day) {\n      var _this$calendar2, _this$calendar2$curre;\n      var withAnimation = sameMonth(day, _this.state.selectedDay);\n      (_this$calendar2 = _this.calendar) == null ? void 0 : (_this$calendar2$curre = _this$calendar2.current) == null ? void 0 : _this$calendar2$curre.scrollToDay(day, _this.calendarOffset(), withAnimation);\n      _this.setState({\n        selectedDay: day\n      });\n      _this.props.onDayChange == null ? void 0 : _this.props.onDayChange(xdateToData(day));\n    };\n    _this.renderWeekDaysNames = function () {\n      return React.createElement(WeekDaysNames, {\n        firstDay: _this.props.firstDay,\n        style: _this.style.dayHeader\n      });\n    };\n    _this.renderWeekNumbersSpace = function () {\n      return _this.props.showWeekNumbers && React.createElement(View, {\n        style: _this.style.dayHeader\n      });\n    };\n    _this.style = styleConstructor(props.theme);\n    var windowSize = Dimensions.get('window');\n    _this.viewHeight = windowSize.height;\n    _this.viewWidth = windowSize.width;\n    _this.scrollTimeout = undefined;\n    _this.headerState = 'idle';\n    _this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstReservationLoad: false,\n      selectedDay: _this.getSelectedDate(),\n      topDay: _this.getSelectedDate()\n    };\n    _this.currentMonth = _this.state.selectedDay.clone();\n    _this.knobTracker = new VelocityTracker();\n    _this.state.scrollY.addListener(function (_ref) {\n      var value = _ref.value;\n      return _this.knobTracker.add(value);\n    });\n    return _this;\n  }\n  _createClass(Agenda, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.loadReservations(this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.state.scrollY.removeAllListeners();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var newSelectedDate = this.getSelectedDate();\n      if (!sameDate(newSelectedDate, prevState.selectedDay)) {\n        this.setState({\n          selectedDay: newSelectedDate\n        });\n      } else if (!prevProps.items) {\n        this.loadReservations(this.props);\n      }\n    }\n  }, {\n    key: \"getSelectedDate\",\n    value: function getSelectedDate() {\n      var selected = this.props.selected;\n      return selected ? parseDate(selected) : new XDate(true);\n    }\n  }, {\n    key: \"calendarOffset\",\n    value: function calendarOffset() {\n      return 96 - this.viewHeight / 2;\n    }\n  }, {\n    key: \"enableCalendarScrolling\",\n    value: function enableCalendarScrolling() {\n      var _this$props$onCalenda, _this$props, _this$calendar3, _this$calendar3$curre;\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.setState({\n        calendarScrollable: enable\n      });\n      (_this$props$onCalenda = (_this$props = this.props).onCalendarToggled) == null ? void 0 : _this$props$onCalenda.call(_this$props, enable);\n      (_this$calendar3 = this.calendar) == null ? void 0 : (_this$calendar3$curre = _this$calendar3.current) == null ? void 0 : _this$calendar3$curre.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n    }\n  }, {\n    key: \"loadReservations\",\n    value: function loadReservations(props) {\n      var _this2 = this;\n      if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n        this.setState({\n          firstReservationLoad: true\n        }, function () {\n          _this2.props.loadItemsForMonth == null ? void 0 : _this2.props.loadItemsForMonth(xdateToData(_this2.state.selectedDay));\n        });\n      }\n    }\n  }, {\n    key: \"chooseDay\",\n    value: function chooseDay(d, optimisticScroll) {\n      var _this$props$onCalenda2, _this$props2, _this$calendar4, _this$calendar4$curre, _this$props$loadItems, _this$props3, _this$props$onDayPres, _this$props4;\n      var day = parseDate(d);\n      this.setState({\n        calendarScrollable: false,\n        selectedDay: day.clone()\n      });\n      (_this$props$onCalenda2 = (_this$props2 = this.props).onCalendarToggled) == null ? void 0 : _this$props$onCalenda2.call(_this$props2, false);\n      if (!optimisticScroll) {\n        this.setState({\n          topDay: day.clone()\n        });\n      }\n      this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n      (_this$calendar4 = this.calendar) == null ? void 0 : (_this$calendar4$curre = _this$calendar4.current) == null ? void 0 : _this$calendar4$curre.scrollToDay(day, this.calendarOffset(), true);\n      (_this$props$loadItems = (_this$props3 = this.props).loadItemsForMonth) == null ? void 0 : _this$props$loadItems.call(_this$props3, xdateToData(day));\n      (_this$props$onDayPres = (_this$props4 = this.props).onDayPress) == null ? void 0 : _this$props$onDayPres.call(_this$props4, xdateToData(day));\n    }\n  }, {\n    key: \"renderReservations\",\n    value: function renderReservations() {\n      var reservationListProps = extractComponentProps(ReservationList, this.props);\n      return React.createElement(ReservationList, _extends({}, reservationListProps, {\n        ref: this.list,\n        selectedDay: this.state.selectedDay,\n        topDay: this.state.topDay,\n        onDayChange: this.onDayChange\n      }));\n    }\n  }, {\n    key: \"renderCalendarList\",\n    value: function renderCalendarList() {\n      var _this$props5 = this.props,\n        markedDates = _this$props5.markedDates,\n        items = _this$props5.items;\n      var shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n      var calendarListProps = extractComponentProps(CalendarList, this.props);\n      return React.createElement(CalendarList, _extends({}, calendarListProps, {\n        ref: this.calendar,\n        current: getCalendarDateString(this.currentMonth.toString()),\n        markedDates: this.generateMarkings(this.state.selectedDay, markedDates, items),\n        calendarWidth: this.viewWidth,\n        scrollEnabled: this.state.calendarScrollable,\n        hideExtraDays: shouldHideExtraDays,\n        onLayout: this.onCalendarListLayout,\n        onDayPress: this.onDayPress,\n        onVisibleMonthsChange: this.onVisibleMonthsChange\n      }));\n    }\n  }, {\n    key: \"renderKnob\",\n    value: function renderKnob() {\n      var _this$props6 = this.props,\n        showClosingKnob = _this$props6.showClosingKnob,\n        hideKnob = _this$props6.hideKnob,\n        renderKnob = _this$props6.renderKnob;\n      var knob = React.createElement(View, {\n        style: this.style.knobContainer\n      });\n      if (!hideKnob) {\n        var knobView = renderKnob ? renderKnob() : React.createElement(View, {\n          style: this.style.knob\n        });\n        knob = !this.state.calendarScrollable || showClosingKnob ? React.createElement(View, {\n          style: this.style.knobContainer\n        }, React.createElement(View, {\n          ref: this.knob\n        }, knobView)) : null;\n      }\n      return knob;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n        hideKnob = _this$props7.hideKnob,\n        style = _this$props7.style,\n        testID = _this$props7.testID;\n      var agendaHeight = this.initialScrollPadPosition();\n      var weekdaysStyle = [this.style.weekdays, {\n        opacity: this.state.scrollY.interpolate({\n          inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        }),\n        transform: [{\n          translateY: this.state.scrollY.interpolate({\n            inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n            outputRange: [-HEADER_HEIGHT, 0],\n            extrapolate: 'clamp'\n          })\n        }]\n      }];\n      var headerTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [agendaHeight, 0],\n        extrapolate: 'clamp'\n      });\n      var contentTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [0, agendaHeight / 2],\n        extrapolate: 'clamp'\n      });\n      var headerStyle = [this.style.header, {\n        bottom: agendaHeight,\n        transform: [{\n          translateY: headerTranslate\n        }]\n      }];\n      if (!this.state.calendarIsReady) {\n        headerStyle.push({\n          height: 0\n        });\n        weekdaysStyle.push({\n          height: HEADER_HEIGHT\n        });\n      }\n      var openCalendarScrollPadPosition = !hideKnob && this.state.calendarScrollable && this.props.showClosingKnob ? agendaHeight + HEADER_HEIGHT : 0;\n      var shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n      var scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : openCalendarScrollPadPosition) - KNOB_HEIGHT;\n      var scrollPadStyle = {\n        height: KNOB_HEIGHT,\n        top: scrollPadPosition\n      };\n      return React.createElement(View, {\n        testID: testID,\n        onLayout: this.onLayout,\n        style: [style, this.style.container]\n      }, React.createElement(View, {\n        style: this.style.reservations\n      }, this.renderReservations()), React.createElement(Animated.View, {\n        style: headerStyle\n      }, React.createElement(Animated.View, {\n        style: [this.style.animatedContainer, {\n          transform: [{\n            translateY: contentTranslate\n          }]\n        }]\n      }, this.renderCalendarList()), this.renderKnob()), React.createElement(Animated.View, {\n        style: weekdaysStyle\n      }, this.renderWeekNumbersSpace(), this.renderWeekDaysNames()), React.createElement(Animated.ScrollView, {\n        ref: this.scrollPad,\n        style: [this.style.scrollPadStyle, scrollPadStyle],\n        overScrollMode: \"never\",\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        scrollEventThrottle: 8,\n        scrollsToTop: false,\n        onTouchStart: this.onTouchStart,\n        onTouchEnd: this.onTouchEnd,\n        onScrollBeginDrag: this.onStartDrag,\n        onScrollEndDrag: this.onSnapAfterDrag,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.state.scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        })\n      }, React.createElement(View, {\n        testID: AGENDA_CALENDAR_KNOB,\n        style: {\n          height: agendaHeight + KNOB_HEIGHT\n        },\n        onLayout: this.onScrollPadLayout\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.items) {\n        return {\n          firstReservationLoad: false\n        };\n      }\n      return null;\n    }\n  }]);\n  return Agenda;\n}(Component);\nAgenda.displayName = 'Agenda';\nAgenda.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarList.propTypes), ReservationList.propTypes), {}, {\n  items: PropTypes.object,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  loadItemsForMonth: PropTypes.func,\n  onCalendarToggled: PropTypes.func,\n  onDayChange: PropTypes.func,\n  renderKnob: PropTypes.func,\n  selected: PropTypes.any,\n  hideKnob: PropTypes.bool,\n  showClosingKnob: PropTypes.bool\n});\nexport { Agenda as default };","map":{"version":3,"names":["PropTypes","XDate","memoize","React","Component","extractComponentProps","parseDate","xdateToData","toMarkingFormat","sameDate","sameMonth","AGENDA_CALENDAR_KNOB","VelocityTracker","getCalendarDateString","styleConstructor","WeekDaysNames","CalendarList","ReservationList","HEADER_HEIGHT","KNOB_HEIGHT","Agenda","props","scrollPad","createRef","calendar","knob","list","initialScrollPadPosition","Math","max","viewHeight","setScrollPadPosition","y","animated","current","scrollTo","x","getNode","toggleCalendarPosition","open","maxY","enableCalendarScrolling","onDayPress","d","chooseDay","state","calendarScrollable","generateMarkings","selectedDay","markedDates","items","Object","keys","forEach","key","length","marked","selected","onScrollPadLayout","setTimeout","setState","calendarIsReady","onCalendarListLayout","scrollToDay","clone","calendarOffset","onLayout","event","nativeEvent","layout","height","viewWidth","width","forceUpdate","onTouchStart","headerState","setNativeProps","style","opacity","onTouchEnd","isOpen","onStartDrag","knobTracker","reset","onSnapAfterDrag","e","currentY","contentOffset","add","projectedY","estimateSpeed","snapY","onVisibleMonthsChange","months","firstReservationLoad","scrollTimeout","clearTimeout","_isMounted","loadItemsForMonth","onDayChange","day","withAnimation","renderWeekDaysNames","firstDay","dayHeader","renderWeekNumbersSpace","showWeekNumbers","theme","windowSize","Dimensions","get","undefined","scrollY","Animated","Value","getSelectedDate","topDay","currentMonth","addListener","value","loadReservations","removeAllListeners","prevProps","prevState","newSelectedDate","enable","onCalendarToggled","optimisticScroll","reservationListProps","shouldHideExtraDays","hideExtraDays","calendarListProps","toString","showClosingKnob","hideKnob","renderKnob","knobContainer","knobView","testID","agendaHeight","weekdaysStyle","weekdays","interpolate","inputRange","outputRange","extrapolate","transform","translateY","headerTranslate","contentTranslate","headerStyle","header","bottom","push","openCalendarScrollPadPosition","shouldAllowDragging","scrollPadPosition","scrollPadStyle","top","container","reservations","renderReservations","animatedContainer","renderCalendarList","useNativeDriver","nextProps","displayName","propTypes","object","oneOfType","array","number","func","any","bool"],"sources":["C:/Users/letha/WebstormProjects/NYU-Library-Frontend/node_modules/react-native-calendars/src/agenda/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport { View, Dimensions, Animated } from 'react-native';\nimport { extractComponentProps } from '../componentUpdater';\nimport { parseDate, xdateToData, toMarkingFormat } from '../interface';\nimport { sameDate, sameMonth } from '../dateutils';\n// @ts-expect-error\nimport { AGENDA_CALENDAR_KNOB } from '../testIDs';\nimport { VelocityTracker } from '../velocityTracker';\nimport { getCalendarDateString } from '../services';\nimport styleConstructor from './style';\nimport WeekDaysNames from '../commons/WeekDaysNames';\nimport CalendarList from '../calendar-list';\nimport ReservationList from './reservation-list';\nconst HEADER_HEIGHT = 104;\nconst KNOB_HEIGHT = 24;\n/**\n * @description: Agenda component\n * @extends: CalendarList\n * @extendslink: docs/CalendarList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/agenda.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/agenda.gif\n */\nexport default class Agenda extends Component {\n    static displayName = 'Agenda';\n    static propTypes = {\n        ...CalendarList.propTypes,\n        ...ReservationList.propTypes,\n        items: PropTypes.object,\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n        loadItemsForMonth: PropTypes.func,\n        onCalendarToggled: PropTypes.func,\n        onDayChange: PropTypes.func,\n        renderKnob: PropTypes.func,\n        selected: PropTypes.any,\n        hideKnob: PropTypes.bool,\n        showClosingKnob: PropTypes.bool\n    };\n    style;\n    viewHeight;\n    viewWidth;\n    scrollTimeout;\n    headerState;\n    currentMonth;\n    knobTracker;\n    _isMounted;\n    scrollPad = React.createRef();\n    calendar = React.createRef();\n    knob = React.createRef();\n    list = React.createRef();\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n        const windowSize = Dimensions.get('window');\n        this.viewHeight = windowSize.height;\n        this.viewWidth = windowSize.width;\n        this.scrollTimeout = undefined;\n        this.headerState = 'idle';\n        this.state = {\n            scrollY: new Animated.Value(0),\n            calendarIsReady: false,\n            calendarScrollable: false,\n            firstReservationLoad: false,\n            selectedDay: this.getSelectedDate(),\n            topDay: this.getSelectedDate()\n        };\n        this.currentMonth = this.state.selectedDay.clone();\n        this.knobTracker = new VelocityTracker();\n        this.state.scrollY.addListener(({ value }) => this.knobTracker.add(value));\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        this.loadReservations(this.props);\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n        this.state.scrollY.removeAllListeners();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const newSelectedDate = this.getSelectedDate();\n        if (!sameDate(newSelectedDate, prevState.selectedDay)) {\n            this.setState({ selectedDay: newSelectedDate });\n        }\n        else if (!prevProps.items) {\n            this.loadReservations(this.props);\n        }\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.items) {\n            return { firstReservationLoad: false };\n        }\n        return null;\n    }\n    getSelectedDate() {\n        const { selected } = this.props;\n        return selected ? parseDate(selected) : new XDate(true);\n    }\n    calendarOffset() {\n        return 96 - this.viewHeight / 2;\n    }\n    initialScrollPadPosition = () => {\n        return Math.max(0, this.viewHeight - HEADER_HEIGHT);\n    };\n    setScrollPadPosition = (y, animated) => {\n        if (this.scrollPad?.current?.scrollTo) {\n            this.scrollPad.current.scrollTo({ x: 0, y, animated });\n        }\n        else {\n            // Support for RN O.61 (Expo 37)\n            this.scrollPad?.current?.getNode().scrollTo({ x: 0, y, animated });\n        }\n    };\n    toggleCalendarPosition = (open) => {\n        const maxY = this.initialScrollPadPosition();\n        this.setScrollPadPosition(open ? 0 : maxY, true);\n        this.enableCalendarScrolling(open);\n    };\n    enableCalendarScrolling(enable = true) {\n        this.setState({ calendarScrollable: enable });\n        this.props.onCalendarToggled?.(enable);\n        // Enlarge calendarOffset here as a workaround on iOS to force repaint.\n        // Otherwise the month after current one or before current one remains invisible.\n        // The problem is caused by overflow: 'hidden' style, which we need for dragging\n        // to be performant.\n        // Another working solution for this bug would be to set removeClippedSubviews={false}\n        // in CalendarList listView, but that might impact performance when scrolling\n        // month list in expanded CalendarList.\n        // Further info https://github.com/facebook/react-native/issues/1831\n        this.calendar?.current?.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n    }\n    loadReservations(props) {\n        if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n            this.setState({ firstReservationLoad: true }, () => {\n                this.props.loadItemsForMonth?.(xdateToData(this.state.selectedDay));\n            });\n        }\n    }\n    onDayPress = (d) => {\n        this.chooseDay(d, !this.state.calendarScrollable);\n    };\n    chooseDay(d, optimisticScroll) {\n        const day = parseDate(d);\n        this.setState({\n            calendarScrollable: false,\n            selectedDay: day.clone()\n        });\n        this.props.onCalendarToggled?.(false);\n        if (!optimisticScroll) {\n            this.setState({ topDay: day.clone() });\n        }\n        this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n        this.calendar?.current?.scrollToDay(day, this.calendarOffset(), true);\n        this.props.loadItemsForMonth?.(xdateToData(day));\n        this.props.onDayPress?.(xdateToData(day));\n    }\n    generateMarkings = memoize((selectedDay, markedDates, items) => {\n        if (!markedDates) {\n            markedDates = {};\n            if (items) {\n                Object.keys(items).forEach(key => {\n                    if (items[key] && items[key].length) {\n                        markedDates[key] = { marked: true };\n                    }\n                });\n            }\n        }\n        const key = toMarkingFormat(selectedDay);\n        return { ...markedDates, [key]: { ...(markedDates[key] || {}), ...{ selected: true } } };\n    });\n    onScrollPadLayout = () => {\n        // When user touches knob, the actual component that receives touch events is a ScrollView.\n        // It needs to be scrolled to the bottom, so that when user moves finger downwards,\n        // scroll position actually changes (it would stay at 0, when scrolled to the top).\n        this.setScrollPadPosition(this.initialScrollPadPosition(), false);\n        // delay rendering calendar in full height because otherwise it still flickers sometimes\n        setTimeout(() => this.setState({ calendarIsReady: true }), 0);\n    };\n    onCalendarListLayout = () => {\n        this.calendar?.current?.scrollToDay(this.state.selectedDay.clone(), this.calendarOffset(), false);\n    };\n    onLayout = (event) => {\n        this.viewHeight = event.nativeEvent.layout.height;\n        this.viewWidth = event.nativeEvent.layout.width;\n        this.forceUpdate();\n    };\n    onTouchStart = () => {\n        this.headerState = 'touched';\n        this.knob?.current?.setNativeProps({ style: { opacity: 0.5 } });\n    };\n    onTouchEnd = () => {\n        this.knob?.current?.setNativeProps({ style: { opacity: 1 } });\n        if (this.headerState === 'touched') {\n            const isOpen = this.state.calendarScrollable;\n            this.toggleCalendarPosition(!isOpen);\n        }\n        this.headerState = 'idle';\n    };\n    onStartDrag = () => {\n        this.headerState = 'dragged';\n        this.knobTracker.reset();\n    };\n    onSnapAfterDrag = (e) => {\n        // on Android onTouchEnd is not called if dragging was started\n        this.onTouchEnd();\n        const currentY = e.nativeEvent.contentOffset.y;\n        this.knobTracker.add(currentY);\n        const projectedY = currentY + this.knobTracker.estimateSpeed() * 250; /*ms*/\n        const maxY = this.initialScrollPadPosition();\n        const snapY = projectedY > maxY / 2 ? maxY : 0;\n        this.setScrollPadPosition(snapY, true);\n        this.enableCalendarScrolling(snapY === 0);\n    };\n    onVisibleMonthsChange = (months) => {\n        this.props.onVisibleMonthsChange?.(months);\n        if (this.props.items && !this.state.firstReservationLoad) {\n            if (this.scrollTimeout) {\n                clearTimeout(this.scrollTimeout);\n            }\n            this.scrollTimeout = setTimeout(() => {\n                if (this._isMounted) {\n                    this.props.loadItemsForMonth?.(months[0]);\n                }\n            }, 200);\n        }\n    };\n    onDayChange = (day) => {\n        const withAnimation = sameMonth(day, this.state.selectedDay);\n        this.calendar?.current?.scrollToDay(day, this.calendarOffset(), withAnimation);\n        this.setState({ selectedDay: day });\n        this.props.onDayChange?.(xdateToData(day));\n    };\n    renderReservations() {\n        const reservationListProps = extractComponentProps(ReservationList, this.props);\n        return (<ReservationList {...reservationListProps} ref={this.list} selectedDay={this.state.selectedDay} topDay={this.state.topDay} onDayChange={this.onDayChange}/>);\n    }\n    renderCalendarList() {\n        const { markedDates, items } = this.props;\n        const shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n        const calendarListProps = extractComponentProps(CalendarList, this.props);\n        return (<CalendarList {...calendarListProps} ref={this.calendar} current={getCalendarDateString(this.currentMonth.toString())} markedDates={this.generateMarkings(this.state.selectedDay, markedDates, items)} calendarWidth={this.viewWidth} scrollEnabled={this.state.calendarScrollable} hideExtraDays={shouldHideExtraDays} onLayout={this.onCalendarListLayout} onDayPress={this.onDayPress} onVisibleMonthsChange={this.onVisibleMonthsChange}/>);\n    }\n    renderKnob() {\n        const { showClosingKnob, hideKnob, renderKnob } = this.props;\n        let knob = <View style={this.style.knobContainer}/>;\n        if (!hideKnob) {\n            const knobView = renderKnob ? renderKnob() : <View style={this.style.knob}/>;\n            knob = !this.state.calendarScrollable || showClosingKnob ? (<View style={this.style.knobContainer}>\n          <View ref={this.knob}>{knobView}</View>\n        </View>) : null;\n        }\n        return knob;\n    }\n    renderWeekDaysNames = () => {\n        return (<WeekDaysNames firstDay={this.props.firstDay} style={this.style.dayHeader}/>);\n    };\n    renderWeekNumbersSpace = () => {\n        return this.props.showWeekNumbers && <View style={this.style.dayHeader}/>;\n    };\n    render() {\n        const { hideKnob, style, testID } = this.props;\n        const agendaHeight = this.initialScrollPadPosition();\n        const weekdaysStyle = [\n            this.style.weekdays,\n            {\n                opacity: this.state.scrollY.interpolate({\n                    inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n                    outputRange: [0, 1],\n                    extrapolate: 'clamp'\n                }),\n                transform: [\n                    {\n                        translateY: this.state.scrollY.interpolate({\n                            inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n                            outputRange: [-HEADER_HEIGHT, 0],\n                            extrapolate: 'clamp'\n                        })\n                    }\n                ]\n            }\n        ];\n        const headerTranslate = this.state.scrollY.interpolate({\n            inputRange: [0, agendaHeight],\n            outputRange: [agendaHeight, 0],\n            extrapolate: 'clamp'\n        });\n        const contentTranslate = this.state.scrollY.interpolate({\n            inputRange: [0, agendaHeight],\n            outputRange: [0, agendaHeight / 2],\n            extrapolate: 'clamp'\n        });\n        const headerStyle = [\n            this.style.header,\n            {\n                bottom: agendaHeight,\n                transform: [{ translateY: headerTranslate }]\n            }\n        ];\n        if (!this.state.calendarIsReady) {\n            // limit header height until everything is setup for calendar dragging\n            headerStyle.push({ height: 0 });\n            // fill header with appStyle.calendarBackground background to reduce flickering\n            weekdaysStyle.push({ height: HEADER_HEIGHT });\n        }\n        const openCalendarScrollPadPosition = !hideKnob && this.state.calendarScrollable && this.props.showClosingKnob ? agendaHeight + HEADER_HEIGHT : 0;\n        const shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n        const scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : openCalendarScrollPadPosition) - KNOB_HEIGHT;\n        const scrollPadStyle = {\n            height: KNOB_HEIGHT,\n            top: scrollPadPosition,\n        };\n        return (<View testID={testID} onLayout={this.onLayout} style={[style, this.style.container]}>\n        <View style={this.style.reservations}>{this.renderReservations()}</View>\n        <Animated.View style={headerStyle}>\n          <Animated.View style={[this.style.animatedContainer, { transform: [{ translateY: contentTranslate }] }]}>\n            {this.renderCalendarList()}\n          </Animated.View>\n          {this.renderKnob()}\n        </Animated.View>\n        <Animated.View style={weekdaysStyle}>\n          {this.renderWeekNumbersSpace()}\n          {this.renderWeekDaysNames()}\n        </Animated.View>\n        <Animated.ScrollView ref={this.scrollPad} style={[this.style.scrollPadStyle, scrollPadStyle]} overScrollMode=\"never\" showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false} scrollEventThrottle={8} scrollsToTop={false} onTouchStart={this.onTouchStart} onTouchEnd={this.onTouchEnd} onScrollBeginDrag={this.onStartDrag} onScrollEndDrag={this.onSnapAfterDrag} onScroll={Animated.event([{ nativeEvent: { contentOffset: { y: this.state.scrollY } } }], { useNativeDriver: true })}>\n          <View testID={AGENDA_CALENDAR_KNOB} style={{ height: agendaHeight + KNOB_HEIGHT }} onLayout={this.onScrollPadLayout}/>\n        </Animated.ScrollView>\n      </View>);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}