{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport constants from \"../commons/constants\";\nimport { page, isGTE, isLTE, sameMonth } from \"../dateutils\";\nimport { xdateToData, parseDate, toMarkingFormat } from \"../interface\";\nimport { getState } from \"../day-state-manager\";\nimport { extractHeaderProps, extractDayProps } from \"../componentUpdater\";\nimport { useDidUpdate } from \"../hooks\";\nimport styleConstructor from \"./style\";\nimport CalendarHeader from \"./header\";\nimport Day from \"./day/index\";\nimport BasicDay from \"./day/basic\";\n\nvar Calendar = function Calendar(props) {\n  var initialDate = props.initialDate,\n      current = props.current,\n      theme = props.theme,\n      markedDates = props.markedDates,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      allowSelectionOutOfRange = props.allowSelectionOutOfRange,\n      onDayPress = props.onDayPress,\n      onDayLongPress = props.onDayLongPress,\n      onMonthChange = props.onMonthChange,\n      onVisibleMonthsChange = props.onVisibleMonthsChange,\n      disableMonthChange = props.disableMonthChange,\n      enableSwipeMonths = props.enableSwipeMonths,\n      hideExtraDays = props.hideExtraDays,\n      firstDay = props.firstDay,\n      showSixWeeks = props.showSixWeeks,\n      displayLoadingIndicator = props.displayLoadingIndicator,\n      customHeader = props.customHeader,\n      headerStyle = props.headerStyle,\n      accessibilityElementsHidden = props.accessibilityElementsHidden,\n      importantForAccessibility = props.importantForAccessibility,\n      testID = props.testID,\n      propsStyle = props.style;\n\n  var _useState = useState(current || initialDate ? parseDate(current || initialDate) : new XDate()),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMonth = _useState2[0],\n      setCurrentMonth = _useState2[1];\n\n  var style = useRef(styleConstructor(theme));\n  var header = useRef();\n  var weekNumberMarking = useRef({\n    disabled: true,\n    disableTouchEvent: true\n  });\n  useEffect(function () {\n    if (initialDate) {\n      setCurrentMonth(parseDate(initialDate));\n    }\n  }, [initialDate]);\n  useDidUpdate(function () {\n    var _currentMonth = currentMonth.clone();\n\n    onMonthChange == null ? void 0 : onMonthChange(xdateToData(_currentMonth));\n    onVisibleMonthsChange == null ? void 0 : onVisibleMonthsChange([xdateToData(_currentMonth)]);\n  }, [currentMonth]);\n  var updateMonth = useCallback(function (newMonth) {\n    if (sameMonth(newMonth, currentMonth)) {\n      return;\n    }\n\n    setCurrentMonth(newMonth);\n  }, [currentMonth]);\n  var addMonth = useCallback(function (count) {\n    var newMonth = currentMonth.clone().addMonths(count, true);\n    updateMonth(newMonth);\n  }, [currentMonth, updateMonth]);\n  var handleDayInteraction = useCallback(function (date, interaction) {\n    var day = new XDate(date.dateString);\n\n    if (allowSelectionOutOfRange || !(minDate && !isGTE(day, new XDate(minDate))) && !(maxDate && !isLTE(day, new XDate(maxDate)))) {\n      if (!disableMonthChange) {\n        updateMonth(day);\n      }\n\n      if (interaction) {\n        interaction(date);\n      }\n    }\n  }, [minDate, maxDate, allowSelectionOutOfRange, disableMonthChange, updateMonth]);\n\n  var _onDayPress = useCallback(function (date) {\n    if (date) handleDayInteraction(date, onDayPress);\n  }, [handleDayInteraction, onDayPress]);\n\n  var onLongPressDay = useCallback(function (date) {\n    if (date) handleDayInteraction(date, onDayLongPress);\n  }, [handleDayInteraction, onDayLongPress]);\n  var onSwipeLeft = useCallback(function () {\n    var _header$current;\n\n    (_header$current = header.current) == null ? void 0 : _header$current.onPressRight();\n  }, [header]);\n  var onSwipeRight = useCallback(function () {\n    var _header$current2;\n\n    (_header$current2 = header.current) == null ? void 0 : _header$current2.onPressLeft();\n  }, [header]);\n\n  var _onSwipe = useCallback(function (gestureName) {\n    var SWIPE_UP = swipeDirections.SWIPE_UP,\n        SWIPE_DOWN = swipeDirections.SWIPE_DOWN,\n        SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n        SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT;\n\n    switch (gestureName) {\n      case SWIPE_UP:\n      case SWIPE_DOWN:\n        break;\n\n      case SWIPE_LEFT:\n        constants.isRTL ? onSwipeRight() : onSwipeLeft();\n        break;\n\n      case SWIPE_RIGHT:\n        constants.isRTL ? onSwipeLeft() : onSwipeRight();\n        break;\n    }\n  }, [onSwipeLeft, onSwipeRight]);\n\n  var renderWeekNumber = function renderWeekNumber(weekNumber) {\n    return React.createElement(View, {\n      style: style.current.dayContainer,\n      key: \"week-container-\" + weekNumber\n    }, React.createElement(BasicDay, {\n      key: \"week-\" + weekNumber,\n      marking: weekNumberMarking.current,\n      theme: theme,\n      testID: testID + \".weekNumber_\" + weekNumber\n    }, weekNumber));\n  };\n\n  var renderDay = function renderDay(day, id) {\n    var dayProps = extractDayProps(props);\n\n    if (!sameMonth(day, currentMonth) && hideExtraDays) {\n      return React.createElement(View, {\n        key: id,\n        style: style.current.emptyDayContainer\n      });\n    }\n\n    var dateString = toMarkingFormat(day);\n    return React.createElement(View, {\n      style: style.current.dayContainer,\n      key: id\n    }, React.createElement(Day, _extends({}, dayProps, {\n      testID: testID + \".day_\" + dateString,\n      date: dateString,\n      state: getState(day, currentMonth, props),\n      marking: markedDates == null ? void 0 : markedDates[dateString],\n      onPress: _onDayPress,\n      onLongPress: onLongPressDay\n    })));\n  };\n\n  var renderWeek = function renderWeek(days, id) {\n    var week = [];\n    days.forEach(function (day, id2) {\n      week.push(renderDay(day, id2));\n    }, _this);\n\n    if (props.showWeekNumbers) {\n      week.unshift(renderWeekNumber(days[days.length - 1].getWeek()));\n    }\n\n    return React.createElement(View, {\n      style: style.current.week,\n      key: id\n    }, week);\n  };\n\n  var renderMonth = function renderMonth() {\n    var shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n    var days = page(currentMonth, firstDay, shouldShowSixWeeks);\n    var weeks = [];\n\n    while (days.length) {\n      weeks.push(renderWeek(days.splice(0, 7), weeks.length));\n    }\n\n    return React.createElement(View, {\n      style: style.current.monthView\n    }, weeks);\n  };\n\n  var shouldDisplayIndicator = useMemo(function () {\n    if (currentMonth) {\n      var lastMonthOfDay = toMarkingFormat(currentMonth.clone().addMonths(1, true).setDate(1).addDays(-1));\n\n      if (displayLoadingIndicator && !(markedDates != null && markedDates[lastMonthOfDay])) {\n        return true;\n      }\n    }\n\n    return false;\n  }, [currentMonth, displayLoadingIndicator, markedDates]);\n\n  var renderHeader = function renderHeader() {\n    var headerProps = extractHeaderProps(props);\n    var ref = customHeader ? undefined : header;\n    var CustomHeader = customHeader;\n    var HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n    return React.createElement(HeaderComponent, _extends({}, headerProps, {\n      testID: testID + \".header\",\n      style: headerStyle,\n      ref: ref,\n      month: currentMonth,\n      addMonth: addMonth,\n      displayLoadingIndicator: shouldDisplayIndicator\n    }));\n  };\n\n  var GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n  var swipeProps = {\n    onSwipe: function onSwipe(direction) {\n      return _onSwipe(direction);\n    }\n  };\n  var gestureProps = enableSwipeMonths ? swipeProps : undefined;\n  return React.createElement(GestureComponent, gestureProps, React.createElement(View, {\n    style: [style.current.container, propsStyle],\n    testID: testID,\n    accessibilityElementsHidden: accessibilityElementsHidden,\n    importantForAccessibility: importantForAccessibility\n  }, renderHeader(), renderMonth()));\n};\n\nexport default Calendar;\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarHeader.propTypes), Day.propTypes), {}, {\n  theme: PropTypes.object,\n  firstDay: PropTypes.number,\n  displayLoadingIndicator: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  current: PropTypes.string,\n  initialDate: PropTypes.string,\n  minDate: PropTypes.string,\n  maxDate: PropTypes.string,\n  markedDates: PropTypes.object,\n  hideExtraDays: PropTypes.bool,\n  showSixWeeks: PropTypes.bool,\n  onDayPress: PropTypes.func,\n  onDayLongPress: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  onVisibleMonthsChange: PropTypes.func,\n  disableMonthChange: PropTypes.bool,\n  enableSwipeMonths: PropTypes.bool,\n  disabledByDefault: PropTypes.bool,\n  headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  customHeader: PropTypes.any,\n  allowSelectionOutOfRange: PropTypes.bool\n});","map":{"version":3,"sources":["C:/Users/Eileen Twimasi/WebstormProjects/NYU-Library-Frontend/node_modules/react-native-calendars/src/calendar/index.js"],"names":["PropTypes","XDate","React","useRef","useState","useEffect","useCallback","useMemo","GestureRecognizer","swipeDirections","constants","page","isGTE","isLTE","sameMonth","xdateToData","parseDate","toMarkingFormat","getState","extractHeaderProps","extractDayProps","useDidUpdate","styleConstructor","CalendarHeader","Day","BasicDay","Calendar","props","initialDate","current","theme","markedDates","minDate","maxDate","allowSelectionOutOfRange","onDayPress","onDayLongPress","onMonthChange","onVisibleMonthsChange","disableMonthChange","enableSwipeMonths","hideExtraDays","firstDay","showSixWeeks","displayLoadingIndicator","customHeader","headerStyle","accessibilityElementsHidden","importantForAccessibility","testID","propsStyle","style","currentMonth","setCurrentMonth","header","weekNumberMarking","disabled","disableTouchEvent","_currentMonth","clone","updateMonth","newMonth","addMonth","count","addMonths","handleDayInteraction","date","interaction","day","dateString","_onDayPress","onLongPressDay","onSwipeLeft","onPressRight","onSwipeRight","onPressLeft","onSwipe","gestureName","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","isRTL","renderWeekNumber","weekNumber","dayContainer","renderDay","id","dayProps","emptyDayContainer","renderWeek","days","week","forEach","id2","push","showWeekNumbers","unshift","length","getWeek","renderMonth","shouldShowSixWeeks","weeks","splice","monthView","shouldDisplayIndicator","lastMonthOfDay","setDate","addDays","renderHeader","headerProps","ref","undefined","CustomHeader","HeaderComponent","GestureComponent","View","swipeProps","direction","gestureProps","container","displayName","propTypes","object","number","bool","oneOfType","array","string","func","disabledByDefault","any"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { View } from 'react-native';\n// @ts-expect-error\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport constants from '../commons/constants';\nimport { page, isGTE, isLTE, sameMonth } from '../dateutils';\nimport { xdateToData, parseDate, toMarkingFormat } from '../interface';\nimport { getState } from '../day-state-manager';\nimport { extractHeaderProps, extractDayProps } from '../componentUpdater';\nimport { useDidUpdate } from '../hooks';\nimport styleConstructor from './style';\nimport CalendarHeader from './header';\nimport Day from './day/index';\nimport BasicDay from './day/basic';\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar.gif\n */\nconst Calendar = (props) => {\n    const { initialDate, current, theme, markedDates, minDate, maxDate, allowSelectionOutOfRange, onDayPress, onDayLongPress, onMonthChange, onVisibleMonthsChange, disableMonthChange, enableSwipeMonths, hideExtraDays, firstDay, showSixWeeks, displayLoadingIndicator, customHeader, headerStyle, accessibilityElementsHidden, importantForAccessibility, testID, style: propsStyle } = props;\n    const [currentMonth, setCurrentMonth] = useState(current || initialDate ? parseDate(current || initialDate) : new XDate());\n    const style = useRef(styleConstructor(theme));\n    const header = useRef();\n    const weekNumberMarking = useRef({ disabled: true, disableTouchEvent: true });\n    useEffect(() => {\n        if (initialDate) {\n            setCurrentMonth(parseDate(initialDate));\n        }\n    }, [initialDate]);\n    useDidUpdate(() => {\n        const _currentMonth = currentMonth.clone();\n        onMonthChange?.(xdateToData(_currentMonth));\n        onVisibleMonthsChange?.([xdateToData(_currentMonth)]);\n    }, [currentMonth]);\n    const updateMonth = useCallback((newMonth) => {\n        if (sameMonth(newMonth, currentMonth)) {\n            return;\n        }\n        setCurrentMonth(newMonth);\n    }, [currentMonth]);\n    const addMonth = useCallback((count) => {\n        const newMonth = currentMonth.clone().addMonths(count, true);\n        updateMonth(newMonth);\n    }, [currentMonth, updateMonth]);\n    const handleDayInteraction = useCallback((date, interaction) => {\n        const day = new XDate(date.dateString);\n        if (allowSelectionOutOfRange || !(minDate && !isGTE(day, new XDate(minDate))) && !(maxDate && !isLTE(day, new XDate(maxDate)))) {\n            if (!disableMonthChange) {\n                updateMonth(day);\n            }\n            if (interaction) {\n                interaction(date);\n            }\n        }\n    }, [minDate, maxDate, allowSelectionOutOfRange, disableMonthChange, updateMonth]);\n    const _onDayPress = useCallback((date) => {\n        if (date)\n            handleDayInteraction(date, onDayPress);\n    }, [handleDayInteraction, onDayPress]);\n    const onLongPressDay = useCallback((date) => {\n        if (date)\n            handleDayInteraction(date, onDayLongPress);\n    }, [handleDayInteraction, onDayLongPress]);\n    const onSwipeLeft = useCallback(() => {\n        // @ts-expect-error\n        header.current?.onPressRight();\n    }, [header]);\n    const onSwipeRight = useCallback(() => {\n        // @ts-expect-error\n        header.current?.onPressLeft();\n    }, [header]);\n    const onSwipe = useCallback((gestureName) => {\n        const { SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT } = swipeDirections;\n        switch (gestureName) {\n            case SWIPE_UP:\n            case SWIPE_DOWN:\n                break;\n            case SWIPE_LEFT:\n                constants.isRTL ? onSwipeRight() : onSwipeLeft();\n                break;\n            case SWIPE_RIGHT:\n                constants.isRTL ? onSwipeLeft() : onSwipeRight();\n                break;\n        }\n    }, [onSwipeLeft, onSwipeRight]);\n    const renderWeekNumber = (weekNumber) => {\n        return (<View style={style.current.dayContainer} key={`week-container-${weekNumber}`}>\n        <BasicDay key={`week-${weekNumber}`} marking={weekNumberMarking.current} \n        // state='disabled'\n        theme={theme} testID={`${testID}.weekNumber_${weekNumber}`}>\n          {weekNumber}\n        </BasicDay>\n      </View>);\n    };\n    const renderDay = (day, id) => {\n        const dayProps = extractDayProps(props);\n        if (!sameMonth(day, currentMonth) && hideExtraDays) {\n            return <View key={id} style={style.current.emptyDayContainer}/>;\n        }\n        const dateString = toMarkingFormat(day);\n        return (<View style={style.current.dayContainer} key={id}>\n        <Day {...dayProps} testID={`${testID}.day_${dateString}`} date={dateString} state={getState(day, currentMonth, props)} marking={markedDates?.[dateString]} onPress={_onDayPress} onLongPress={onLongPressDay}/>\n      </View>);\n    };\n    const renderWeek = (days, id) => {\n        const week = [];\n        days.forEach((day, id2) => {\n            week.push(renderDay(day, id2));\n        }, this);\n        if (props.showWeekNumbers) {\n            week.unshift(renderWeekNumber(days[days.length - 1].getWeek()));\n        }\n        return (<View style={style.current.week} key={id}>\n        {week}\n      </View>);\n    };\n    const renderMonth = () => {\n        const shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n        const days = page(currentMonth, firstDay, shouldShowSixWeeks);\n        const weeks = [];\n        while (days.length) {\n            weeks.push(renderWeek(days.splice(0, 7), weeks.length));\n        }\n        return <View style={style.current.monthView}>{weeks}</View>;\n    };\n    const shouldDisplayIndicator = useMemo(() => {\n        if (currentMonth) {\n            const lastMonthOfDay = toMarkingFormat(currentMonth.clone().addMonths(1, true).setDate(1).addDays(-1));\n            if (displayLoadingIndicator && !markedDates?.[lastMonthOfDay]) {\n                return true;\n            }\n        }\n        return false;\n    }, [currentMonth, displayLoadingIndicator, markedDates]);\n    const renderHeader = () => {\n        const headerProps = extractHeaderProps(props);\n        const ref = customHeader ? undefined : header;\n        const CustomHeader = customHeader;\n        const HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n        return (<HeaderComponent {...headerProps} testID={`${testID}.header`} style={headerStyle} ref={ref} month={currentMonth} addMonth={addMonth} displayLoadingIndicator={shouldDisplayIndicator}/>);\n    };\n    const GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n    const swipeProps = {\n        onSwipe: (direction) => onSwipe(direction)\n    };\n    const gestureProps = enableSwipeMonths ? swipeProps : undefined;\n    return (<GestureComponent {...gestureProps}>\n      <View style={[style.current.container, propsStyle]} testID={testID} accessibilityElementsHidden={accessibilityElementsHidden} // iOS\n     importantForAccessibility={importantForAccessibility} // Android\n    >\n        {renderHeader()}\n        {renderMonth()}\n      </View>\n    </GestureComponent>);\n};\nexport default Calendar;\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = {\n    ...CalendarHeader.propTypes,\n    ...Day.propTypes,\n    theme: PropTypes.object,\n    firstDay: PropTypes.number,\n    displayLoadingIndicator: PropTypes.bool,\n    showWeekNumbers: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n    current: PropTypes.string,\n    initialDate: PropTypes.string,\n    minDate: PropTypes.string,\n    maxDate: PropTypes.string,\n    markedDates: PropTypes.object,\n    hideExtraDays: PropTypes.bool,\n    showSixWeeks: PropTypes.bool,\n    onDayPress: PropTypes.func,\n    onDayLongPress: PropTypes.func,\n    onMonthChange: PropTypes.func,\n    onVisibleMonthsChange: PropTypes.func,\n    disableMonthChange: PropTypes.bool,\n    enableSwipeMonths: PropTypes.bool,\n    disabledByDefault: PropTypes.bool,\n    headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    customHeader: PropTypes.any,\n    allowSelectionOutOfRange: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}