{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport min from 'lodash/min';\nimport map from 'lodash/map';\nimport times from 'lodash/times';\nimport groupBy from 'lodash/groupBy';\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport constants from \"../commons/constants\";\nimport { generateDay } from \"../dateutils\";\nimport { getCalendarDateString } from \"../services\";\nimport styleConstructor from \"./style\";\nimport { populateEvents, HOUR_BLOCK_HEIGHT } from \"./Packer\";\nimport { calcTimeOffset } from \"./helpers/presenter\";\nimport TimelineHours from \"./TimelineHours\";\nimport EventBlock from \"./EventBlock\";\nimport NowIndicator from \"./NowIndicator\";\nimport useTimelineOffset from \"./useTimelineOffset\";\nvar Timeline = function Timeline(props) {\n  var _props$format24h = props.format24h,\n    format24h = _props$format24h === void 0 ? true : _props$format24h,\n    _props$start = props.start,\n    start = _props$start === void 0 ? 0 : _props$start,\n    _props$end = props.end,\n    end = _props$end === void 0 ? 24 : _props$end,\n    _props$date = props.date,\n    date = _props$date === void 0 ? '' : _props$date,\n    events = props.events,\n    onEventPress = props.onEventPress,\n    onBackgroundLongPress = props.onBackgroundLongPress,\n    onBackgroundLongPressOut = props.onBackgroundLongPressOut,\n    renderEvent = props.renderEvent,\n    theme = props.theme,\n    scrollToFirst = props.scrollToFirst,\n    scrollToNow = props.scrollToNow,\n    initialTime = props.initialTime,\n    showNowIndicator = props.showNowIndicator,\n    scrollOffset = props.scrollOffset,\n    onChangeOffset = props.onChangeOffset,\n    _props$overlapEventsS = props.overlapEventsSpacing,\n    overlapEventsSpacing = _props$overlapEventsS === void 0 ? 0 : _props$overlapEventsS,\n    _props$rightEdgeSpaci = props.rightEdgeSpacing,\n    rightEdgeSpacing = _props$rightEdgeSpaci === void 0 ? 0 : _props$rightEdgeSpaci,\n    unavailableHours = props.unavailableHours,\n    unavailableHoursColor = props.unavailableHoursColor,\n    eventTapped = props.eventTapped,\n    _props$numberOfDays = props.numberOfDays,\n    numberOfDays = _props$numberOfDays === void 0 ? 1 : _props$numberOfDays,\n    _props$timelineLeftIn = props.timelineLeftInset,\n    timelineLeftInset = _props$timelineLeftIn === void 0 ? 0 : _props$timelineLeftIn;\n  var pageDates = useMemo(function () {\n    return typeof date === 'string' ? [date] : date;\n  }, [date]);\n  var groupedEvents = useMemo(function () {\n    return groupBy(events, function (e) {\n      return getCalendarDateString(e.start);\n    });\n  }, [events]);\n  var pageEvents = useMemo(function () {\n    return map(pageDates, function (d) {\n      return groupedEvents[d] || [];\n    });\n  }, [pageDates, groupedEvents]);\n  var scrollView = useRef();\n  var calendarHeight = useRef((end - start) * HOUR_BLOCK_HEIGHT);\n  var styles = useRef(styleConstructor(theme || props.styles, calendarHeight.current));\n  var _useTimelineOffset = useTimelineOffset({\n      onChangeOffset: onChangeOffset,\n      scrollOffset: scrollOffset,\n      scrollViewRef: scrollView\n    }),\n    scrollEvents = _useTimelineOffset.scrollEvents;\n  var width = useMemo(function () {\n    return constants.screenWidth - timelineLeftInset;\n  }, [timelineLeftInset]);\n  var packedEvents = useMemo(function () {\n    return map(pageEvents, function (_e, i) {\n      return populateEvents(pageEvents[i], {\n        screenWidth: width / numberOfDays,\n        dayStart: start,\n        overlapEventsSpacing: overlapEventsSpacing / numberOfDays,\n        rightEdgeSpacing: rightEdgeSpacing / numberOfDays\n      });\n    });\n  }, [pageEvents, start, numberOfDays]);\n  useEffect(function () {\n    var initialPosition = 0;\n    if (scrollToNow) {\n      initialPosition = calcTimeOffset(HOUR_BLOCK_HEIGHT);\n    } else if (scrollToFirst && packedEvents[0].length > 0) {\n      var _min;\n      initialPosition = (_min = min(map(packedEvents[0], 'top'))) != null ? _min : 0;\n    } else if (initialTime) {\n      initialPosition = calcTimeOffset(HOUR_BLOCK_HEIGHT, initialTime.hour, initialTime.minutes);\n    }\n    if (initialPosition) {\n      setTimeout(function () {\n        var _scrollView$current;\n        scrollView == null ? void 0 : (_scrollView$current = scrollView.current) == null ? void 0 : _scrollView$current.scrollTo({\n          y: Math.max(0, initialPosition - HOUR_BLOCK_HEIGHT),\n          animated: true\n        });\n      }, 0);\n    }\n  }, []);\n  var _onEventPress = useCallback(function (dateIndex, eventIndex) {\n    var event = packedEvents[dateIndex][eventIndex];\n    if (eventTapped) {\n      eventTapped(event);\n    } else {\n      onEventPress == null ? void 0 : onEventPress(event);\n    }\n  }, [onEventPress, eventTapped]);\n  var renderEvents = function renderEvents(dayIndex) {\n    var events = packedEvents[dayIndex].map(function (event, eventIndex) {\n      var onEventPress = function onEventPress() {\n        return _onEventPress(dayIndex, eventIndex);\n      };\n      return React.createElement(EventBlock, {\n        key: eventIndex,\n        index: eventIndex,\n        event: event,\n        styles: styles.current,\n        format24h: format24h,\n        onPress: onEventPress,\n        renderEvent: renderEvent\n      });\n    });\n    return React.createElement(View, {\n      pointerEvents: 'box-none',\n      style: [{\n        marginLeft: dayIndex === 0 ? timelineLeftInset : undefined\n      }, styles.current.eventsContainer]\n    }, events);\n  };\n  var renderTimelineDay = function renderTimelineDay(dayIndex) {\n    var indexOfToday = pageDates.indexOf(generateDay(new Date().toString()));\n    var left = timelineLeftInset + indexOfToday * width / numberOfDays;\n    return React.createElement(React.Fragment, {\n      key: dayIndex\n    }, renderEvents(dayIndex), indexOfToday !== -1 && showNowIndicator && React.createElement(NowIndicator, {\n      width: width / numberOfDays,\n      left: left,\n      styles: styles.current\n    }));\n  };\n  return React.createElement(ScrollView, _extends({\n    ref: scrollView,\n    style: styles.current.container,\n    contentContainerStyle: [styles.current.contentStyle, {\n      width: constants.screenWidth\n    }],\n    showsVerticalScrollIndicator: false\n  }, scrollEvents), React.createElement(TimelineHours, {\n    start: start,\n    end: end,\n    date: pageDates[0],\n    format24h: format24h,\n    styles: styles.current,\n    unavailableHours: unavailableHours,\n    unavailableHoursColor: unavailableHoursColor,\n    onBackgroundLongPress: onBackgroundLongPress,\n    onBackgroundLongPressOut: onBackgroundLongPressOut,\n    width: width,\n    numberOfDays: numberOfDays,\n    timelineLeftInset: timelineLeftInset\n  }), times(numberOfDays, renderTimelineDay));\n};\nexport default React.memo(Timeline);","map":{"version":3,"names":["min","map","times","groupBy","React","useCallback","useEffect","useMemo","useRef","View","ScrollView","constants","generateDay","getCalendarDateString","styleConstructor","populateEvents","HOUR_BLOCK_HEIGHT","calcTimeOffset","TimelineHours","EventBlock","NowIndicator","useTimelineOffset","Timeline","props","_props$format24h","format24h","_props$start","start","_props$end","end","_props$date","date","events","onEventPress","onBackgroundLongPress","onBackgroundLongPressOut","renderEvent","theme","scrollToFirst","scrollToNow","initialTime","showNowIndicator","scrollOffset","onChangeOffset","_props$overlapEventsS","overlapEventsSpacing","_props$rightEdgeSpaci","rightEdgeSpacing","unavailableHours","unavailableHoursColor","eventTapped","_props$numberOfDays","numberOfDays","_props$timelineLeftIn","timelineLeftInset","pageDates","groupedEvents","e","pageEvents","d","scrollView","calendarHeight","styles","current","_useTimelineOffset","scrollViewRef","scrollEvents","width","screenWidth","packedEvents","_e","i","dayStart","initialPosition","length","_min","hour","minutes","setTimeout","_scrollView$current","scrollTo","y","Math","max","animated","_onEventPress","dateIndex","eventIndex","event","renderEvents","dayIndex","createElement","key","index","onPress","pointerEvents","style","marginLeft","undefined","eventsContainer","renderTimelineDay","indexOfToday","indexOf","Date","toString","left","Fragment","_extends","ref","container","contentContainerStyle","contentStyle","showsVerticalScrollIndicator","memo"],"sources":["/Users/siyuejiang/Documents/S23/Augmented Library 2/node_modules/react-native-calendars/src/timeline/Timeline.js"],"sourcesContent":["import min from 'lodash/min';\nimport map from 'lodash/map';\nimport times from 'lodash/times';\nimport groupBy from 'lodash/groupBy';\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { View, ScrollView } from 'react-native';\nimport constants from '../commons/constants';\nimport { generateDay } from '../dateutils';\nimport { getCalendarDateString } from '../services';\nimport styleConstructor from './style';\nimport { populateEvents, HOUR_BLOCK_HEIGHT } from './Packer';\nimport { calcTimeOffset } from './helpers/presenter';\nimport TimelineHours from './TimelineHours';\nimport EventBlock from './EventBlock';\nimport NowIndicator from './NowIndicator';\nimport useTimelineOffset from './useTimelineOffset';\nconst Timeline = (props) => {\n    const { format24h = true, start = 0, end = 24, date = '', events, onEventPress, onBackgroundLongPress, onBackgroundLongPressOut, renderEvent, theme, scrollToFirst, scrollToNow, initialTime, showNowIndicator, scrollOffset, onChangeOffset, overlapEventsSpacing = 0, rightEdgeSpacing = 0, unavailableHours, unavailableHoursColor, eventTapped, numberOfDays = 1, timelineLeftInset = 0 } = props;\n    const pageDates = useMemo(() => {\n        return typeof date === 'string' ? [date] : date;\n    }, [date]);\n    const groupedEvents = useMemo(() => {\n        return groupBy(events, e => getCalendarDateString(e.start));\n    }, [events]);\n    const pageEvents = useMemo(() => {\n        return map(pageDates, d => groupedEvents[d] || []);\n    }, [pageDates, groupedEvents]);\n    const scrollView = useRef();\n    const calendarHeight = useRef((end - start) * HOUR_BLOCK_HEIGHT);\n    const styles = useRef(styleConstructor(theme || props.styles, calendarHeight.current));\n    const { scrollEvents } = useTimelineOffset({ onChangeOffset, scrollOffset, scrollViewRef: scrollView });\n    const width = useMemo(() => {\n        return constants.screenWidth - timelineLeftInset;\n    }, [timelineLeftInset]);\n    const packedEvents = useMemo(() => {\n        return map(pageEvents, (_e, i) => {\n            return populateEvents(pageEvents[i], {\n                screenWidth: width / numberOfDays,\n                dayStart: start,\n                overlapEventsSpacing: overlapEventsSpacing / numberOfDays,\n                rightEdgeSpacing: rightEdgeSpacing / numberOfDays\n            });\n        });\n    }, [pageEvents, start, numberOfDays]);\n    useEffect(() => {\n        let initialPosition = 0;\n        if (scrollToNow) {\n            initialPosition = calcTimeOffset(HOUR_BLOCK_HEIGHT);\n        }\n        else if (scrollToFirst && packedEvents[0].length > 0) {\n            initialPosition = min(map(packedEvents[0], 'top')) ?? 0;\n        }\n        else if (initialTime) {\n            initialPosition = calcTimeOffset(HOUR_BLOCK_HEIGHT, initialTime.hour, initialTime.minutes);\n        }\n        if (initialPosition) {\n            setTimeout(() => {\n                scrollView?.current?.scrollTo({\n                    y: Math.max(0, initialPosition - HOUR_BLOCK_HEIGHT),\n                    animated: true\n                });\n            }, 0);\n        }\n    }, []);\n    const _onEventPress = useCallback((dateIndex, eventIndex) => {\n        const event = packedEvents[dateIndex][eventIndex];\n        if (eventTapped) {\n            //TODO: remove after deprecation\n            eventTapped(event);\n        }\n        else {\n            onEventPress?.(event);\n        }\n    }, [onEventPress, eventTapped]);\n    const renderEvents = (dayIndex) => {\n        const events = packedEvents[dayIndex].map((event, eventIndex) => {\n            const onEventPress = () => _onEventPress(dayIndex, eventIndex);\n            return (<EventBlock key={eventIndex} index={eventIndex} event={event} styles={styles.current} format24h={format24h} onPress={onEventPress} renderEvent={renderEvent}/>);\n        });\n        return (<View pointerEvents={'box-none'} style={[{ marginLeft: dayIndex === 0 ? timelineLeftInset : undefined }, styles.current.eventsContainer]}>\n        {events}\n      </View>);\n    };\n    const renderTimelineDay = (dayIndex) => {\n        const indexOfToday = pageDates.indexOf(generateDay(new Date().toString()));\n        const left = timelineLeftInset + indexOfToday * width / numberOfDays;\n        return (<React.Fragment key={dayIndex}>\n        {renderEvents(dayIndex)}\n        {indexOfToday !== -1 && showNowIndicator && <NowIndicator width={width / numberOfDays} left={left} styles={styles.current}/>}\n      </React.Fragment>);\n    };\n    return (<ScrollView \n    // @ts-expect-error\n    ref={scrollView} style={styles.current.container} contentContainerStyle={[styles.current.contentStyle, { width: constants.screenWidth }]} showsVerticalScrollIndicator={false} {...scrollEvents}>\n      <TimelineHours start={start} end={end} date={pageDates[0]} format24h={format24h} styles={styles.current} unavailableHours={unavailableHours} unavailableHoursColor={unavailableHoursColor} onBackgroundLongPress={onBackgroundLongPress} onBackgroundLongPressOut={onBackgroundLongPressOut} width={width} numberOfDays={numberOfDays} timelineLeftInset={timelineLeftInset}/>\n      {times(numberOfDays, renderTimelineDay)}\n    </ScrollView>);\n};\nexport default React.memo(Timeline);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}