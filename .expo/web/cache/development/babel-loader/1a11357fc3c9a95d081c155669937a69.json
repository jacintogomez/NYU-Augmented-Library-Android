{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport map from 'lodash/map';\nimport isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\nimport XDate from 'xdate';\nimport React, { useCallback, useContext, useEffect, useMemo, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport { useDidUpdate } from \"../hooks\";\nimport { getMoment } from \"../momentResolver\";\nimport { isToday, isGTE, sameDate } from \"../dateutils\";\nimport { parseDate } from \"../interface\";\nimport { getDefaultLocale } from \"../services\";\nimport { UpdateSources, todayString } from \"./commons\";\nimport constants from \"../commons/constants\";\nimport styleConstructor from \"./style\";\nimport Context from \"./Context\";\nvar viewabilityConfig = {\n  itemVisiblePercentThreshold: 20\n};\n\nvar AgendaList = function AgendaList(props) {\n  var _sections$;\n\n  var theme = props.theme,\n      sections = props.sections,\n      scrollToNextEvent = props.scrollToNextEvent,\n      _props$viewOffset = props.viewOffset,\n      viewOffset = _props$viewOffset === void 0 ? 0 : _props$viewOffset,\n      avoidDateUpdates = props.avoidDateUpdates,\n      onScroll = props.onScroll,\n      onMomentumScrollBegin = props.onMomentumScrollBegin,\n      onMomentumScrollEnd = props.onMomentumScrollEnd,\n      onScrollToIndexFailed = props.onScrollToIndexFailed,\n      renderSectionHeader = props.renderSectionHeader,\n      sectionStyle = props.sectionStyle,\n      keyExtractor = props.keyExtractor,\n      dayFormatter = props.dayFormatter,\n      _props$dayFormat = props.dayFormat,\n      dayFormat = _props$dayFormat === void 0 ? 'dddd, MMM d' : _props$dayFormat,\n      useMoment = props.useMoment,\n      _props$markToday = props.markToday,\n      markToday = _props$markToday === void 0 ? true : _props$markToday,\n      onViewableItemsChanged = props.onViewableItemsChanged;\n\n  var _useContext = useContext(Context),\n      date = _useContext.date,\n      updateSource = _useContext.updateSource,\n      setDate = _useContext.setDate,\n      setDisabled = _useContext.setDisabled;\n\n  var style = useRef(styleConstructor(theme));\n  var list = useRef();\n\n  var _topSection = useRef((_sections$ = sections[0]) == null ? void 0 : _sections$.title);\n\n  var didScroll = useRef(false);\n  var sectionScroll = useRef(false);\n  var sectionHeight = useRef(0);\n  useEffect(function () {\n    if (date !== _topSection.current) {\n      setTimeout(function () {\n        scrollToSection(date);\n      }, 500);\n    }\n  }, []);\n  useDidUpdate(function () {\n    if (updateSource !== UpdateSources.LIST_DRAG && updateSource !== UpdateSources.CALENDAR_INIT) {\n      scrollToSection(date);\n    }\n  }, [date]);\n\n  var getSectionIndex = function getSectionIndex(date) {\n    var i;\n    map(sections, function (section, index) {\n      if (section.title === date) {\n        i = index;\n      }\n    });\n    return i;\n  };\n\n  var getNextSectionIndex = function getNextSectionIndex(date) {\n    var i = 0;\n\n    for (var j = 1; j < sections.length; j++) {\n      var _sections, _sections$j;\n\n      var prev = parseDate((_sections = sections[j - 1]) == null ? void 0 : _sections.title);\n      var next = parseDate((_sections$j = sections[j]) == null ? void 0 : _sections$j.title);\n      var cur = new XDate(date);\n\n      if (isGTE(cur, prev) && isGTE(next, cur)) {\n        i = sameDate(prev, cur) ? j - 1 : j;\n        break;\n      } else if (isGTE(cur, next)) {\n        i = j;\n      }\n    }\n\n    return i;\n  };\n\n  var getSectionTitle = useCallback(function (title) {\n    if (!title) return;\n    var sectionTitle = title;\n\n    if (dayFormatter) {\n      sectionTitle = dayFormatter(title);\n    } else if (dayFormat) {\n      if (useMoment) {\n        var moment = getMoment();\n        sectionTitle = moment(title).format(dayFormat);\n      } else {\n        sectionTitle = new XDate(title).toString(dayFormat);\n      }\n    }\n\n    if (markToday) {\n      var string = getDefaultLocale().today || todayString;\n      var today = isToday(title);\n      sectionTitle = today ? string + \", \" + sectionTitle : sectionTitle;\n    }\n\n    return sectionTitle;\n  }, []);\n  var scrollToSection = useCallback(debounce(function (d) {\n    var sectionIndex = scrollToNextEvent ? getNextSectionIndex(d) : getSectionIndex(d);\n\n    if (isUndefined(sectionIndex)) {\n      return;\n    }\n\n    if (list != null && list.current && sectionIndex !== undefined) {\n      var _sections$sectionInde;\n\n      sectionScroll.current = true;\n      _topSection.current = (_sections$sectionInde = sections[sectionIndex]) == null ? void 0 : _sections$sectionInde.title;\n      list == null ? void 0 : list.current.scrollToLocation({\n        animated: true,\n        sectionIndex: sectionIndex,\n        itemIndex: 0,\n        viewPosition: 0,\n        viewOffset: (constants.isAndroid ? sectionHeight.current : 0) + viewOffset\n      });\n    }\n  }, 1000, {\n    leading: false,\n    trailing: true\n  }), [viewOffset, sections]);\n\n  var _onViewableItemsChanged = useCallback(function (info) {\n    if (info != null && info.viewableItems && !sectionScroll.current) {\n      var topSection = get(info == null ? void 0 : info.viewableItems[0], 'section.title');\n\n      if (topSection && topSection !== _topSection.current) {\n        _topSection.current = topSection;\n\n        if (didScroll.current && !avoidDateUpdates) {\n          setDate == null ? void 0 : setDate(_topSection.current, UpdateSources.LIST_DRAG);\n        }\n      }\n    }\n\n    onViewableItemsChanged == null ? void 0 : onViewableItemsChanged(info);\n  }, [avoidDateUpdates, setDate, onViewableItemsChanged]);\n\n  var _onScroll = useCallback(function (event) {\n    if (!didScroll.current) {\n      didScroll.current = true;\n      scrollToSection.cancel();\n    }\n\n    onScroll == null ? void 0 : onScroll(event);\n  }, [onScroll]);\n\n  var _onMomentumScrollBegin = useCallback(function (event) {\n    setDisabled == null ? void 0 : setDisabled(true);\n    onMomentumScrollBegin == null ? void 0 : onMomentumScrollBegin(event);\n  }, [onMomentumScrollBegin, setDisabled]);\n\n  var _onMomentumScrollEnd = useCallback(function (event) {\n    sectionScroll.current = false;\n    setDisabled == null ? void 0 : setDisabled(false);\n    onMomentumScrollEnd == null ? void 0 : onMomentumScrollEnd(event);\n  }, [onMomentumScrollEnd, setDisabled]);\n\n  var headerTextStyle = useMemo(function () {\n    return [style.current.sectionText, sectionStyle];\n  }, [sectionStyle]);\n\n  var _onScrollToIndexFailed = useCallback(function (info) {\n    if (onScrollToIndexFailed) {\n      onScrollToIndexFailed(info);\n    } else {\n      console.log('onScrollToIndexFailed info: ', info);\n    }\n  }, [onScrollToIndexFailed]);\n\n  var onHeaderLayout = useCallback(function (event) {\n    sectionHeight.current = event.nativeEvent.layout.height;\n  }, []);\n\n  var _renderSectionHeader = useCallback(function (info) {\n    var _info$section;\n\n    var title = info == null ? void 0 : (_info$section = info.section) == null ? void 0 : _info$section.title;\n\n    if (renderSectionHeader) {\n      return renderSectionHeader(title);\n    }\n\n    var headerTitle = getSectionTitle(title);\n    return React.createElement(AgendaSectionHeader, {\n      title: headerTitle,\n      style: headerTextStyle,\n      onLayout: onHeaderLayout\n    });\n  }, [headerTextStyle]);\n\n  var _keyExtractor = useCallback(function (item, index) {\n    return isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n  }, [keyExtractor]);\n\n  return React.createElement(SectionList, _extends({\n    stickySectionHeadersEnabled: true\n  }, props, {\n    ref: list,\n    keyExtractor: _keyExtractor,\n    showsVerticalScrollIndicator: false,\n    onViewableItemsChanged: _onViewableItemsChanged,\n    viewabilityConfig: viewabilityConfig,\n    renderSectionHeader: _renderSectionHeader,\n    onScroll: _onScroll,\n    onMomentumScrollBegin: _onMomentumScrollBegin,\n    onMomentumScrollEnd: _onMomentumScrollEnd,\n    onScrollToIndexFailed: _onScrollToIndexFailed\n  }));\n};\n\nfunction areTextPropsEqual(prev, next) {\n  return isEqual(prev.style, next.style) && prev.title === next.title;\n}\n\nvar AgendaSectionHeader = React.memo(function (props) {\n  return React.createElement(Text, {\n    allowFontScaling: false,\n    style: props.style,\n    onLayout: props.onLayout\n  }, props.title);\n}, areTextPropsEqual);\nexport default AgendaList;\nAgendaList.displayName = 'AgendaList';\nAgendaList.propTypes = {\n  dayFormat: PropTypes.string,\n  dayFormatter: PropTypes.func,\n  useMoment: PropTypes.bool,\n  markToday: PropTypes.bool,\n  sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  avoidDateUpdates: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/Eileen Twimasi/WebstormProjects/NYU-Library-Frontend/node_modules/react-native-calendars/src/expandableCalendar/agendaList.js"],"names":["PropTypes","get","map","isFunction","isUndefined","debounce","isEqual","XDate","React","useCallback","useContext","useEffect","useMemo","useRef","useDidUpdate","getMoment","isToday","isGTE","sameDate","parseDate","getDefaultLocale","UpdateSources","todayString","constants","styleConstructor","Context","viewabilityConfig","itemVisiblePercentThreshold","AgendaList","props","theme","sections","scrollToNextEvent","viewOffset","avoidDateUpdates","onScroll","onMomentumScrollBegin","onMomentumScrollEnd","onScrollToIndexFailed","renderSectionHeader","sectionStyle","keyExtractor","dayFormatter","dayFormat","useMoment","markToday","onViewableItemsChanged","date","updateSource","setDate","setDisabled","style","list","_topSection","title","didScroll","sectionScroll","sectionHeight","current","setTimeout","scrollToSection","LIST_DRAG","CALENDAR_INIT","getSectionIndex","i","section","index","getNextSectionIndex","j","length","prev","next","cur","getSectionTitle","sectionTitle","moment","format","toString","string","today","d","sectionIndex","undefined","scrollToLocation","animated","itemIndex","viewPosition","isAndroid","leading","trailing","_onViewableItemsChanged","info","viewableItems","topSection","_onScroll","event","cancel","_onMomentumScrollBegin","_onMomentumScrollEnd","headerTextStyle","sectionText","_onScrollToIndexFailed","console","log","onHeaderLayout","nativeEvent","layout","height","_renderSectionHeader","headerTitle","_keyExtractor","item","String","areTextPropsEqual","AgendaSectionHeader","memo","onLayout","displayName","propTypes","func","bool","oneOfType","object","number","array"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport map from 'lodash/map';\nimport isFunction from 'lodash/isFunction';\nimport isUndefined from 'lodash/isUndefined';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\nimport XDate from 'xdate';\nimport React, { useCallback, useContext, useEffect, useMemo, useRef } from 'react';\nimport { Text, SectionList } from 'react-native';\nimport { useDidUpdate } from '../hooks';\nimport { getMoment } from '../momentResolver';\nimport { isToday, isGTE, sameDate } from '../dateutils';\nimport { parseDate } from '../interface';\nimport { getDefaultLocale } from '../services';\nimport { UpdateSources, todayString } from './commons';\nimport constants from '../commons/constants';\nimport styleConstructor from './style';\nimport Context from './Context';\nconst viewabilityConfig = {\n    itemVisiblePercentThreshold: 20 // 50 means if 50% of the item is visible\n};\n/**\n * @description: AgendaList component\n * @note: Should be wrapped with 'CalendarProvider'\n * @extends: SectionList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nconst AgendaList = (props) => {\n    const { theme, sections, scrollToNextEvent, viewOffset = 0, avoidDateUpdates, onScroll, onMomentumScrollBegin, onMomentumScrollEnd, onScrollToIndexFailed, renderSectionHeader, sectionStyle, keyExtractor, dayFormatter, dayFormat = 'dddd, MMM d', useMoment, markToday = true, onViewableItemsChanged, } = props;\n    const { date, updateSource, setDate, setDisabled } = useContext(Context);\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const _topSection = useRef(sections[0]?.title);\n    const didScroll = useRef(false);\n    const sectionScroll = useRef(false);\n    const sectionHeight = useRef(0);\n    useEffect(() => {\n        if (date !== _topSection.current) {\n            setTimeout(() => {\n                scrollToSection(date);\n            }, 500);\n        }\n    }, []);\n    useDidUpdate(() => {\n        // NOTE: on first init data should set first section to the current date!!!\n        if (updateSource !== UpdateSources.LIST_DRAG && updateSource !== UpdateSources.CALENDAR_INIT) {\n            scrollToSection(date);\n        }\n    }, [date]);\n    const getSectionIndex = (date) => {\n        let i;\n        map(sections, (section, index) => {\n            // NOTE: sections titles should match current date format!!!\n            if (section.title === date) {\n                i = index;\n            }\n        });\n        return i;\n    };\n    const getNextSectionIndex = (date) => {\n        let i = 0;\n        for (let j = 1; j < sections.length; j++) {\n            const prev = parseDate(sections[j - 1]?.title);\n            const next = parseDate(sections[j]?.title);\n            const cur = new XDate(date);\n            if (isGTE(cur, prev) && isGTE(next, cur)) {\n                i = sameDate(prev, cur) ? j - 1 : j;\n                break;\n            }\n            else if (isGTE(cur, next)) {\n                i = j;\n            }\n        }\n        return i;\n    };\n    const getSectionTitle = useCallback((title) => {\n        if (!title)\n            return;\n        let sectionTitle = title;\n        if (dayFormatter) {\n            sectionTitle = dayFormatter(title);\n        }\n        else if (dayFormat) {\n            if (useMoment) {\n                const moment = getMoment();\n                sectionTitle = moment(title).format(dayFormat);\n            }\n            else {\n                sectionTitle = new XDate(title).toString(dayFormat);\n            }\n        }\n        if (markToday) {\n            const string = getDefaultLocale().today || todayString;\n            const today = isToday(title);\n            sectionTitle = today ? `${string}, ${sectionTitle}` : sectionTitle;\n        }\n        return sectionTitle;\n    }, []);\n    const scrollToSection = useCallback(debounce((d) => {\n        const sectionIndex = scrollToNextEvent ? getNextSectionIndex(d) : getSectionIndex(d);\n        if (isUndefined(sectionIndex)) {\n            return;\n        }\n        if (list?.current && sectionIndex !== undefined) {\n            sectionScroll.current = true; // to avoid setDate() in onViewableItemsChanged\n            _topSection.current = sections[sectionIndex]?.title;\n            list?.current.scrollToLocation({\n                animated: true,\n                sectionIndex: sectionIndex,\n                itemIndex: 0,\n                viewPosition: 0,\n                viewOffset: (constants.isAndroid ? sectionHeight.current : 0) + viewOffset\n            });\n        }\n    }, 1000, { leading: false, trailing: true }), [viewOffset, sections]);\n    const _onViewableItemsChanged = useCallback((info) => {\n        if (info?.viewableItems && !sectionScroll.current) {\n            const topSection = get(info?.viewableItems[0], 'section.title');\n            if (topSection && topSection !== _topSection.current) {\n                _topSection.current = topSection;\n                if (didScroll.current && !avoidDateUpdates) {\n                    // to avoid setDate() on first load (while setting the initial context.date value)\n                    setDate?.(_topSection.current, UpdateSources.LIST_DRAG);\n                }\n            }\n        }\n        onViewableItemsChanged?.(info);\n    }, [avoidDateUpdates, setDate, onViewableItemsChanged]);\n    const _onScroll = useCallback((event) => {\n        if (!didScroll.current) {\n            didScroll.current = true;\n            scrollToSection.cancel();\n        }\n        onScroll?.(event);\n    }, [onScroll]);\n    const _onMomentumScrollBegin = useCallback((event) => {\n        setDisabled?.(true);\n        onMomentumScrollBegin?.(event);\n    }, [onMomentumScrollBegin, setDisabled]);\n    const _onMomentumScrollEnd = useCallback((event) => {\n        // when list momentum ends AND when scrollToSection scroll ends\n        sectionScroll.current = false;\n        setDisabled?.(false);\n        onMomentumScrollEnd?.(event);\n    }, [onMomentumScrollEnd, setDisabled]);\n    const headerTextStyle = useMemo(() => [style.current.sectionText, sectionStyle], [sectionStyle]);\n    const _onScrollToIndexFailed = useCallback((info) => {\n        if (onScrollToIndexFailed) {\n            onScrollToIndexFailed(info);\n        }\n        else {\n            console.log('onScrollToIndexFailed info: ', info);\n        }\n    }, [onScrollToIndexFailed]);\n    const onHeaderLayout = useCallback((event) => {\n        sectionHeight.current = event.nativeEvent.layout.height;\n    }, []);\n    const _renderSectionHeader = useCallback((info) => {\n        const title = info?.section?.title;\n        if (renderSectionHeader) {\n            return renderSectionHeader(title);\n        }\n        const headerTitle = getSectionTitle(title);\n        return <AgendaSectionHeader title={headerTitle} style={headerTextStyle} onLayout={onHeaderLayout}/>;\n    }, [headerTextStyle]);\n    const _keyExtractor = useCallback((item, index) => {\n        return isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n    }, [keyExtractor]);\n    return (<SectionList stickySectionHeadersEnabled {...props} ref={list} keyExtractor={_keyExtractor} showsVerticalScrollIndicator={false} onViewableItemsChanged={_onViewableItemsChanged} viewabilityConfig={viewabilityConfig} renderSectionHeader={_renderSectionHeader} onScroll={_onScroll} onMomentumScrollBegin={_onMomentumScrollBegin} onMomentumScrollEnd={_onMomentumScrollEnd} onScrollToIndexFailed={_onScrollToIndexFailed}/>);\n    // _getItemLayout = (data, index) => {\n    //   return {length: constants.screenWidth, offset: constants.screenWidth * index, index};\n    // }\n};\nfunction areTextPropsEqual(prev, next) {\n    return isEqual(prev.style, next.style) && prev.title === next.title;\n}\nconst AgendaSectionHeader = React.memo((props) => {\n    return (<Text allowFontScaling={false} style={props.style} onLayout={props.onLayout}>\n      {props.title}\n    </Text>);\n}, areTextPropsEqual);\nexport default AgendaList;\nAgendaList.displayName = 'AgendaList';\nAgendaList.propTypes = {\n    dayFormat: PropTypes.string,\n    dayFormatter: PropTypes.func,\n    useMoment: PropTypes.bool,\n    markToday: PropTypes.bool,\n    sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    avoidDateUpdates: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}