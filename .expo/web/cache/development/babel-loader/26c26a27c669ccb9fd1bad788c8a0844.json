{"ast":null,"code":"var _require = require(\"./dateutils\"),\n  isToday = _require.isToday,\n  isDateNotInTheRange = _require.isDateNotInTheRange,\n  sameMonth = _require.sameMonth;\nvar _require2 = require(\"./interface\"),\n  parseDate = _require2.parseDate,\n  toMarkingFormat = _require2.toMarkingFormat;\nexport function getState(day, current, props) {\n  var minDate = props.minDate,\n    maxDate = props.maxDate,\n    disabledByDefault = props.disabledByDefault,\n    context = props.context;\n  var _minDate = parseDate(minDate);\n  var _maxDate = parseDate(maxDate);\n  var state = '';\n  if ((context == null ? void 0 : context.date) === toMarkingFormat(day)) {\n    state = 'selected';\n  } else if (isToday(day)) {\n    state = 'today';\n  }\n  if (disabledByDefault) {\n    state = 'disabled';\n  } else if (isDateNotInTheRange(_minDate, _maxDate, day)) {\n    state = 'disabled';\n  } else if (!sameMonth(day, current)) {\n    state = 'disabled';\n  }\n  return state;\n}","map":{"version":3,"names":["require","isToday","isDateNotInTheRange","sameMonth","parseDate","toMarkingFormat","getState","day","current","props","minDate","maxDate","disabledByDefault","context","_minDate","_maxDate","state","date"],"sources":["C:/Users/letha/WebstormProjects/NYU-Library-Frontend/node_modules/react-native-calendars/src/day-state-manager.js"],"sourcesContent":["const { isToday, isDateNotInTheRange, sameMonth } = require('./dateutils');\nconst { parseDate, toMarkingFormat } = require('./interface');\nexport function getState(day, current, props) {\n    const { minDate, maxDate, disabledByDefault, context } = props;\n    const _minDate = parseDate(minDate);\n    const _maxDate = parseDate(maxDate);\n    let state = '';\n    if (context?.date === toMarkingFormat(day)) {\n        state = 'selected';\n    }\n    else if (isToday(day)) {\n        state = 'today';\n    }\n    if (disabledByDefault) {\n        state = 'disabled';\n    }\n    else if (isDateNotInTheRange(_minDate, _maxDate, day)) {\n        state = 'disabled';\n    }\n    else if (!sameMonth(day, current)) {\n        state = 'disabled';\n    }\n    return state;\n}\n"],"mappings":"AAAA,eAAoDA,OAAO,eAAe;EAAlEC,OAAO,YAAPA,OAAO;EAAEC,mBAAmB,YAAnBA,mBAAmB;EAAEC,SAAS,YAATA,SAAS;AAC/C,gBAAuCH,OAAO,eAAe;EAArDI,SAAS,aAATA,SAAS;EAAEC,eAAe,aAAfA,eAAe;AAClC,OAAO,SAASC,QAAQ,CAACC,GAAG,EAAEC,OAAO,EAAEC,KAAK,EAAE;EAC1C,IAAQC,OAAO,GAA0CD,KAAK,CAAtDC,OAAO;IAAEC,OAAO,GAAiCF,KAAK,CAA7CE,OAAO;IAAEC,iBAAiB,GAAcH,KAAK,CAApCG,iBAAiB;IAAEC,OAAO,GAAKJ,KAAK,CAAjBI,OAAO;EACpD,IAAMC,QAAQ,GAAGV,SAAS,CAACM,OAAO,CAAC;EACnC,IAAMK,QAAQ,GAAGX,SAAS,CAACO,OAAO,CAAC;EACnC,IAAIK,KAAK,GAAG,EAAE;EACd,IAAI,CAAAH,OAAO,oBAAPA,OAAO,CAAEI,IAAI,MAAKZ,eAAe,CAACE,GAAG,CAAC,EAAE;IACxCS,KAAK,GAAG,UAAU;EACtB,CAAC,MACI,IAAIf,OAAO,CAACM,GAAG,CAAC,EAAE;IACnBS,KAAK,GAAG,OAAO;EACnB;EACA,IAAIJ,iBAAiB,EAAE;IACnBI,KAAK,GAAG,UAAU;EACtB,CAAC,MACI,IAAId,mBAAmB,CAACY,QAAQ,EAAEC,QAAQ,EAAER,GAAG,CAAC,EAAE;IACnDS,KAAK,GAAG,UAAU;EACtB,CAAC,MACI,IAAI,CAACb,SAAS,CAACI,GAAG,EAAEC,OAAO,CAAC,EAAE;IAC/BQ,KAAK,GAAG,UAAU;EACtB;EACA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module"}