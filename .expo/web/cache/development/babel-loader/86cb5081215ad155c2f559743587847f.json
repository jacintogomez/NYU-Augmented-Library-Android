{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { Camera } from 'expo-camera';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState, useEffect } from 'react';\nexport default function ARVision() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(Camera.Constants.Type.back),\n    _useState4 = _slicedToArray(_useState3, 2),\n    type = _useState4[0],\n    setType = _useState4[1];\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  if (hasPermission === null) {\n    return React.createElement(View, null);\n  }\n  if (hasPermission === false) {\n    return React.createElement(Text, null, \"No access to camera\");\n  }\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Camera, {\n    style: styles.camera,\n    type: type\n  }, React.createElement(View, {\n    style: {\n      flex: 5\n    }\n  }), React.createElement(View, {\n    style: styles.movementContainer\n  }, React.createElement(View, {\n    style: [styles.arrowContainer, {\n      flex: 3\n    }]\n  }, React.createElement(AntDesign, {\n    name: \"caretup\",\n    size: 24,\n    color: \"white\"\n  })), React.createElement(View, {\n    style: [styles.arrowContainer, {\n      flex: 3,\n      justifyContent: 'space-around',\n      flexDirection: 'row'\n    }]\n  }, React.createElement(AntDesign, {\n    name: \"caretleft\",\n    size: 24,\n    color: \"white\"\n  }), React.createElement(AntDesign, {\n    name: \"caretright\",\n    size: 24,\n    color: \"white\"\n  })), React.createElement(View, {\n    style: [styles.arrowContainer, {\n      flex: 4,\n      justifyContent: \"flex-end\",\n      paddingBottom: 20\n    }]\n  }, React.createElement(AntDesign, {\n    name: \"caretdown\",\n    size: 24,\n    color: \"white\"\n  }))), React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    }\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \" Flip \")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  camera: {\n    flex: 1\n  },\n  movementContainer: {\n    flex: 1,\n    backgroundColor: \"transparent\"\n  },\n  movement: {\n    alignSelf: 'flex-end'\n  },\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    margin: 20\n  },\n  button: {\n    flex: 0.1,\n    backgroundColor: 'green',\n    alignSelf: 'flex-end',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 18,\n    color: 'white'\n  },\n  arrowContainer: {\n    flex: 1,\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["AntDesign","Camera","React","useState","useEffect","ARVision","hasPermission","setHasPermission","Constants","Type","back","type","setType","requestCameraPermissionsAsync","status","styles","container","camera","flex","movementContainer","arrowContainer","justifyContent","flexDirection","paddingBottom","buttonContainer","button","front","text","StyleSheet","create","backgroundColor","movement","alignSelf","margin","alignItems","fontSize","color"],"sources":["C:/Users/letha/WebstormProjects/NYU-Library-Frontend/Screens/ARVision.js"],"sourcesContent":["import {AntDesign} from '@expo/vector-icons';\r\nimport {Camera} from 'expo-camera';\r\nimport {View, Text, TouchableOpacity, StyleSheet} from 'react-native';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nexport default function ARVision() {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [type, setType] = useState(Camera.Constants.Type.back);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const {status} = await Camera.requestCameraPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })();\r\n  }, []);\r\n\r\n  if (hasPermission === null) {\r\n    return <View />;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n  return(\r\n    <View style={styles.container}>\r\n      <Camera style={styles.camera} type={type}>\r\n        <View style={{flex: 5}}>\r\n\r\n        </View>\r\n        <View style={styles.movementContainer}>\r\n          <View style={[styles.arrowContainer, {flex: 3}]}>\r\n            <AntDesign name={\"caretup\"} size={24} color={\"white\"}>\r\n            </AntDesign>\r\n          </View>\r\n          <View style={[styles.arrowContainer, {flex:3, justifyContent:'space-around',flexDirection:'row',}]}>\r\n            <AntDesign name={\"caretleft\"} size={24} color={\"white\"} />\r\n            <AntDesign name={\"caretright\"} size={24} color={\"white\"} />\r\n          </View>\r\n          <View style={[styles.arrowContainer, {flex:4, justifyContent:\"flex-end\", paddingBottom:20}]}>\r\n            <AntDesign name={\"caretdown\"} size={24} color={\"white\"} />\r\n          </View>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {\r\n              setType(\r\n                type === Camera.Constants.Type.back\r\n                  ? Camera.Constants.Type.front\r\n                  : Camera.Constants.Type.back\r\n              );\r\n            }}>\r\n            <Text style={styles.text}> Flip </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Camera>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  camera: {\r\n    flex: 1,\r\n  },\r\n  movementContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"transparent\"\r\n  },\r\n  movement: {\r\n    alignSelf: 'flex-end'\r\n  },\r\n  buttonContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'transparent',\r\n    flexDirection: 'row',\r\n    margin: 20,\r\n  },\r\n  button: {\r\n    flex: 0.1,\r\n    backgroundColor: 'green',\r\n    alignSelf: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    fontSize: 18,\r\n    color: 'white',\r\n  },\r\n  arrowContainer: {flex: 1, alignItems: 'center'},\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}