{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport min from 'lodash/min';\nimport map from 'lodash/map';\nimport times from 'lodash/times';\nimport groupBy from 'lodash/groupBy';\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport constants from \"../commons/constants\";\nimport { generateDay } from \"../dateutils\";\nimport { getCalendarDateString } from \"../services\";\nimport styleConstructor from \"./style\";\nimport { populateEvents, HOUR_BLOCK_HEIGHT } from \"./Packer\";\nimport { calcTimeOffset } from \"./helpers/presenter\";\nimport TimelineHours from \"./TimelineHours\";\nimport EventBlock from \"./EventBlock\";\nimport NowIndicator from \"./NowIndicator\";\nimport useTimelineOffset from \"./useTimelineOffset\";\n\nvar Timeline = function Timeline(props) {\n  var _props$format24h = props.format24h,\n      format24h = _props$format24h === void 0 ? true : _props$format24h,\n      _props$start = props.start,\n      start = _props$start === void 0 ? 0 : _props$start,\n      _props$end = props.end,\n      end = _props$end === void 0 ? 24 : _props$end,\n      _props$date = props.date,\n      date = _props$date === void 0 ? '' : _props$date,\n      events = props.events,\n      onEventPress = props.onEventPress,\n      onBackgroundLongPress = props.onBackgroundLongPress,\n      onBackgroundLongPressOut = props.onBackgroundLongPressOut,\n      renderEvent = props.renderEvent,\n      theme = props.theme,\n      scrollToFirst = props.scrollToFirst,\n      scrollToNow = props.scrollToNow,\n      initialTime = props.initialTime,\n      showNowIndicator = props.showNowIndicator,\n      scrollOffset = props.scrollOffset,\n      onChangeOffset = props.onChangeOffset,\n      _props$overlapEventsS = props.overlapEventsSpacing,\n      overlapEventsSpacing = _props$overlapEventsS === void 0 ? 0 : _props$overlapEventsS,\n      _props$rightEdgeSpaci = props.rightEdgeSpacing,\n      rightEdgeSpacing = _props$rightEdgeSpaci === void 0 ? 0 : _props$rightEdgeSpaci,\n      unavailableHours = props.unavailableHours,\n      unavailableHoursColor = props.unavailableHoursColor,\n      eventTapped = props.eventTapped,\n      _props$numberOfDays = props.numberOfDays,\n      numberOfDays = _props$numberOfDays === void 0 ? 1 : _props$numberOfDays,\n      _props$timelineLeftIn = props.timelineLeftInset,\n      timelineLeftInset = _props$timelineLeftIn === void 0 ? 0 : _props$timelineLeftIn;\n  var pageDates = useMemo(function () {\n    return typeof date === 'string' ? [date] : date;\n  }, [date]);\n  var groupedEvents = useMemo(function () {\n    return groupBy(events, function (e) {\n      return getCalendarDateString(e.start);\n    });\n  }, [events]);\n  var pageEvents = useMemo(function () {\n    return map(pageDates, function (d) {\n      return groupedEvents[d] || [];\n    });\n  }, [pageDates, groupedEvents]);\n  var scrollView = useRef();\n  var calendarHeight = useRef((end - start) * HOUR_BLOCK_HEIGHT);\n  var styles = useRef(styleConstructor(theme || props.styles, calendarHeight.current));\n\n  var _useTimelineOffset = useTimelineOffset({\n    onChangeOffset: onChangeOffset,\n    scrollOffset: scrollOffset,\n    scrollViewRef: scrollView\n  }),\n      scrollEvents = _useTimelineOffset.scrollEvents;\n\n  var width = useMemo(function () {\n    return constants.screenWidth - timelineLeftInset;\n  }, [timelineLeftInset]);\n  var packedEvents = useMemo(function () {\n    return map(pageEvents, function (_e, i) {\n      return populateEvents(pageEvents[i], {\n        screenWidth: width / numberOfDays,\n        dayStart: start,\n        overlapEventsSpacing: overlapEventsSpacing / numberOfDays,\n        rightEdgeSpacing: rightEdgeSpacing / numberOfDays\n      });\n    });\n  }, [pageEvents, start, numberOfDays]);\n  useEffect(function () {\n    var initialPosition = 0;\n\n    if (scrollToNow) {\n      initialPosition = calcTimeOffset(HOUR_BLOCK_HEIGHT);\n    } else if (scrollToFirst && packedEvents[0].length > 0) {\n      var _min;\n\n      initialPosition = (_min = min(map(packedEvents[0], 'top'))) != null ? _min : 0;\n    } else if (initialTime) {\n      initialPosition = calcTimeOffset(HOUR_BLOCK_HEIGHT, initialTime.hour, initialTime.minutes);\n    }\n\n    if (initialPosition) {\n      setTimeout(function () {\n        var _scrollView$current;\n\n        scrollView == null ? void 0 : (_scrollView$current = scrollView.current) == null ? void 0 : _scrollView$current.scrollTo({\n          y: Math.max(0, initialPosition - HOUR_BLOCK_HEIGHT),\n          animated: true\n        });\n      }, 0);\n    }\n  }, []);\n\n  var _onEventPress = useCallback(function (dateIndex, eventIndex) {\n    var event = packedEvents[dateIndex][eventIndex];\n\n    if (eventTapped) {\n      eventTapped(event);\n    } else {\n      onEventPress == null ? void 0 : onEventPress(event);\n    }\n  }, [onEventPress, eventTapped]);\n\n  var renderEvents = function renderEvents(dayIndex) {\n    var events = packedEvents[dayIndex].map(function (event, eventIndex) {\n      var onEventPress = function onEventPress() {\n        return _onEventPress(dayIndex, eventIndex);\n      };\n\n      return React.createElement(EventBlock, {\n        key: eventIndex,\n        index: eventIndex,\n        event: event,\n        styles: styles.current,\n        format24h: format24h,\n        onPress: onEventPress,\n        renderEvent: renderEvent\n      });\n    });\n    return React.createElement(View, {\n      pointerEvents: 'box-none',\n      style: [{\n        marginLeft: dayIndex === 0 ? timelineLeftInset : undefined\n      }, styles.current.eventsContainer]\n    }, events);\n  };\n\n  var renderTimelineDay = function renderTimelineDay(dayIndex) {\n    var indexOfToday = pageDates.indexOf(generateDay(new Date().toString()));\n    var left = timelineLeftInset + indexOfToday * width / numberOfDays;\n    return React.createElement(React.Fragment, {\n      key: dayIndex\n    }, renderEvents(dayIndex), indexOfToday !== -1 && showNowIndicator && React.createElement(NowIndicator, {\n      width: width / numberOfDays,\n      left: left,\n      styles: styles.current\n    }));\n  };\n\n  return React.createElement(ScrollView, _extends({\n    ref: scrollView,\n    style: styles.current.container,\n    contentContainerStyle: [styles.current.contentStyle, {\n      width: constants.screenWidth\n    }],\n    showsVerticalScrollIndicator: false\n  }, scrollEvents), React.createElement(TimelineHours, {\n    start: start,\n    end: end,\n    date: pageDates[0],\n    format24h: format24h,\n    styles: styles.current,\n    unavailableHours: unavailableHours,\n    unavailableHoursColor: unavailableHoursColor,\n    onBackgroundLongPress: onBackgroundLongPress,\n    onBackgroundLongPressOut: onBackgroundLongPressOut,\n    width: width,\n    numberOfDays: numberOfDays,\n    timelineLeftInset: timelineLeftInset\n  }), times(numberOfDays, renderTimelineDay));\n};\n\nexport default React.memo(Timeline);","map":{"version":3,"sources":["C:/Users/Eileen Twimasi/WebstormProjects/NYU-Library-Frontend/node_modules/react-native-calendars/src/timeline/Timeline.js"],"names":["min","map","times","groupBy","React","useCallback","useEffect","useMemo","useRef","constants","generateDay","getCalendarDateString","styleConstructor","populateEvents","HOUR_BLOCK_HEIGHT","calcTimeOffset","TimelineHours","EventBlock","NowIndicator","useTimelineOffset","Timeline","props","format24h","start","end","date","events","onEventPress","onBackgroundLongPress","onBackgroundLongPressOut","renderEvent","theme","scrollToFirst","scrollToNow","initialTime","showNowIndicator","scrollOffset","onChangeOffset","overlapEventsSpacing","rightEdgeSpacing","unavailableHours","unavailableHoursColor","eventTapped","numberOfDays","timelineLeftInset","pageDates","groupedEvents","e","pageEvents","d","scrollView","calendarHeight","styles","current","scrollViewRef","scrollEvents","width","screenWidth","packedEvents","_e","i","dayStart","initialPosition","length","hour","minutes","setTimeout","scrollTo","y","Math","max","animated","_onEventPress","dateIndex","eventIndex","event","renderEvents","dayIndex","marginLeft","undefined","eventsContainer","renderTimelineDay","indexOfToday","indexOf","Date","toString","left","container","contentStyle","memo"],"mappings":"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","sourcesContent":["import min from 'lodash/min';\nimport map from 'lodash/map';\nimport times from 'lodash/times';\nimport groupBy from 'lodash/groupBy';\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { View, ScrollView } from 'react-native';\nimport constants from '../commons/constants';\nimport { generateDay } from '../dateutils';\nimport { getCalendarDateString } from '../services';\nimport styleConstructor from './style';\nimport { populateEvents, HOUR_BLOCK_HEIGHT } from './Packer';\nimport { calcTimeOffset } from './helpers/presenter';\nimport TimelineHours from './TimelineHours';\nimport EventBlock from './EventBlock';\nimport NowIndicator from './NowIndicator';\nimport useTimelineOffset from './useTimelineOffset';\nconst Timeline = (props) => {\n    const { format24h = true, start = 0, end = 24, date = '', events, onEventPress, onBackgroundLongPress, onBackgroundLongPressOut, renderEvent, theme, scrollToFirst, scrollToNow, initialTime, showNowIndicator, scrollOffset, onChangeOffset, overlapEventsSpacing = 0, rightEdgeSpacing = 0, unavailableHours, unavailableHoursColor, eventTapped, numberOfDays = 1, timelineLeftInset = 0 } = props;\n    const pageDates = useMemo(() => {\n        return typeof date === 'string' ? [date] : date;\n    }, [date]);\n    const groupedEvents = useMemo(() => {\n        return groupBy(events, e => getCalendarDateString(e.start));\n    }, [events]);\n    const pageEvents = useMemo(() => {\n        return map(pageDates, d => groupedEvents[d] || []);\n    }, [pageDates, groupedEvents]);\n    const scrollView = useRef();\n    const calendarHeight = useRef((end - start) * HOUR_BLOCK_HEIGHT);\n    const styles = useRef(styleConstructor(theme || props.styles, calendarHeight.current));\n    const { scrollEvents } = useTimelineOffset({ onChangeOffset, scrollOffset, scrollViewRef: scrollView });\n    const width = useMemo(() => {\n        return constants.screenWidth - timelineLeftInset;\n    }, [timelineLeftInset]);\n    const packedEvents = useMemo(() => {\n        return map(pageEvents, (_e, i) => {\n            return populateEvents(pageEvents[i], {\n                screenWidth: width / numberOfDays,\n                dayStart: start,\n                overlapEventsSpacing: overlapEventsSpacing / numberOfDays,\n                rightEdgeSpacing: rightEdgeSpacing / numberOfDays\n            });\n        });\n    }, [pageEvents, start, numberOfDays]);\n    useEffect(() => {\n        let initialPosition = 0;\n        if (scrollToNow) {\n            initialPosition = calcTimeOffset(HOUR_BLOCK_HEIGHT);\n        }\n        else if (scrollToFirst && packedEvents[0].length > 0) {\n            initialPosition = min(map(packedEvents[0], 'top')) ?? 0;\n        }\n        else if (initialTime) {\n            initialPosition = calcTimeOffset(HOUR_BLOCK_HEIGHT, initialTime.hour, initialTime.minutes);\n        }\n        if (initialPosition) {\n            setTimeout(() => {\n                scrollView?.current?.scrollTo({\n                    y: Math.max(0, initialPosition - HOUR_BLOCK_HEIGHT),\n                    animated: true\n                });\n            }, 0);\n        }\n    }, []);\n    const _onEventPress = useCallback((dateIndex, eventIndex) => {\n        const event = packedEvents[dateIndex][eventIndex];\n        if (eventTapped) {\n            //TODO: remove after deprecation\n            eventTapped(event);\n        }\n        else {\n            onEventPress?.(event);\n        }\n    }, [onEventPress, eventTapped]);\n    const renderEvents = (dayIndex) => {\n        const events = packedEvents[dayIndex].map((event, eventIndex) => {\n            const onEventPress = () => _onEventPress(dayIndex, eventIndex);\n            return (<EventBlock key={eventIndex} index={eventIndex} event={event} styles={styles.current} format24h={format24h} onPress={onEventPress} renderEvent={renderEvent}/>);\n        });\n        return (<View pointerEvents={'box-none'} style={[{ marginLeft: dayIndex === 0 ? timelineLeftInset : undefined }, styles.current.eventsContainer]}>\n        {events}\n      </View>);\n    };\n    const renderTimelineDay = (dayIndex) => {\n        const indexOfToday = pageDates.indexOf(generateDay(new Date().toString()));\n        const left = timelineLeftInset + indexOfToday * width / numberOfDays;\n        return (<React.Fragment key={dayIndex}>\n        {renderEvents(dayIndex)}\n        {indexOfToday !== -1 && showNowIndicator && <NowIndicator width={width / numberOfDays} left={left} styles={styles.current}/>}\n      </React.Fragment>);\n    };\n    return (<ScrollView \n    // @ts-expect-error\n    ref={scrollView} style={styles.current.container} contentContainerStyle={[styles.current.contentStyle, { width: constants.screenWidth }]} showsVerticalScrollIndicator={false} {...scrollEvents}>\n      <TimelineHours start={start} end={end} date={pageDates[0]} format24h={format24h} styles={styles.current} unavailableHours={unavailableHours} unavailableHoursColor={unavailableHoursColor} onBackgroundLongPress={onBackgroundLongPress} onBackgroundLongPressOut={onBackgroundLongPressOut} width={width} numberOfDays={numberOfDays} timelineLeftInset={timelineLeftInset}/>\n      {times(numberOfDays, renderTimelineDay)}\n    </ScrollView>);\n};\nexport default React.memo(Timeline);\n"]},"metadata":{},"sourceType":"module"}