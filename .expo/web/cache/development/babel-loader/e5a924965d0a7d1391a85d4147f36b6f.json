{"ast":null,"code":"var _require = require(\"./dateutils\"),\n    isToday = _require.isToday,\n    isDateNotInRange = _require.isDateNotInRange,\n    sameMonth = _require.sameMonth;\n\nvar _require2 = require(\"./interface\"),\n    toMarkingFormat = _require2.toMarkingFormat;\n\nexport function getState(day, current, props, disableDaySelection) {\n  var _context$date;\n\n  var minDate = props.minDate,\n      maxDate = props.maxDate,\n      disabledByDefault = props.disabledByDefault,\n      context = props.context;\n  var state = '';\n\n  if (!disableDaySelection && ((_context$date = context == null ? void 0 : context.date) != null ? _context$date : toMarkingFormat(current)) === toMarkingFormat(day)) {\n    state = 'selected';\n  } else if (isToday(day)) {\n    state = 'today';\n  } else if (disabledByDefault) {\n    state = 'disabled';\n  } else if (isDateNotInRange(day, minDate, maxDate)) {\n    state = 'disabled';\n  } else if (!sameMonth(day, current)) {\n    state = 'disabled';\n  }\n\n  return state;\n}","map":{"version":3,"sources":["C:/Users/Eileen Twimasi/WebstormProjects/NYU-Library-Frontend/node_modules/react-native-calendars/src/day-state-manager.js"],"names":["require","isToday","isDateNotInRange","sameMonth","toMarkingFormat","getState","day","current","props","disableDaySelection","minDate","maxDate","disabledByDefault","context","state","date"],"mappings":"AAAA,eAAiDA,OAAO,eAAxD;AAAA,IAAQC,OAAR,YAAQA,OAAR;AAAA,IAAiBC,gBAAjB,YAAiBA,gBAAjB;AAAA,IAAmCC,SAAnC,YAAmCA,SAAnC;;AACA,gBAA4BH,OAAO,eAAnC;AAAA,IAAQI,eAAR,aAAQA,eAAR;;AACA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuCC,mBAAvC,EAA4D;AAAA;;AAC/D,MAAQC,OAAR,GAAyDF,KAAzD,CAAQE,OAAR;AAAA,MAAiBC,OAAjB,GAAyDH,KAAzD,CAAiBG,OAAjB;AAAA,MAA0BC,iBAA1B,GAAyDJ,KAAzD,CAA0BI,iBAA1B;AAAA,MAA6CC,OAA7C,GAAyDL,KAAzD,CAA6CK,OAA7C;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAI,CAACL,mBAAD,IAAyB,kBAACI,OAAD,oBAACA,OAAO,CAAEE,IAAV,4BAAkBX,eAAe,CAACG,OAAD,CAAjC,MAAgDH,eAAe,CAACE,GAAD,CAA5F,EAAoG;AAChGQ,IAAAA,KAAK,GAAG,UAAR;AACH,GAFD,MAGK,IAAIb,OAAO,CAACK,GAAD,CAAX,EAAkB;AACnBQ,IAAAA,KAAK,GAAG,OAAR;AACH,GAFI,MAGA,IAAIF,iBAAJ,EAAuB;AACxBE,IAAAA,KAAK,GAAG,UAAR;AACH,GAFI,MAGA,IAAIZ,gBAAgB,CAACI,GAAD,EAAMI,OAAN,EAAeC,OAAf,CAApB,EAA6C;AAC9CG,IAAAA,KAAK,GAAG,UAAR;AACH,GAFI,MAGA,IAAI,CAACX,SAAS,CAACG,GAAD,EAAMC,OAAN,CAAd,EAA8B;AAC/BO,IAAAA,KAAK,GAAG,UAAR;AACH;;AACD,SAAOA,KAAP;AACH","sourcesContent":["const { isToday, isDateNotInRange, sameMonth } = require('./dateutils');\nconst { toMarkingFormat } = require('./interface');\nexport function getState(day, current, props, disableDaySelection) {\n    const { minDate, maxDate, disabledByDefault, context } = props;\n    let state = '';\n    if (!disableDaySelection && ((context?.date ?? toMarkingFormat(current)) === toMarkingFormat(day))) {\n        state = 'selected';\n    }\n    else if (isToday(day)) {\n        state = 'today';\n    }\n    else if (disabledByDefault) {\n        state = 'disabled';\n    }\n    else if (isDateNotInRange(day, minDate, maxDate)) {\n        state = 'disabled';\n    }\n    else if (!sameMonth(day, current)) {\n        state = 'disabled';\n    }\n    return state;\n}\n"]},"metadata":{},"sourceType":"module"}