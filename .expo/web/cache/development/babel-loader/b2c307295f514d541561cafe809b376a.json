{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport throttle from 'lodash/throttle';\nimport XDate from 'xdate';\nimport Context from \"../expandableCalendar/Context\";\nimport { UpdateSources } from \"../expandableCalendar/commons\";\nimport { isToday } from \"../dateutils\";\nimport Timeline from \"../timeline/Timeline\";\nimport InfiniteList from \"../infinite-list\";\nimport useTimelinePages, { INITIAL_PAGE, NEAR_EDGE_THRESHOLD } from \"./useTimelinePages\";\nvar TimelineList = function TimelineList(props) {\n  var timelineProps = props.timelineProps,\n    events = props.events,\n    renderItem = props.renderItem,\n    showNowIndicator = props.showNowIndicator,\n    scrollToFirst = props.scrollToFirst,\n    scrollToNow = props.scrollToNow,\n    initialTime = props.initialTime;\n  var _useContext = useContext(Context),\n    date = _useContext.date,\n    updateSource = _useContext.updateSource,\n    setDate = _useContext.setDate;\n  var listRef = useRef();\n  var prevDate = useRef(date);\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    timelineOffset = _useState2[0],\n    setTimelineOffset = _useState2[1];\n  var _useTimelinePages = useTimelinePages({\n      date: date,\n      listRef: listRef\n    }),\n    pages = _useTimelinePages.pages,\n    pagesRef = _useTimelinePages.pagesRef,\n    resetPages = _useTimelinePages.resetPages,\n    resetPagesDebounce = _useTimelinePages.resetPagesDebounce,\n    scrollToPageDebounce = _useTimelinePages.scrollToPageDebounce,\n    shouldResetPages = _useTimelinePages.shouldResetPages,\n    isOutOfRange = _useTimelinePages.isOutOfRange;\n  useEffect(function () {\n    if (date !== prevDate.current) {\n      var datePageIndex = pagesRef.current.indexOf(date);\n      if (updateSource !== UpdateSources.LIST_DRAG) {\n        if (isOutOfRange(datePageIndex)) {\n          updateSource === UpdateSources.DAY_PRESS ? resetPages(date) : resetPagesDebounce(date);\n        } else {\n          scrollToPageDebounce(datePageIndex);\n        }\n      }\n      prevDate.current = date;\n    }\n  }, [date, updateSource]);\n  var onScroll = useCallback(function () {\n    if (shouldResetPages.current) {\n      resetPagesDebounce.cancel();\n    }\n  }, []);\n  var onMomentumScrollEnd = useCallback(function () {\n    if (shouldResetPages.current) {\n      resetPagesDebounce(prevDate.current);\n    }\n  }, []);\n  var onPageChange = useCallback(throttle(function (pageIndex) {\n    var newDate = pagesRef.current[pageIndex];\n    if (newDate !== prevDate.current) {\n      setDate(newDate, UpdateSources.LIST_DRAG);\n    }\n  }, 0), []);\n  var onReachNearEdge = useCallback(function () {\n    shouldResetPages.current = true;\n  }, []);\n  var onTimelineOffsetChange = useCallback(function (offset) {\n    setTimelineOffset(offset);\n  }, []);\n  var renderPage = useCallback(function (_type, item, index) {\n    var timelineEvent = events[item];\n    var isCurrent = prevDate.current === item;\n    var isInitialPage = index === INITIAL_PAGE;\n    var _isToday = isToday(new XDate(item));\n    var _timelineProps = _objectSpread(_objectSpread({}, timelineProps), {}, {\n      key: item,\n      date: item,\n      events: timelineEvent,\n      scrollToNow: _isToday && isInitialPage && scrollToNow,\n      initialTime: !_isToday && isInitialPage ? initialTime : undefined,\n      scrollToFirst: !_isToday && isInitialPage && scrollToFirst,\n      scrollOffset: timelineOffset,\n      onChangeOffset: onTimelineOffsetChange,\n      showNowIndicator: _isToday && showNowIndicator\n    });\n    if (renderItem) {\n      return renderItem(_timelineProps, {\n        item: item,\n        index: index,\n        isCurrent: isCurrent,\n        isInitialPage: isInitialPage,\n        isToday: _isToday\n      });\n    }\n    return React.createElement(React.Fragment, null, React.createElement(Timeline, _timelineProps));\n  }, [events, timelineOffset, showNowIndicator]);\n  return React.createElement(InfiniteList, {\n    ref: listRef,\n    data: pages,\n    renderItem: renderPage,\n    onPageChange: onPageChange,\n    onReachNearEdge: onReachNearEdge,\n    onReachNearEdgeThreshold: NEAR_EDGE_THRESHOLD,\n    onScroll: onScroll,\n    extendedState: {\n      todayEvents: events[date],\n      pages: pages\n    },\n    initialPageIndex: INITIAL_PAGE,\n    scrollViewProps: {\n      onMomentumScrollEnd: onMomentumScrollEnd\n    }\n  });\n};\nexport default TimelineList;","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useRef","useState","throttle","XDate","Context","UpdateSources","isToday","Timeline","InfiniteList","useTimelinePages","INITIAL_PAGE","NEAR_EDGE_THRESHOLD","TimelineList","props","timelineProps","events","renderItem","showNowIndicator","scrollToFirst","scrollToNow","initialTime","date","updateSource","setDate","listRef","prevDate","timelineOffset","setTimelineOffset","pages","pagesRef","resetPages","resetPagesDebounce","scrollToPageDebounce","shouldResetPages","isOutOfRange","current","datePageIndex","indexOf","LIST_DRAG","DAY_PRESS","onScroll","cancel","onMomentumScrollEnd","onPageChange","pageIndex","newDate","onReachNearEdge","onTimelineOffsetChange","offset","renderPage","_type","item","index","timelineEvent","isCurrent","isInitialPage","_isToday","_timelineProps","key","undefined","scrollOffset","onChangeOffset","todayEvents"],"sources":["C:/Users/letha/WebstormProjects/NYU-Library-Frontend/node_modules/react-native-calendars/src/timeline-list/index.js"],"sourcesContent":["import React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\n// import {Text} from 'react-native';\nimport throttle from 'lodash/throttle';\nimport XDate from 'xdate';\nimport Context from '../expandableCalendar/Context';\nimport { UpdateSources } from '../expandableCalendar/commons';\nimport { isToday } from '../dateutils';\nimport Timeline from '../timeline/Timeline';\nimport InfiniteList from '../infinite-list';\nimport useTimelinePages, { INITIAL_PAGE, NEAR_EDGE_THRESHOLD } from './useTimelinePages';\nconst TimelineList = (props) => {\n    const { timelineProps, events, renderItem, showNowIndicator, scrollToFirst, scrollToNow, initialTime } = props;\n    const { date, updateSource, setDate } = useContext(Context);\n    const listRef = useRef();\n    const prevDate = useRef(date);\n    const [timelineOffset, setTimelineOffset] = useState();\n    const { pages, pagesRef, resetPages, resetPagesDebounce, scrollToPageDebounce, shouldResetPages, isOutOfRange } = useTimelinePages({ date, listRef });\n    useEffect(() => {\n        if (date !== prevDate.current) {\n            const datePageIndex = pagesRef.current.indexOf(date);\n            if (updateSource !== UpdateSources.LIST_DRAG) {\n                if (isOutOfRange(datePageIndex)) {\n                    updateSource === UpdateSources.DAY_PRESS ? resetPages(date) : resetPagesDebounce(date);\n                }\n                else {\n                    scrollToPageDebounce(datePageIndex);\n                }\n            }\n            prevDate.current = date;\n        }\n    }, [date, updateSource]);\n    const onScroll = useCallback(() => {\n        if (shouldResetPages.current) {\n            resetPagesDebounce.cancel();\n        }\n    }, []);\n    const onMomentumScrollEnd = useCallback(() => {\n        if (shouldResetPages.current) {\n            resetPagesDebounce(prevDate.current);\n        }\n    }, []);\n    const onPageChange = useCallback(throttle((pageIndex) => {\n        const newDate = pagesRef.current[pageIndex];\n        if (newDate !== prevDate.current) {\n            setDate(newDate, UpdateSources.LIST_DRAG);\n        }\n    }, 0), []);\n    const onReachNearEdge = useCallback(() => {\n        shouldResetPages.current = true;\n    }, []);\n    const onTimelineOffsetChange = useCallback(offset => {\n        setTimelineOffset(offset);\n    }, []);\n    const renderPage = useCallback((_type, item, index) => {\n        const timelineEvent = events[item];\n        const isCurrent = prevDate.current === item;\n        const isInitialPage = index === INITIAL_PAGE;\n        const _isToday = isToday(new XDate(item));\n        const _timelineProps = {\n            ...timelineProps,\n            key: item,\n            date: item,\n            events: timelineEvent,\n            scrollToNow: _isToday && isInitialPage && scrollToNow,\n            initialTime: !_isToday && isInitialPage ? initialTime : undefined,\n            scrollToFirst: !_isToday && isInitialPage && scrollToFirst,\n            scrollOffset: timelineOffset,\n            onChangeOffset: onTimelineOffsetChange,\n            showNowIndicator: _isToday && showNowIndicator\n        };\n        if (renderItem) {\n            return renderItem(_timelineProps, { item, index, isCurrent, isInitialPage, isToday: _isToday });\n        }\n        return (<>\n          <Timeline {..._timelineProps}/>\n          {/* NOTE: Keeping this for easy debugging */}\n          {/* <Text style={{position: 'absolute'}}>{item}</Text> */}\n        </>);\n    }, [events, timelineOffset, showNowIndicator]);\n    return (<InfiniteList ref={listRef} data={pages} renderItem={renderPage} onPageChange={onPageChange} onReachNearEdge={onReachNearEdge} onReachNearEdgeThreshold={NEAR_EDGE_THRESHOLD} onScroll={onScroll} extendedState={{ todayEvents: events[date], pages }} initialPageIndex={INITIAL_PAGE} scrollViewProps={{\n            onMomentumScrollEnd\n        }}/>);\n};\nexport default TimelineList;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnF,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO;AACd,SAASC,aAAa;AACtB,SAASC,OAAO;AAChB,OAAOC,QAAQ;AACf,OAAOC,YAAY;AACnB,OAAOC,gBAAgB,IAAIC,YAAY,EAAEC,mBAAmB;AAC5D,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAK,EAAK;EAC5B,IAAQC,aAAa,GAAoFD,KAAK,CAAtGC,aAAa;IAAEC,MAAM,GAA4EF,KAAK,CAAvFE,MAAM;IAAEC,UAAU,GAAgEH,KAAK,CAA/EG,UAAU;IAAEC,gBAAgB,GAA8CJ,KAAK,CAAnEI,gBAAgB;IAAEC,aAAa,GAA+BL,KAAK,CAAjDK,aAAa;IAAEC,WAAW,GAAkBN,KAAK,CAAlCM,WAAW;IAAEC,WAAW,GAAKP,KAAK,CAArBO,WAAW;EACpG,kBAAwCtB,UAAU,CAACM,OAAO,CAAC;IAAnDiB,IAAI,eAAJA,IAAI;IAAEC,YAAY,eAAZA,YAAY;IAAEC,OAAO,eAAPA,OAAO;EACnC,IAAMC,OAAO,GAAGxB,MAAM,EAAE;EACxB,IAAMyB,QAAQ,GAAGzB,MAAM,CAACqB,IAAI,CAAC;EAC7B,gBAA4CpB,QAAQ,EAAE;IAAA;IAA/CyB,cAAc;IAAEC,iBAAiB;EACxC,wBAAkHlB,gBAAgB,CAAC;MAAEY,IAAI,EAAJA,IAAI;MAAEG,OAAO,EAAPA;IAAQ,CAAC,CAAC;IAA7II,KAAK,qBAALA,KAAK;IAAEC,QAAQ,qBAARA,QAAQ;IAAEC,UAAU,qBAAVA,UAAU;IAAEC,kBAAkB,qBAAlBA,kBAAkB;IAAEC,oBAAoB,qBAApBA,oBAAoB;IAAEC,gBAAgB,qBAAhBA,gBAAgB;IAAEC,YAAY,qBAAZA,YAAY;EAC7GnC,SAAS,CAAC,YAAM;IACZ,IAAIsB,IAAI,KAAKI,QAAQ,CAACU,OAAO,EAAE;MAC3B,IAAMC,aAAa,GAAGP,QAAQ,CAACM,OAAO,CAACE,OAAO,CAAChB,IAAI,CAAC;MACpD,IAAIC,YAAY,KAAKjB,aAAa,CAACiC,SAAS,EAAE;QAC1C,IAAIJ,YAAY,CAACE,aAAa,CAAC,EAAE;UAC7Bd,YAAY,KAAKjB,aAAa,CAACkC,SAAS,GAAGT,UAAU,CAACT,IAAI,CAAC,GAAGU,kBAAkB,CAACV,IAAI,CAAC;QAC1F,CAAC,MACI;UACDW,oBAAoB,CAACI,aAAa,CAAC;QACvC;MACJ;MACAX,QAAQ,CAACU,OAAO,GAAGd,IAAI;IAC3B;EACJ,CAAC,EAAE,CAACA,IAAI,EAAEC,YAAY,CAAC,CAAC;EACxB,IAAMkB,QAAQ,GAAG3C,WAAW,CAAC,YAAM;IAC/B,IAAIoC,gBAAgB,CAACE,OAAO,EAAE;MAC1BJ,kBAAkB,CAACU,MAAM,EAAE;IAC/B;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,IAAMC,mBAAmB,GAAG7C,WAAW,CAAC,YAAM;IAC1C,IAAIoC,gBAAgB,CAACE,OAAO,EAAE;MAC1BJ,kBAAkB,CAACN,QAAQ,CAACU,OAAO,CAAC;IACxC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,IAAMQ,YAAY,GAAG9C,WAAW,CAACK,QAAQ,CAAC,UAAC0C,SAAS,EAAK;IACrD,IAAMC,OAAO,GAAGhB,QAAQ,CAACM,OAAO,CAACS,SAAS,CAAC;IAC3C,IAAIC,OAAO,KAAKpB,QAAQ,CAACU,OAAO,EAAE;MAC9BZ,OAAO,CAACsB,OAAO,EAAExC,aAAa,CAACiC,SAAS,CAAC;IAC7C;EACJ,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EACV,IAAMQ,eAAe,GAAGjD,WAAW,CAAC,YAAM;IACtCoC,gBAAgB,CAACE,OAAO,GAAG,IAAI;EACnC,CAAC,EAAE,EAAE,CAAC;EACN,IAAMY,sBAAsB,GAAGlD,WAAW,CAAC,UAAAmD,MAAM,EAAI;IACjDrB,iBAAiB,CAACqB,MAAM,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EACN,IAAMC,UAAU,GAAGpD,WAAW,CAAC,UAACqD,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAK;IACnD,IAAMC,aAAa,GAAGtC,MAAM,CAACoC,IAAI,CAAC;IAClC,IAAMG,SAAS,GAAG7B,QAAQ,CAACU,OAAO,KAAKgB,IAAI;IAC3C,IAAMI,aAAa,GAAGH,KAAK,KAAK1C,YAAY;IAC5C,IAAM8C,QAAQ,GAAGlD,OAAO,CAAC,IAAIH,KAAK,CAACgD,IAAI,CAAC,CAAC;IACzC,IAAMM,cAAc,mCACb3C,aAAa;MAChB4C,GAAG,EAAEP,IAAI;MACT9B,IAAI,EAAE8B,IAAI;MACVpC,MAAM,EAAEsC,aAAa;MACrBlC,WAAW,EAAEqC,QAAQ,IAAID,aAAa,IAAIpC,WAAW;MACrDC,WAAW,EAAE,CAACoC,QAAQ,IAAID,aAAa,GAAGnC,WAAW,GAAGuC,SAAS;MACjEzC,aAAa,EAAE,CAACsC,QAAQ,IAAID,aAAa,IAAIrC,aAAa;MAC1D0C,YAAY,EAAElC,cAAc;MAC5BmC,cAAc,EAAEd,sBAAsB;MACtC9B,gBAAgB,EAAEuC,QAAQ,IAAIvC;IAAgB,EACjD;IACD,IAAID,UAAU,EAAE;MACZ,OAAOA,UAAU,CAACyC,cAAc,EAAE;QAAEN,IAAI,EAAJA,IAAI;QAAEC,KAAK,EAALA,KAAK;QAAEE,SAAS,EAATA,SAAS;QAAEC,aAAa,EAAbA,aAAa;QAAEjD,OAAO,EAAEkD;MAAS,CAAC,CAAC;IACnG;IACA,OAAQ,0CACN,oBAAC,QAAQ,EAAKC,cAAc,CAAG,CAG9B;EACP,CAAC,EAAE,CAAC1C,MAAM,EAAEW,cAAc,EAAET,gBAAgB,CAAC,CAAC;EAC9C,OAAQ,oBAAC,YAAY;IAAC,GAAG,EAAEO,OAAQ;IAAC,IAAI,EAAEI,KAAM;IAAC,UAAU,EAAEqB,UAAW;IAAC,YAAY,EAAEN,YAAa;IAAC,eAAe,EAAEG,eAAgB;IAAC,wBAAwB,EAAEnC,mBAAoB;IAAC,QAAQ,EAAE6B,QAAS;IAAC,aAAa,EAAE;MAAEsB,WAAW,EAAE/C,MAAM,CAACM,IAAI,CAAC;MAAEO,KAAK,EAALA;IAAM,CAAE;IAAC,gBAAgB,EAAElB,YAAa;IAAC,eAAe,EAAE;MACxSgC,mBAAmB,EAAnBA;IACJ;EAAE,EAAE;AACZ,CAAC;AACD,eAAe9B,YAAY"},"metadata":{},"sourceType":"module"}