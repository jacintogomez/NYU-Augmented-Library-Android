{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nimport ScreenTemplate from \"../screenTemplate\";\nimport RoomObject from \"../components/RoomObject\";\nvar month = {\n  \"2022-04-04\": {\n    room1: {\n      name: 'RHS349',\n      availableSlots: 2\n    },\n    room2: {\n      name: 'RHS350',\n      availableSlots: 0\n    },\n    room3: {\n      name: 'RHS349',\n      availableSlots: 1\n    },\n    room4: {\n      name: 'RHS349',\n      availableSlots: 20\n    }\n  },\n  \"2022-04-05\": {\n    room1: {\n      name: 'RHS349',\n      availableSlots: 20\n    },\n    room2: {\n      name: 'RHS350',\n      availableSlots: 20\n    },\n    room3: {\n      name: 'RHS349',\n      availableSlots: 20\n    },\n    room4: {\n      name: 'RHS349',\n      availableSlots: 20\n    }\n  },\n  \"2022-04-06\": {\n    room1: {\n      name: 'RHS349',\n      availableSlots: 0\n    },\n    room2: {\n      name: 'RHS350',\n      availableSlots: 0\n    },\n    room3: {\n      name: 'RHS349',\n      availableSlots: 0\n    },\n    room4: {\n      name: 'RHS349',\n      availableSlots: 0\n    }\n  }\n};\nfunction getDayCount(month) {\n  for (var _i = 0, _Object$entries = Object.entries(month); _i < _Object$entries.length; _i++) {\n    var day = _Object$entries[_i];\n    month[day[0]] = Object.values(day[1]).reduce(function (prev, curr) {\n      return prev + curr.availableSlots;\n    }, 0);\n  }\n  for (var _i2 = 0, _Object$keys = Object.keys(month); _i2 < _Object$keys.length; _i2++) {\n    var date = _Object$keys[_i2];\n    console.log(month[date]);\n    if (month[date] === 0) {\n      month[date] = {\n        startingDay: true,\n        color: '#eb344c',\n        endingDay: true,\n        opacity: 0\n      };\n    } else if (month[date] < TOTAL * .2) {\n      month[date] = {\n        startingDay: true,\n        color: '#e67f2c',\n        endingDay: true\n      };\n    } else if (month[date] >= TOTAL * .2 && month[date] < TOTAL * .8) {\n      month[date] = {\n        startingDay: true,\n        color: '#f7e731',\n        endingDay: true\n      };\n    } else {\n      month[date] = {\n        startingDay: true,\n        color: '#71eb34',\n        endingDay: true,\n        opacity: 0\n      };\n    }\n  }\n  return month;\n}\nvar TOTAL = 80;\nvar markedDatesVar = {\n  \"2022-04-06\": {\n    color: \"red\",\n    endingDay: true,\n    startingDay: true\n  }\n};\nexport default function ReserveScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  return React.createElement(ScreenTemplate, null, React.createElement(ScrollView, null, React.createElement(View, {\n    style: {\n      height: 50,\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      borderBottomWidth: 2,\n      borderColor: 'black',\n      borderStyle: 'dashed'\n    }\n  }, React.createElement(Text, null, \"Pick date\")), React.createElement(Calendar, {\n    markingType: 'period',\n    markedDates: data,\n    onDayPress: function onDayPress(day) {\n      navigation.navigate(\"PickTime\", {\n        day: day\n      });\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      setData(getDayCount(month));\n      console.log(\"hi\");\n    },\n    title: \"Refresh days\",\n    color: \"#841584\"\n  })));\n}","map":{"version":3,"names":["React","useState","View","ScrollView","Text","Button","Calendar","CalendarList","Agenda","ScreenTemplate","RoomObject","month","room1","name","availableSlots","room2","room3","room4","getDayCount","_i","_Object$entries","Object","entries","length","day","values","reduce","prev","curr","_i2","_Object$keys","keys","date","console","log","startingDay","color","endingDay","opacity","TOTAL","markedDatesVar","ReserveScreen","_ref","navigation","_useState","_useState2","_slicedToArray","data","setData","createElement","style","height","backgroundColor","justifyContent","borderBottomWidth","borderColor","borderStyle","markingType","markedDates","onDayPress","navigate","onPress","title"],"sources":["C:/Users/letha/WebstormProjects/NYU-Library-Frontend/Screens/Reserve Screen/ReserveScreen.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Text,\r\n    Button,\r\n} from 'react-native';\r\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars'\r\nimport ScreenTemplate from \"../screenTemplate\";\r\nimport RoomObject from \"../components/RoomObject\";\r\n\r\n\r\nconst month = { // test month\r\n    \"2022-04-04\": {\r\n        room1: {name: 'RHS349', availableSlots: 2},\r\n        room2: {name: 'RHS350', availableSlots: 0},\r\n        room3: {name: 'RHS349', availableSlots: 1},\r\n        room4: {name: 'RHS349', availableSlots: 20},\r\n    },\r\n    \"2022-04-05\" : {\r\n        room1: {name: 'RHS349', availableSlots: 20},\r\n        room2: {name: 'RHS350', availableSlots: 20},\r\n        room3: {name: 'RHS349', availableSlots: 20},\r\n        room4: {name: 'RHS349', availableSlots: 20},\r\n    },\r\n    \"2022-04-06\" : {\r\n        room1: {name: 'RHS349', availableSlots: 0},\r\n        room2: {name: 'RHS350', availableSlots: 0},\r\n        room3: {name: 'RHS349', availableSlots: 0},\r\n        room4: {name: 'RHS349', availableSlots: 0},\r\n    },\r\n}\r\n\r\n// Returns an object that contains the\r\n// amount of days available per room\r\nfunction getDayCount(month) {\r\n\r\n    // Formats all days so its { \"YYYY-MM-DD\" : Num of available rooms}\r\n    for (let day of Object.entries(month)) {\r\n        month[day[0]] = Object.values(day[1]).reduce(\r\n            (prev, curr) => prev + curr.availableSlots, 0\r\n        )\r\n    }\r\n\r\n    // Labels all days corresponding to fullness.\r\n    for (let date of Object.keys(month)) {\r\n        console.log(month[date])\r\n        if (month[date] === 0) {\r\n            month[date] = {startingDay: true, color: '#eb344c', endingDay: true, opacity: 0}\r\n        }\r\n        else if (month[date] < TOTAL * .2) {\r\n            month[date] = {startingDay: true, color: '#e67f2c', endingDay: true}\r\n        }\r\n        else if (month[date] >= TOTAL * .2 && month[date] < TOTAL * .8) {\r\n            month[date] = {startingDay: true, color: '#f7e731', endingDay: true}\r\n        }\r\n        else {\r\n            month[date] = {startingDay: true, color: '#71eb34', endingDay: true, opacity: 0}\r\n        }\r\n    }\r\n    return month\r\n}\r\nconst TOTAL = 80 // Total amount of rooms per day\r\n\r\nlet markedDatesVar = {\r\n    \"2022-04-06\": {\r\n        color: \"red\",\r\n        endingDay: true,\r\n        startingDay: true,\r\n    },\r\n}\r\n\r\nexport default function ReserveScreen({navigation}) {\r\n    const [data, setData] = useState({})\r\n  return(\r\n    <ScreenTemplate>\r\n      <ScrollView>\r\n        <View\r\n          style={{\r\n            height: 50,\r\n            backgroundColor:'white',\r\n            justifyContent:'center',\r\n            borderBottomWidth:2,\r\n            borderColor:'black',\r\n            borderStyle:'dashed'\r\n          }}>\r\n          <Text>Pick date</Text>\r\n        </View>\r\n          <Calendar markingType={'period'}\r\n                    markedDates={data}\r\n                    onDayPress={day => {\r\n                        navigation.navigate(\"PickTime\", {\r\n                            day: day\r\n                        })\r\n                    }}\r\n          />\r\n          <Button onPress={ () => {\r\n              setData(getDayCount(month))\r\n              console.log(\"hi\")\r\n          }} title={\"Refresh days\"} color={\"#841584\"}/>\r\n        \r\n      </ScrollView>\r\n    </ScreenTemplate>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}