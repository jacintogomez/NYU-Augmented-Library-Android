{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport XDate from 'xdate';\nimport React, { forwardRef, useImperativeHandle, useEffect, useRef, useState, useContext, useCallback } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getDefaultLocale } from \"../../services\";\nimport { toMarkingFormat } from \"../../interface\";\nimport { isToday, isPastDate } from \"../../dateutils\";\nimport { UpdateSources, todayString } from \"../commons\";\nimport styleConstructor from \"../style\";\nimport Context from \"./index\";\nvar TOP_POSITION = 65;\n\nvar DOWN_ICON = require(\"../../img/down.png\");\n\nvar UP_ICON = require(\"../../img/up.png\");\n\nvar TodayButton = function TodayButton(props, ref) {\n  useImperativeHandle(ref, function () {\n    return {\n      disable: function disable(shouldDisable) {\n        _disable(shouldDisable);\n      }\n    };\n  });\n  var _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 0 : _props$margin,\n      _props$disabledOpacit = props.disabledOpacity,\n      disabledOpacity = _props$disabledOpacit === void 0 ? 0.3 : _props$disabledOpacit,\n      theme = props.theme,\n      propsStyle = props.style;\n\n  var _useContext = useContext(Context),\n      date = _useContext.date,\n      setDate = _useContext.setDate;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      disabled = _useState2[0],\n      setDisabled = _useState2[1];\n\n  var style = useRef(styleConstructor(theme));\n  var state = isToday(date) ? 0 : isPastDate(date) ? -1 : 1;\n  var shouldShow = state !== 0;\n  useEffect(function () {\n    if (shouldShow) {\n      setButtonIcon(getButtonIcon());\n    }\n\n    animatePosition();\n  }, [state]);\n  useEffect(function () {\n    if (!shouldShow) {\n      return;\n    }\n\n    animateOpacity();\n  }, [disabled]);\n\n  var _disable = function _disable(shouldDisable) {\n    if (shouldDisable !== disabled) {\n      setDisabled(shouldDisable);\n    }\n  };\n\n  var getFormattedLabel = function getFormattedLabel() {\n    var todayStr = getDefaultLocale().today || todayString;\n    var today = todayStr.charAt(0).toUpperCase() + todayStr.slice(1);\n    return today;\n  };\n\n  var today = useRef(getFormattedLabel());\n\n  var getButtonIcon = function getButtonIcon() {\n    if (shouldShow) {\n      return state === 1 ? UP_ICON : DOWN_ICON;\n    }\n  };\n\n  var _useState3 = useState(getButtonIcon()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      buttonIcon = _useState4[0],\n      setButtonIcon = _useState4[1];\n\n  var buttonY = useRef(new Animated.Value(margin ? -margin : -TOP_POSITION));\n  var opacity = useRef(new Animated.Value(1));\n\n  var getPositionAnimation = function getPositionAnimation() {\n    var toValue = state === 0 ? TOP_POSITION : -margin || -TOP_POSITION;\n    return {\n      toValue: toValue,\n      tension: 30,\n      friction: 8,\n      useNativeDriver: true\n    };\n  };\n\n  var getOpacityAnimation = function getOpacityAnimation() {\n    return {\n      toValue: disabled ? disabledOpacity : 1,\n      duration: 500,\n      useNativeDriver: true\n    };\n  };\n\n  var animatePosition = function animatePosition() {\n    var animationData = getPositionAnimation();\n    Animated.spring(buttonY.current, _objectSpread({}, animationData)).start();\n  };\n\n  var animateOpacity = function animateOpacity() {\n    var animationData = getOpacityAnimation();\n    Animated.timing(opacity.current, _objectSpread({}, animationData)).start();\n  };\n\n  var getTodayDate = function getTodayDate() {\n    return toMarkingFormat(new XDate());\n  };\n\n  var onPress = useCallback(function () {\n    setDate(getTodayDate(), UpdateSources.TODAY_PRESS);\n  }, [setDate]);\n  return React.createElement(Animated.View, {\n    style: [style.current.todayButtonContainer, {\n      transform: [{\n        translateY: buttonY.current\n      }]\n    }]\n  }, React.createElement(TouchableOpacity, {\n    style: [style.current.todayButton, propsStyle],\n    onPress: onPress,\n    disabled: disabled\n  }, React.createElement(Animated.Image, {\n    style: [style.current.todayButtonImage, {\n      opacity: opacity.current\n    }],\n    source: buttonIcon\n  }), React.createElement(Animated.Text, {\n    allowFontScaling: false,\n    style: [style.current.todayButtonText, {\n      opacity: opacity.current\n    }]\n  }, today.current)));\n};\n\nexport default forwardRef(TodayButton);","map":{"version":3,"sources":["C:/Users/Eileen Twimasi/WebstormProjects/NYU-Library-Frontend/node_modules/react-native-calendars/src/expandableCalendar/Context/todayButton.js"],"names":["XDate","React","forwardRef","useImperativeHandle","useEffect","useRef","useState","useContext","useCallback","getDefaultLocale","toMarkingFormat","isToday","isPastDate","UpdateSources","todayString","styleConstructor","Context","TOP_POSITION","DOWN_ICON","require","UP_ICON","TodayButton","props","ref","disable","shouldDisable","margin","disabledOpacity","theme","propsStyle","style","date","setDate","disabled","setDisabled","state","shouldShow","setButtonIcon","getButtonIcon","animatePosition","animateOpacity","getFormattedLabel","todayStr","today","charAt","toUpperCase","slice","buttonIcon","buttonY","Animated","Value","opacity","getPositionAnimation","toValue","tension","friction","useNativeDriver","getOpacityAnimation","duration","animationData","spring","current","start","timing","getTodayDate","onPress","TODAY_PRESS","todayButtonContainer","transform","translateY","todayButton","todayButtonImage","todayButtonText"],"mappings":"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","sourcesContent":["import XDate from 'xdate';\nimport React, { forwardRef, useImperativeHandle, useEffect, useRef, useState, useContext, useCallback } from 'react';\nimport { Animated, TouchableOpacity } from 'react-native';\nimport { getDefaultLocale } from '../../services';\nimport { toMarkingFormat } from '../../interface';\nimport { isToday, isPastDate } from '../../dateutils';\nimport { UpdateSources, todayString } from '../commons';\nimport styleConstructor from '../style';\nimport Context from './index';\nconst TOP_POSITION = 65;\nconst DOWN_ICON = require('../../img/down.png');\nconst UP_ICON = require('../../img/up.png');\nconst TodayButton = (props, ref) => {\n    useImperativeHandle(ref, () => ({\n        disable: (shouldDisable) => {\n            disable(shouldDisable);\n        }\n    }));\n    const { margin = 0, disabledOpacity = 0.3, theme, style: propsStyle, } = props;\n    const { date, setDate } = useContext(Context);\n    const [disabled, setDisabled] = useState(false);\n    const style = useRef(styleConstructor(theme));\n    const state = isToday(date) ? 0 : isPastDate(date) ? -1 : 1;\n    const shouldShow = state !== 0;\n    /** Effects */\n    useEffect(() => {\n        if (shouldShow) {\n            setButtonIcon(getButtonIcon());\n        }\n        animatePosition();\n    }, [state]);\n    useEffect(() => {\n        if (!shouldShow) {\n            return;\n        }\n        animateOpacity();\n    }, [disabled]);\n    const disable = (shouldDisable) => {\n        if (shouldDisable !== disabled) {\n            setDisabled(shouldDisable);\n        }\n    };\n    /** Label */\n    const getFormattedLabel = () => {\n        const todayStr = getDefaultLocale().today || todayString;\n        const today = todayStr.charAt(0).toUpperCase() + todayStr.slice(1);\n        return today;\n    };\n    const today = useRef(getFormattedLabel());\n    /** Icon */\n    const getButtonIcon = () => {\n        if (shouldShow) {\n            return state === 1 ? UP_ICON : DOWN_ICON;\n        }\n    };\n    const [buttonIcon, setButtonIcon] = useState(getButtonIcon());\n    /** Animations */\n    const buttonY = useRef(new Animated.Value(margin ? -margin : -TOP_POSITION));\n    const opacity = useRef(new Animated.Value(1));\n    const getPositionAnimation = () => {\n        const toValue = state === 0 ? TOP_POSITION : -margin || -TOP_POSITION;\n        return {\n            toValue,\n            tension: 30,\n            friction: 8,\n            useNativeDriver: true\n        };\n    };\n    const getOpacityAnimation = () => {\n        return {\n            toValue: disabled ? disabledOpacity : 1,\n            duration: 500,\n            useNativeDriver: true\n        };\n    };\n    const animatePosition = () => {\n        const animationData = getPositionAnimation();\n        Animated.spring(buttonY.current, {\n            ...animationData\n        }).start();\n    };\n    const animateOpacity = () => {\n        const animationData = getOpacityAnimation();\n        Animated.timing(opacity.current, {\n            ...animationData\n        }).start();\n    };\n    const getTodayDate = () => {\n        return toMarkingFormat(new XDate());\n    };\n    const onPress = useCallback(() => {\n        setDate(getTodayDate(), UpdateSources.TODAY_PRESS);\n    }, [setDate]);\n    return (<Animated.View style={[style.current.todayButtonContainer, { transform: [{ translateY: buttonY.current }] }]}>\n      <TouchableOpacity style={[style.current.todayButton, propsStyle]} onPress={onPress} disabled={disabled}>\n        <Animated.Image style={[style.current.todayButtonImage, { opacity: opacity.current }]} source={buttonIcon}/>\n        <Animated.Text allowFontScaling={false} style={[style.current.todayButtonText, { opacity: opacity.current }]}>\n          {today.current}\n        </Animated.Text>\n      </TouchableOpacity>\n    </Animated.View>);\n};\nexport default forwardRef(TodayButton);\n"]},"metadata":{},"sourceType":"module"}