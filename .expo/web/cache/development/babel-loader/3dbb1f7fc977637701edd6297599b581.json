{"ast":null,"code":"import range from 'lodash/range';\nimport times from 'lodash/times';\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport constants from \"../commons/constants\";\nimport { buildTimeString, calcTimeByPosition, calcDateByPosition } from \"./helpers/presenter\";\nimport { buildUnavailableHoursBlocks, HOUR_BLOCK_HEIGHT } from \"./Packer\";\nvar dimensionWidth = constants.screenWidth;\nvar EVENT_DIFF = 20;\n\nvar TimelineHours = function TimelineHours(props) {\n  var format24h = props.format24h,\n      _props$start = props.start,\n      start = _props$start === void 0 ? 0 : _props$start,\n      _props$end = props.end,\n      end = _props$end === void 0 ? 24 : _props$end,\n      date = props.date,\n      unavailableHours = props.unavailableHours,\n      unavailableHoursColor = props.unavailableHoursColor,\n      styles = props.styles,\n      onBackgroundLongPress = props.onBackgroundLongPress,\n      onBackgroundLongPressOut = props.onBackgroundLongPressOut,\n      width = props.width,\n      _props$numberOfDays = props.numberOfDays,\n      numberOfDays = _props$numberOfDays === void 0 ? 1 : _props$numberOfDays,\n      _props$timelineLeftIn = props.timelineLeftInset,\n      timelineLeftInset = _props$timelineLeftIn === void 0 ? 0 : _props$timelineLeftIn;\n  var lastLongPressEventTime = useRef();\n  var offset = HOUR_BLOCK_HEIGHT;\n  var unavailableHoursBlocks = buildUnavailableHoursBlocks(unavailableHours, {\n    dayStart: start,\n    dayEnd: end\n  });\n  var hours = useMemo(function () {\n    return range(start, end + 1).map(function (i) {\n      var timeText;\n\n      if (i === start) {\n        timeText = '';\n      } else if (i < 12) {\n        timeText = !format24h ? i + \" AM\" : i + \":00\";\n      } else if (i === 12) {\n        timeText = !format24h ? i + \" PM\" : i + \":00\";\n      } else if (i === 24) {\n        timeText = !format24h ? '12 AM' : '23:59';\n      } else {\n        timeText = !format24h ? i - 12 + \" PM\" : i + \":00\";\n      }\n\n      return {\n        timeText: timeText,\n        time: i\n      };\n    });\n  }, [start, end, format24h]);\n  var handleBackgroundPress = useCallback(function (event) {\n    var yPosition = event.nativeEvent.locationY;\n    var xPosition = event.nativeEvent.locationX;\n\n    var _calcTimeByPosition = calcTimeByPosition(yPosition, HOUR_BLOCK_HEIGHT),\n        hour = _calcTimeByPosition.hour,\n        minutes = _calcTimeByPosition.minutes;\n\n    var dateByPosition = calcDateByPosition(xPosition, timelineLeftInset, numberOfDays, date);\n    lastLongPressEventTime.current = {\n      hour: hour,\n      minutes: minutes,\n      date: dateByPosition\n    };\n    var timeString = buildTimeString(hour, minutes, dateByPosition);\n    onBackgroundLongPress == null ? void 0 : onBackgroundLongPress(timeString, lastLongPressEventTime.current);\n  }, [onBackgroundLongPress, date]);\n  var handlePressOut = useCallback(function () {\n    if (lastLongPressEventTime.current) {\n      var _lastLongPressEventTi = lastLongPressEventTime.current,\n          hour = _lastLongPressEventTi.hour,\n          minutes = _lastLongPressEventTi.minutes,\n          _date = _lastLongPressEventTi.date;\n      var timeString = buildTimeString(hour, minutes, _date);\n      onBackgroundLongPressOut == null ? void 0 : onBackgroundLongPressOut(timeString, lastLongPressEventTime.current);\n      lastLongPressEventTime.current = undefined;\n    }\n  }, [onBackgroundLongPressOut, date]);\n  return React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n    onLongPress: handleBackgroundPress,\n    onPressOut: handlePressOut\n  }, React.createElement(View, {\n    style: StyleSheet.absoluteFillObject\n  })), unavailableHoursBlocks.map(function (block, index) {\n    return React.createElement(View, {\n      key: index,\n      style: [styles.unavailableHoursBlock, block, unavailableHoursColor ? {\n        backgroundColor: unavailableHoursColor\n      } : undefined, {\n        left: timelineLeftInset\n      }]\n    });\n  }), hours.map(function (_ref, index) {\n    var timeText = _ref.timeText,\n        time = _ref.time;\n    return React.createElement(React.Fragment, {\n      key: time\n    }, React.createElement(Text, {\n      key: \"timeLabel\" + time,\n      style: [styles.timeLabel, {\n        top: offset * index - 6,\n        width: timelineLeftInset - 16\n      }]\n    }, timeText), time === start ? null : React.createElement(View, {\n      key: \"line\" + time,\n      style: [styles.line, {\n        top: offset * index,\n        width: dimensionWidth - EVENT_DIFF,\n        left: timelineLeftInset - 16\n      }]\n    }), React.createElement(View, {\n      key: \"lineHalf\" + time,\n      style: [styles.line, {\n        top: offset * (index + 0.5),\n        width: dimensionWidth - EVENT_DIFF,\n        left: timelineLeftInset - 16\n      }]\n    }));\n  }), times(numberOfDays, function (index) {\n    return React.createElement(View, {\n      key: index,\n      style: [styles.verticalLine, {\n        right: (index + 1) * width / numberOfDays\n      }]\n    });\n  }));\n};\n\nexport default React.memo(TimelineHours);","map":{"version":3,"sources":["C:/Users/Eileen Twimasi/WebstormProjects/NYU-Library-Frontend/node_modules/react-native-calendars/src/timeline/TimelineHours.js"],"names":["range","times","React","useCallback","useMemo","useRef","constants","buildTimeString","calcTimeByPosition","calcDateByPosition","buildUnavailableHoursBlocks","HOUR_BLOCK_HEIGHT","dimensionWidth","screenWidth","EVENT_DIFF","TimelineHours","props","format24h","start","end","date","unavailableHours","unavailableHoursColor","styles","onBackgroundLongPress","onBackgroundLongPressOut","width","numberOfDays","timelineLeftInset","lastLongPressEventTime","offset","unavailableHoursBlocks","dayStart","dayEnd","hours","map","i","timeText","time","handleBackgroundPress","event","yPosition","nativeEvent","locationY","xPosition","locationX","hour","minutes","dateByPosition","current","timeString","handlePressOut","undefined","StyleSheet","absoluteFillObject","block","index","unavailableHoursBlock","backgroundColor","left","timeLabel","top","line","verticalLine","right","memo"],"mappings":"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","sourcesContent":["import range from 'lodash/range';\nimport times from 'lodash/times';\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { View, Text, TouchableWithoutFeedback, StyleSheet } from 'react-native';\nimport constants from '../commons/constants';\nimport { buildTimeString, calcTimeByPosition, calcDateByPosition } from './helpers/presenter';\nimport { buildUnavailableHoursBlocks, HOUR_BLOCK_HEIGHT } from './Packer';\nconst dimensionWidth = constants.screenWidth;\nconst EVENT_DIFF = 20;\nconst TimelineHours = (props) => {\n    const { format24h, start = 0, end = 24, date, unavailableHours, unavailableHoursColor, styles, onBackgroundLongPress, onBackgroundLongPressOut, width, numberOfDays = 1, timelineLeftInset = 0 } = props;\n    const lastLongPressEventTime = useRef();\n    // const offset = this.calendarHeight / (end - start);\n    const offset = HOUR_BLOCK_HEIGHT;\n    const unavailableHoursBlocks = buildUnavailableHoursBlocks(unavailableHours, { dayStart: start, dayEnd: end });\n    const hours = useMemo(() => {\n        return range(start, end + 1).map(i => {\n            let timeText;\n            if (i === start) {\n                timeText = '';\n            }\n            else if (i < 12) {\n                timeText = !format24h ? `${i} AM` : `${i}:00`;\n            }\n            else if (i === 12) {\n                timeText = !format24h ? `${i} PM` : `${i}:00`;\n            }\n            else if (i === 24) {\n                timeText = !format24h ? '12 AM' : '23:59';\n            }\n            else {\n                timeText = !format24h ? `${i - 12} PM` : `${i}:00`;\n            }\n            return { timeText, time: i };\n        });\n    }, [start, end, format24h]);\n    const handleBackgroundPress = useCallback(event => {\n        const yPosition = event.nativeEvent.locationY;\n        const xPosition = event.nativeEvent.locationX;\n        const { hour, minutes } = calcTimeByPosition(yPosition, HOUR_BLOCK_HEIGHT);\n        const dateByPosition = calcDateByPosition(xPosition, timelineLeftInset, numberOfDays, date);\n        lastLongPressEventTime.current = { hour, minutes, date: dateByPosition };\n        const timeString = buildTimeString(hour, minutes, dateByPosition);\n        onBackgroundLongPress?.(timeString, lastLongPressEventTime.current);\n    }, [onBackgroundLongPress, date]);\n    const handlePressOut = useCallback(() => {\n        if (lastLongPressEventTime.current) {\n            const { hour, minutes, date } = lastLongPressEventTime.current;\n            const timeString = buildTimeString(hour, minutes, date);\n            onBackgroundLongPressOut?.(timeString, lastLongPressEventTime.current);\n            lastLongPressEventTime.current = undefined;\n        }\n    }, [onBackgroundLongPressOut, date]);\n    return (<>\n      <TouchableWithoutFeedback onLongPress={handleBackgroundPress} onPressOut={handlePressOut}>\n        <View style={StyleSheet.absoluteFillObject}/>\n      </TouchableWithoutFeedback>\n      {unavailableHoursBlocks.map((block, index) => (<View key={index} style={[\n                styles.unavailableHoursBlock,\n                block,\n                unavailableHoursColor ? { backgroundColor: unavailableHoursColor } : undefined,\n                { left: timelineLeftInset }\n            ]}></View>))}\n\n      {hours.map(({ timeText, time }, index) => {\n            return (<React.Fragment key={time}>\n            <Text key={`timeLabel${time}`} style={[styles.timeLabel, { top: offset * index - 6, width: timelineLeftInset - 16 }]}>\n              {timeText}\n            </Text>\n            {time === start ? null : (<View key={`line${time}`} style={[styles.line, { top: offset * index, width: dimensionWidth - EVENT_DIFF, left: timelineLeftInset - 16 }]}/>)}\n            {<View key={`lineHalf${time}`} style={[styles.line, { top: offset * (index + 0.5), width: dimensionWidth - EVENT_DIFF, left: timelineLeftInset - 16 }]}/>}\n          </React.Fragment>);\n        })}\n      {times(numberOfDays, (index) => <View key={index} style={[styles.verticalLine, { right: (index + 1) * width / numberOfDays }]}/>)}\n    </>);\n};\nexport default React.memo(TimelineHours);\n"]},"metadata":{},"sourceType":"module"}